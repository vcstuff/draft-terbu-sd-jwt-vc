



TBD                                                             O. Terbu
                                                    Spruce Systems, Inc.
                                                                 D. Fett
                                                           Authlete Inc.
                                                             23 May 2023


       Verifiable Credentials based on SD-JWT with JSON payloads
                      draft-terbu-sd-jwt-vc-latest

Abstract

   This specification describes data formats, validation and processing
   rules to express Verifiable Credentials with JSON payload based on
   the securing mechanisms of SD-JWT
   [I-D.ietf-oauth-selective-disclosure-jwt].

Table of Contents

   1.  Introduction
     1.1.  The Three-Party-Model
     1.2.  Rationale
     1.3.  Requirements Notation and Conventions
     1.4.  Terms and Definitions
   2.  Scope
   3.  Use Cases
   4.  Verifiable Credentials based on SD-JWT
     4.1.  Media Type
     4.2.  Data Format
       4.2.1.  Header Parameters
       4.2.2.  Claims
     4.3.  Example
     4.4.  Verification and Processing
   5.  JWT Issuer Metadata
   6.  Verifiable Presentations
     6.1.  Data Format
       6.1.1.  Holder Binding JWT
     6.2.  Examples
     6.3.  Verification and Processing
   7.  Security Considerations
   8.  Privacy Considerations
   9.  Relationships to Other Documents
     9.1.  W3C Verifiable Credential Data Model 2.0
       9.1.1.  VC Directory
       9.1.2.  Mapping Algorithm
   10. Normative References
   11. Informative References
   Appendix A.  IANA Considerations
     A.1.  JSON Web Token Claims Registration
     A.2.  Media Types Registry
       A.2.1.  application/vc+sd-jwt
   Appendix B.  Acknowledgements
   Appendix C.  Document History
   Authors' Addresses

1.  Introduction

1.1.  The Three-Party-Model

   A Verifiable Credential is an tamper-evident statement made by an
   Issuer about a Subject of the Verifiable Credential.  Verifiable
   Credentials are issued to Holders which can present Verifiable
   Credentials to Verifiers typically in form of Verifiable
   Presentations which are secure Verifiable Credentials addressed to a
   specific audience.

   These relationships are described by the three-party-model which
   involves the following parties:

   1.  Issuer: The entity that issues the Verifiable Credential to the
       Holder.

   2.  Verifier: The entity that verifies the Verifiable Credential
       presented by the Subject, for example to prove eligibility to
       access certain services.

   3.  Holder: The person or entity being issued the Verifiable
       Credential, who may present the Verifiable Credential to a
       Verifier for verification.

   In the three-party-model, Verifiers have to trust Issuers to make
   trustworthy statements about the Subject and they can additionally
   require that the Holder provides a proof that they are the intended
   Holder of the Verifiable Credential which can important for security
   reasons.  This is only possible if an Issuer binds the Verifiable
   Credential to a specific Holder at the time of issuance.  This
   process is referred to as Holder Binding and is further described in
   [I-D.ietf-oauth-selective-disclosure-jwt].

   The three-party-model, i.e., actors, Verifiable Credentials and
   Verifiable Presentations, are further described in [VCDM2.0].
   However, this specification focuses on a specific version of the
   three-party-model which can have different features but will provide
   a representation of the model described in [VCDM2.0].

1.2.  Rationale

   JSON Web Tokens (JWTs) [RFC7519] can in principle be used to express
   Verifiable Credentials in a way that is easy to understand and
   process as it builds upon established web primitives.  However, JWTs
   do not support selective disclosure, i.e., the ability to disclose
   only a subset of the claims contained in the JWT, in the three-party-
   model as described above.  This is a common problem in the three-
   party model: An Issuer creates a Verifiable Credential for some End-
   User (Holder), who then can presents this credential to multiple
   Verifiers.  A Verifiable Credential might contain a large number of
   claims, but the Holder typically only wants to disclose a subset of
   these claims to a Verifier.  In this case, the Holder would have to
   receive a new JWT from the Issuer, containing only the claims that
   should be disclosed, for each interaction with a new Verifier.  This
   is inefficient, costly, and the necessary interaction with the Issuer
   introduces additional privacy risks.

   Selective Disclosure JWT (SD-JWT) [SD-JWT] is a specification that
   introduces conventions to support selective disclosure for JWTs: For
   an SD-JWT document, a Holder can decide which claims to release
   (within bounds defined by the Issuer).  This format is therefore
   perfectly suitable for Verifiable Credentials and Verifiable
   Presentations.

   SD-JWT itself does not define the claims that must be used within the
   payload or their semantics.  This specification therefore defines how
   Verifiable Credentials can be expressed using SD-JWT.

   JWTs are used to protect the integrity of JSON payloads, which can
   contain claims that are registered in the IANA JWT Claim Registry, as
   well as public and private claims.  Private claims are not relevant
   for this specification due to the openness of the three-party-model.
   Since SD-JWTs are based on JWTs, this specification aims to express
   the basic Verifiable Credential data model purely through JSON
   payloads, using registered claims while allowing Issuers to use
   additional registered claims, as well as new or existing public
   claims, to make statements about the Subject of the Verifiable
   Credential.

1.3.  Requirements Notation and Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in RFC
   2119 [RFC2119].

1.4.  Terms and Definitions

   Credential:  A set of one or more claims about a subject made by a
      Credential Issuer.

   Verifiable Credential:  An Issuer-signed Credential whose
      authenticity can be cryptographically verified.

   Verifiable Presentation  Data derived from a Verifiable Credential
      that is shared with a specific Verifier.  The authorship of the
      data can be trusted after a process of cryptographic verification.

   Issuer:  An entity that issues a Verifiable Credential.

   Holder:  An entity that receives Verifiable Credentials from the
      Issuer and has control over them.  Holders present Verifiable
      Credentials as Verifiable Presentations to Verifiers and can prove
      control over them.

   Verifier:  An entity that requests, validates and processes
      Verifiable Credentials and Verifiable Presenations.

   Verifiable Credential based on SD-JWT (VC-SD-JWT):  A Verifiable
      Credential encoded using the Issuance format defined in
      [I-D.ietf-oauth-selective-disclosure-jwt].

   Verifiable Presentation based on SD-JWT (VP-SD-JWT):  A Verifiable
      Presentation encoded using the Presentation format defined in
      [I-D.ietf-oauth-selective-disclosure-jwt].

2.  Scope

   *  This specification defines

      -  Data model and media types for Verifiable Credentials and
         Presentations based on SD-JWTs.

      -  Validation and processing rules for Verifiers

      -  Mapping mechanisms to related other data models

3.  Use Cases

   TBD: explain use cases of the three-party-model.

   TBD: conventional crypt, hardware security, hsm, mobile secure area,
   compliance with FIPS

4.  Verifiable Credentials based on SD-JWT

   This section defines encoding, validation and processing rules for
   VC-SD-JWTs.

4.1.  Media Type

   VC-SD-JWTs compliant with this specification MUST use the media type
   application/vc+sd-jwt as defined in Appendix A.2.1.

4.2.  Data Format

   VC-SD-JWTs MUST be encoded using the SD-JWT Combined Format for
   Issuance as defined in [I-D.ietf-oauth-selective-disclosure-jwt].

   VC-SD-JWTs MUST contain all Disclosures corresponding to their SD-JWT
   component except for Decoy Digests as per section 5.1.1.3. of
   [I-D.ietf-oauth-selective-disclosure-jwt].

4.2.1.  Header Parameters

   This section defines JWT header parameters for the SD-JWT component
   of the VC-SD-JWT.

   The typ header parameter of the SD-JWT MUST be present.  The typ
   value MUST use vc+sd-jwt.  This indicates that the payload of the SD-
   JWT contains plain JSON and follows the rules as defined in this
   specification.  It further indicates that the SD-JWT is a SD-JWT
   component of a VC-SD-JWT.

   The following is a non-normative example of a decoded SD-JWT header:

   {
     "alg": "ES256",
     "typ": "vc+sd-jwt"
   }

4.2.2.  Claims

   This section defines the claims that can be included in the payload
   of VC-SD-JWTs.

4.2.2.1.  type claim

   This specification defines the JWT claim type.  The type claim is
   used to express the type of the JSON object that is secured by the
   JWT.  The type value MUST be a case-sensitive StringOrURI value.

   The following is a non-normative example of how type is used to
   express a type:

   {
     "type": "SomeType"
   }

4.2.2.2.  Registered JWT Claims

   VC-SD-JWTs MAY use any claim registered in the "JSON Web Token
   Claims" registry as defined in [RFC7519].

   If present, the following registered JWT claims MUST be included in
   the SD-JWT and MUST NOT be included in the Disclosures, i.e. cannot
   be selectively disclosed:

   *  iss

      -  REQUIRED.  The Issuer of the Verifiable Credential.  The value
         of iss MUST be a URI.  See [RFC7519] for more information.

   *  iat

      -  REQUIRED.  The time of issuance of the Verifiable Credential.
         See [RFC7519] for more information.

   *  nbf

      -  OPTIONAL.  The time before which the Verifiable Credential MUST
         NOT be accepted before validating.  See [RFC7519] for more
         information.

   *  exp

      -  OPTIONAL.  The expiry time of the Verifiable Credential after
         which the Verifiable Credential is no longer valid.  See
         [RFC7519] for more information.

   *  cnf

      -  OPTIONAL.  The confirmation method which can be used to verify
         the Holder Binding of the Verifiable Presentation.  See
         [RFC7800] for more information.

   *  type

      -  REQUIRED.  The type of the Verifiable Credential, e.g.,
         IdentityCredential, as defined in {type-claim}.

   *  status

      -  OPTIONAL.  The information on how to read the status of the
         Verifiable Credential.  See [TBD] for more information.

   The following registered JWT claims MAY be contained in the SD-JWT or
   in the Disclosures and MAY be selectively disclosed:

   *  sub

      -  OPTIONAL.  The identifier of the Subject of the Verifiable
         Credential.  The value of sub MUST be a URI.  The Issuer MAY
         use it to provide the Subject identifier assigned by the
         Issuer.  There is no requirement for a binding to exist between
         sub and cnf claims.

4.2.2.3.  Public JWT claims

   Additional public claims MAY be used in VC-SD-JWTs depending on the
   application.

4.3.  Example

   The following is a non-normative example of an unsecured input
   payload of an VC-SD-JWT.

   {
     "type": "IdentityCredential",
     "given_name": "John",
     "family_name": "Doe",
     "email": "johndoe@example.com",
     "phone_number": "+1-202-555-0101",
     "address": {
       "street_address": "123 Main St",
       "locality": "Anytown",
       "region": "Anystate",
       "country": "US"
     },
     "birthdate": "1940-01-01",
     "is_over_18": true,
     "is_over_21": true,
     "is_over_65": true
   }

   The following is a non-normative example of how the Credential above
   can be used in a SD-JWT where the resulting VC-SD-JWT contains only
   claims about the Subject that are selectively disclosable:

   {
     "_sd": [
       "09vKrJMOlyTWM0sjpu_pdOBVBQ2M1y3KhpH515nXkpY",
       "2rsjGbaC0ky8mT0pJrPioWTq0_daw1sX76poUlgCwbI",
       "EkO8dhW0dHEJbvUHlE_VCeuC9uRELOieLZhh7XbUTtA",
       "IlDzIKeiZdDwpqpK6ZfbyphFvz5FgnWa-sN6wqQXCiw",
       "JzYjH4svliH0R3PyEMfeZu6Jt69u5qehZo7F7EPYlSE",
       "PorFbpKuVu6xymJagvkFsFXAbRoc2JGlAUA2BA4o7cI",
       "TGf4oLbgwd5JQaHyKVQZU9UdGE0w5rtDsrZzfUaomLo",
       "jdrTE8YcbY4EifugihiAe_BPekxJQZICeiUQwY9QqxI",
       "jsu9yVulwQQlhFlM_3JlzMaSFzglhQG0DpfayQwLUK4"
     ],
     "iss": "https://example.com/issuer",
     "iat": 1683000000,
     "exp": 1883000000,
     "type": "IdentityCredential",
     "_sd_alg": "sha-256",
     "cnf": {
       "jwk": {
         "kty": "EC",
         "crv": "P-256",
         "x": "TCAER19Zvu3OHF4j4W4vfSVoHIP1ILilDls7vCeGemc",
         "y": "ZxjiWWbZMQGHVWKVQ4hbSIirsVfuecCE6t4jT9F2HZQ"
       }
     }
   }

   Note that a cnf claim has been added to the SD-JWT payload to express
   the confirmation method of the holder binding.

   The following are the Disclosures belonging to the SD-JWT payload
   above:

   *Claim given_name:*

   *  SHA-256 Hash: jsu9yVulwQQlhFlM_3JlzMaSFzglhQG0DpfayQwLUK4

   *  Disclosure:
      WyIyR0xDNDJzS1F2ZUNmR2ZyeU5STjl3IiwgImdpdmVuX25hbWUiLCAiSm9o
      biJd

   *  Contents: ["2GLC42sKQveCfGfryNRN9w", "given_name", "John"]

   *Claim family_name:*

   *  SHA-256 Hash: TGf4oLbgwd5JQaHyKVQZU9UdGE0w5rtDsrZzfUaomLo

   *  Disclosure:
      WyJlbHVWNU9nM2dTTklJOEVZbnN4QV9BIiwgImZhbWlseV9uYW1lIiwgIkRv
      ZSJd

   *  Contents: ["eluV5Og3gSNII8EYnsxA_A", "family_name", "Doe"]

   *Claim email:*

   *  SHA-256 Hash: JzYjH4svliH0R3PyEMfeZu6Jt69u5qehZo7F7EPYlSE

   *  Disclosure:
      WyI2SWo3dE0tYTVpVlBHYm9TNXRtdlZBIiwgImVtYWlsIiwgImpvaG5kb2VA
      ZXhhbXBsZS5jb20iXQ

   *  Contents: ["6Ij7tM-a5iVPGboS5tmvVA", "email",
      "johndoe@example.com"]

   *Claim phone_number:*

   *  SHA-256 Hash: PorFbpKuVu6xymJagvkFsFXAbRoc2JGlAUA2BA4o7cI

   *  Disclosure:
      WyJlSThaV205UW5LUHBOUGVOZW5IZGhRIiwgInBob25lX251bWJlciIsICIr
      MS0yMDItNTU1LTAxMDEiXQ

   *  Contents: ["eI8ZWm9QnKPpNPeNenHdhQ", "phone_number",
      "+1-202-555-0101"]

   *Claim address:*

   *  SHA-256 Hash: IlDzIKeiZdDwpqpK6ZfbyphFvz5FgnWa-sN6wqQXCiw

   *  Disclosure:
      WyJRZ19PNjR6cUF4ZTQxMmExMDhpcm9BIiwgImFkZHJlc3MiLCB7InN0cmVl
      dF9hZGRyZXNzIjogIjEyMyBNYWluIFN0IiwgImxvY2FsaXR5IjogIkFueXRv
      d24iLCAicmVnaW9uIjogIkFueXN0YXRlIiwgImNvdW50cnkiOiAiVVMifV0

   *  Contents: ["Qg_O64zqAxe412a108iroA", "address", {"street_address":
      "123 Main St", "locality": "Anytown", "region": "Anystate",
      "country": "US"}]

   *Claim birthdate:*

   *  SHA-256 Hash: jdrTE8YcbY4EifugihiAe_BPekxJQZICeiUQwY9QqxI

   *  Disclosure:
      WyJBSngtMDk1VlBycFR0TjRRTU9xUk9BIiwgImJpcnRoZGF0ZSIsICIxOTQw
      LTAxLTAxIl0

   *  Contents: ["AJx-095VPrpTtN4QMOqROA", "birthdate", "1940-01-01"]

   *Claim is_over_18:*

   *  SHA-256 Hash: 09vKrJMOlyTWM0sjpu_pdOBVBQ2M1y3KhpH515nXkpY

   *  Disclosure:
      WyJQYzMzSk0yTGNoY1VfbEhnZ3ZfdWZRIiwgImlzX292ZXJfMTgiLCB0cnVl
      XQ

   *  Contents: ["Pc33JM2LchcU_lHggv_ufQ", "is_over_18", true]

   *Claim is_over_21:*

   *  SHA-256 Hash: 2rsjGbaC0ky8mT0pJrPioWTq0_daw1sX76poUlgCwbI

   *  Disclosure:
      WyJHMDJOU3JRZmpGWFE3SW8wOXN5YWpBIiwgImlzX292ZXJfMjEiLCB0cnVl
      XQ

   *  Contents: ["G02NSrQfjFXQ7Io09syajA", "is_over_21", true]

   *Claim is_over_65:*

   *  SHA-256 Hash: EkO8dhW0dHEJbvUHlE_VCeuC9uRELOieLZhh7XbUTtA

   *  Disclosure:
      WyJsa2x4RjVqTVlsR1RQVW92TU5JdkNBIiwgImlzX292ZXJfNjUiLCB0cnVl
      XQ

   *  Contents: ["lklxF5jMYlGTPUovMNIvCA", "is_over_65", true]

   The SD-JWT and the Disclosures would then be serialized by the Issuer
   into the following format for issuance to the Holder:

   eyJhbGciOiAiRVMyNTYifQ.eyJfc2QiOiBbIjA5dktySk1PbHlUV00wc2pwdV9wZE9CV
   kJRMk0xeTNLaHBINTE1blhrcFkiLCAiMnJzakdiYUMwa3k4bVQwcEpyUGlvV1RxMF9kY
   Xcxc1g3NnBvVWxnQ3diSSIsICJFa084ZGhXMGRIRUpidlVIbEVfVkNldUM5dVJFTE9pZ
   UxaaGg3WGJVVHRBIiwgIklsRHpJS2VpWmREd3BxcEs2WmZieXBoRnZ6NUZnbldhLXNON
   ndxUVhDaXciLCAiSnpZakg0c3ZsaUgwUjNQeUVNZmVadTZKdDY5dTVxZWhabzdGN0VQW
   WxTRSIsICJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJI
   iwgIlRHZjRvTGJnd2Q1SlFhSHlLVlFaVTlVZEdFMHc1cnREc3JaemZVYW9tTG8iLCAia
   mRyVEU4WWNiWTRFaWZ1Z2loaUFlX0JQZWt4SlFaSUNlaVVRd1k5UXF4SSIsICJqc3U5e
   VZ1bHdRUWxoRmxNXzNKbHpNYVNGemdsaFFHMERwZmF5UXdMVUs0Il0sICJpc3MiOiAia
   HR0cHM6Ly9leGFtcGxlLmNvbS9pc3N1ZXIiLCAiaWF0IjogMTY4MzAwMDAwMCwgImV4c
   CI6IDE4ODMwMDAwMDAsICJ0eXBlIjogIklkZW50aXR5Q3JlZGVudGlhbCIsICJfc2RfY
   WxnIjogInNoYS0yNTYiLCAiY25mIjogeyJqd2siOiB7Imt0eSI6ICJFQyIsICJjcnYiO
   iAiUC0yNTYiLCAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsc
   zd2Q2VHZW1jIiwgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2d
   DRqVDlGMkhaUSJ9fX0.XIpg3bCkZJk1ngihsB0nMAghN-0rmSRKZynGYENOWWfofdUk3
   4qMqCLDxnN_ke4HyDqRw3traVrhKPcQaKFDmw~WyIyR0xDNDJzS1F2ZUNmR2ZyeU5STj
   l3IiwgImdpdmVuX25hbWUiLCAiSm9obiJd~WyJlbHVWNU9nM2dTTklJOEVZbnN4QV9BI
   iwgImZhbWlseV9uYW1lIiwgIkRvZSJd~WyI2SWo3dE0tYTVpVlBHYm9TNXRtdlZBIiwg
   ImVtYWlsIiwgImpvaG5kb2VAZXhhbXBsZS5jb20iXQ~WyJlSThaV205UW5LUHBOUGVOZ
   W5IZGhRIiwgInBob25lX251bWJlciIsICIrMS0yMDItNTU1LTAxMDEiXQ~WyJRZ19PNj
   R6cUF4ZTQxMmExMDhpcm9BIiwgImFkZHJlc3MiLCB7InN0cmVldF9hZGRyZXNzIjogIj
   EyMyBNYWluIFN0IiwgImxvY2FsaXR5IjogIkFueXRvd24iLCAicmVnaW9uIjogIkFueX
   N0YXRlIiwgImNvdW50cnkiOiAiVVMifV0~WyJBSngtMDk1VlBycFR0TjRRTU9xUk9BIi
   wgImJpcnRoZGF0ZSIsICIxOTQwLTAxLTAxIl0~WyJQYzMzSk0yTGNoY1VfbEhnZ3ZfdW
   ZRIiwgImlzX292ZXJfMTgiLCB0cnVlXQ~WyJHMDJOU3JRZmpGWFE3SW8wOXN5YWpBIiw
   gImlzX292ZXJfMjEiLCB0cnVlXQ~WyJsa2x4RjVqTVlsR1RQVW92TU5JdkNBIiwgImlz
   X292ZXJfNjUiLCB0cnVlXQ

4.4.  Verification and Processing

   The recipient of the VC-SD-JWT MUST process and verify an VC-SD-JWT
   as follows:

   1.  REQUIRED.  Process and verify the SD-JWT as defined in section 6
       of [I-D.ietf-oauth-selective-disclosure-jwt].  For the
       verification, the iss claim in the SD-JWT MAY be used to retrieve
       the public key from the JWT Issuer Metadata configuration (as
       defined in Section 5 of the VC-SD-JWT issuer.  A Verifier MAY use
       alternative methods to obtain the public key to verify the
       signature of the SD-JWT.

   2.  OPTIONAL.  If status is present in the verified payload of the
       SD-JWT, the status SHOULD be checked.  It depends on the Verifier
       policy to reject or accept an VP-SD-JWT based on the status of
       the Verifiable Credential.

   Any claims used that are not understood MUST be ignored.

   Additional validation rules MAY apply, but their use is out of the
   scope of this specification.

5.  JWT Issuer Metadata

   This specification defines the JWT Issuer Metadata to retrieve the
   JWT Issuer Metadata configuration of the JWT Issuer of the JWT.  The
   JWT Issuer is identified by the iss claim in the JWT.  Use of the JWT
   Issuer Metadata is OPTIONAL.

   JWT Issuers publishing JWT Issuer Metadata MUST make a JWT Issuer
   Metadata configuration available at the path formed by concatenating
   the string /.well-known/jwt-issuer to the iss claim value in the JWT.
   The iss MUST be a case-sensitive URL using the HTTPS scheme that
   contains scheme, host and, optionally, port number and path
   components, but no query or fragment components.

   The JWT Issuer Metadata configuration MUST be a JSON document
   compliant with this specification and MUST be returned using the
   application/json content type.

   This specification defines the following JWT Issuer Metadata
   parameters:

   *  jwks_uri

      -  OPTIONAL.  URL string referencing the JWT Issuer's JSON Web Key
         (JWK) Set [RFC7517] document which contains the JWT Issuer's
         public keys.  The value of this field MUST point to a valid JWK
         Set document.  Use of this parameter is RECOMMENDED, as it
         allows for easy key rotation.

   *  jwks

      -  OPTIONAL.  JWT Issuer's JSON Web Key Set [RFC7517] document
         value, which contains the JWT Issuer's public keys.  The value
         of this field MUST be a JSON object containing a valid JWK Set.
         This parameter is intended to be used by JWT Issuer that cannot
         use the jwks_uri parameter.

   JWT Issuer Metadata MUST include either jwks_uri or jwks in their JWT
   Issuer Metadata, but not both.

   It is RECOMMENDED that the JWT contains a kid JWT header parameter
   that can be used to lookup the public key in the JWK Set included by
   value or referenced in the JWT Issuer Metadata.

   The following is a non-normative example of a JWT Issuer Metadata
   including jwks:

   {
      "jwks":{
         "keys":[
            {
               "e":"AQAB",
               "n":"nj3YJwsLUFl9BmpAbkOswCNVx17Eh9wMO-_AReZwBqfaWFcfG
      HrZXsIV2VMCNVNU8Tpb4obUaSXcRcQ-VMsfQPJm9IzgtRdAY8NN8Xb7PEcYyk
      lBjvTtuPbpzIaqyiUepzUXNDFuAOOkrIol3WmflPUUgMKULBN0EUd1fpOD70p
      RM0rlp_gg_WNUKoW1V-3keYUJoXH9NztEDm_D2MQXj9eGOJJ8yPgGL8PAZMLe
      2R7jb9TxOCPDED7tY_TU4nFPlxptw59A42mldEmViXsKQt60s1SLboazxFKve
      qXC_jpLUt22OC6GUG63p-REw-ZOr3r845z50wMuzifQrMI9bQ",
               "kty":"RSA"
            }
         ]
      }
   }

   The following is a non-normative example of a JWT Issuer Metadata
   including jwks_uri:

   {
      "jwks_uri":"https://jwt-issuer.example.org/my_public_keys.jwks"
   }

6.  Verifiable Presentations

   This section defines encoding, validation and processing rules for
   VP-SD-JWTs.

6.1.  Data Format

   VP-SD-JWTs MUST be encoded using the SD-JWT Combined Format for
   Presentation as defined in [I-D.ietf-oauth-selective-disclosure-jwt].

   VP-SD-JWTs MAY contain a Holder Binding JWT as described in
   [I-D.ietf-oauth-selective-disclosure-jwt].

6.1.1.  Holder Binding JWT

   If the VP-SD-JWT includes a Holder Binding JWT, the following claims
   are used within the Holder Binding JWT:

   *  nonce

      -  REQUIRED.  String value used to associate a transaction between
         a Verifier an a Holder, and to mitigate replay attacks.  The
         value is passed through unmodified from the Verifier to the
         Holder Binding JWT.  Sufficient entropy MUST be present in the
         nonce values used to prevent attackers from guessing values.

   *  aud

      -  REQUIRED.  The intended recipient of the Holder Binding JWT
         which is typically the Verifier.  See [RFC7519] for more
         information.

   *  iat

      -  REQUIRED.  The time of issuance of the Holder Binding JWT.  See
         [RFC7519] for more information.

   *  exp

      -  OPTIONAL.  The expiration time of the signature when the Holder
         Binding is no longer considered valid.  See [RFC7519] for more
         information.

   The Holder Binding JWT MAY include addtional claims which when not
   understood MUST be ignored.

6.2.  Examples

   The following is a non-normative example of a presentation of the SD-
   JWT shown above including a Holder Binding JWT:

   eyJhbGciOiAiRVMyNTYifQ.eyJfc2QiOiBbIjA5dktySk1PbHlUV00wc2pwdV9wZE9CV
   kJRMk0xeTNLaHBINTE1blhrcFkiLCAiMnJzakdiYUMwa3k4bVQwcEpyUGlvV1RxMF9kY
   Xcxc1g3NnBvVWxnQ3diSSIsICJFa084ZGhXMGRIRUpidlVIbEVfVkNldUM5dVJFTE9pZ
   UxaaGg3WGJVVHRBIiwgIklsRHpJS2VpWmREd3BxcEs2WmZieXBoRnZ6NUZnbldhLXNON
   ndxUVhDaXciLCAiSnpZakg0c3ZsaUgwUjNQeUVNZmVadTZKdDY5dTVxZWhabzdGN0VQW
   WxTRSIsICJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJI
   iwgIlRHZjRvTGJnd2Q1SlFhSHlLVlFaVTlVZEdFMHc1cnREc3JaemZVYW9tTG8iLCAia
   mRyVEU4WWNiWTRFaWZ1Z2loaUFlX0JQZWt4SlFaSUNlaVVRd1k5UXF4SSIsICJqc3U5e
   VZ1bHdRUWxoRmxNXzNKbHpNYVNGemdsaFFHMERwZmF5UXdMVUs0Il0sICJpc3MiOiAia
   HR0cHM6Ly9leGFtcGxlLmNvbS9pc3N1ZXIiLCAiaWF0IjogMTY4MzAwMDAwMCwgImV4c
   CI6IDE4ODMwMDAwMDAsICJ0eXBlIjogIklkZW50aXR5Q3JlZGVudGlhbCIsICJfc2RfY
   WxnIjogInNoYS0yNTYiLCAiY25mIjogeyJqd2siOiB7Imt0eSI6ICJFQyIsICJjcnYiO
   iAiUC0yNTYiLCAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsc
   zd2Q2VHZW1jIiwgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2d
   DRqVDlGMkhaUSJ9fX0.XIpg3bCkZJk1ngihsB0nMAghN-0rmSRKZynGYENOWWfofdUk3
   4qMqCLDxnN_ke4HyDqRw3traVrhKPcQaKFDmw~WyJRZ19PNjR6cUF4ZTQxMmExMDhpcm
   9BIiwgImFkZHJlc3MiLCB7InN0cmVldF9hZGRyZXNzIjogIjEyMyBNYWluIFN0IiwgIm
   xvY2FsaXR5IjogIkFueXRvd24iLCAicmVnaW9uIjogIkFueXN0YXRlIiwgImNvdW50cn
   kiOiAiVVMifV0~eyJhbGciOiAiRVMyNTYifQ.eyJub25jZSI6ICIxMjM0NTY3ODkwIiw
   gImF1ZCI6ICJodHRwczovL2V4YW1wbGUuY29tL3ZlcmlmaWVyIiwgImlhdCI6IDE2ODQ
   4Mjc4NDd9.fuyhcwOVMssSksTW4kI29i6oWy2tX03va8JqZwMvRfrinktKLdsSSaI9ZW
   tPjCUXYLzpZ4wg37NDv4g_6CkfAQ

   In this presentation, the Holder provides only the Disclosure for the
   claim address.  Other claims are not disclosed to the Verifier.

   The following example shows a presentation of a (different) SD-JWT
   without a Holder Binding JWT:

   eyJhbGciOiAiRVMyNTYifQ.eyJfc2QiOiBbIjA5dktySk1PbHlUV00wc2pwdV9wZE9CV
   kJRMk0xeTNLaHBINTE1blhrcFkiLCAiMnJzakdiYUMwa3k4bVQwcEpyUGlvV1RxMF9kY
   Xcxc1g3NnBvVWxnQ3diSSIsICJFa084ZGhXMGRIRUpidlVIbEVfVkNldUM5dVJFTE9pZ
   UxaaGg3WGJVVHRBIiwgIklsRHpJS2VpWmREd3BxcEs2WmZieXBoRnZ6NUZnbldhLXNON
   ndxUVhDaXciLCAiSnpZakg0c3ZsaUgwUjNQeUVNZmVadTZKdDY5dTVxZWhabzdGN0VQW
   WxTRSIsICJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJI
   iwgIlRHZjRvTGJnd2Q1SlFhSHlLVlFaVTlVZEdFMHc1cnREc3JaemZVYW9tTG8iLCAia
   mRyVEU4WWNiWTRFaWZ1Z2loaUFlX0JQZWt4SlFaSUNlaVVRd1k5UXF4SSIsICJqc3U5e
   VZ1bHdRUWxoRmxNXzNKbHpNYVNGemdsaFFHMERwZmF5UXdMVUs0Il0sICJpc3MiOiAia
   HR0cHM6Ly9leGFtcGxlLmNvbS9pc3N1ZXIiLCAiaWF0IjogMTY4MzAwMDAwMCwgImV4c
   CI6IDE4ODMwMDAwMDAsICJ0eXBlIjogIklkZW50aXR5Q3JlZGVudGlhbCIsICJfc2RfY
   WxnIjogInNoYS0yNTYifQ.h-YWsfbJLCHkeU20v3ec8oa9bcYK35mhXOaEXGKnyfTxMB
   TLLKTgVTNFJRWByaiZMCGVCh2Fw2O1pHY7R_hHbw~WyJRZ19PNjR6cUF4ZTQxMmExMDh
   pcm9BIiwgImFkZHJlc3MiLCB7InN0cmVldF9hZGRyZXNzIjogIjEyMyBNYWluIFN0Iiw
   gImxvY2FsaXR5IjogIkFueXRvd24iLCAicmVnaW9uIjogIkFueXN0YXRlIiwgImNvdW5
   0cnkiOiAiVVMifV0~

6.3.  Verification and Processing

   The Verifier MUST process and verify an VP-SD-JWT as follows:

   1.  REQUIRED.  When processing and verifying the VP-SD-JWT, the
       Verifier MUST follow the same verification and processing rules
       as defined in {vc-sd-jwt-verification-and-processing}.

   2.  OPTIONAL.  If provided, the Verifier MUST verify the Holder
       Binding JWT according to
       [I-D.ietf-oauth-selective-disclosure-jwt].  To verify the Holder
       Binding JWT, the cnf claim of the SD-JWT MUST be used.

7.  Security Considerations

   TBD: Verifier provided nonce.

8.  Privacy Considerations

   TBD: Holder provided nonce via jti.

9.  Relationships to Other Documents

9.1.  W3C Verifiable Credential Data Model 2.0

   The W3C VCDM 2.0 [VC-DATA] defines a JSON-LD vocabulary for
   Verifiable Credentials and Verifiable Presentations.  To interop with
   the W3C VCDM 2.0 data model defined in [VC-DATA], this specification
   defines a mapping algorithm for VC-SD-JWT and VP-SD-JWT to the
   vocabulary and data model defined W3C VCDM 2.0 which is based on
   JSON-LD.

9.1.1.  VC Directory

   This specification registers the media type application/vc+sd-jwt in
   the W3C Verifiable Credentials (VC) Directory.

9.1.2.  Mapping Algorithm

   The following is a uni-directional transformation algorithm that
   takes in a VC-SD-JWT conformant to this specification and maps it to
   the corresponding properties in the W3C VCDM 2.0 [VCDM2.0] which is
   based on a JSON-LD vocabulary.  It includes specific handling for JWT
   claims used in this specification.  The function returns a Verifiable
   Credential object in the W3C VCDM 2.0 format.

   function get_credential_from_vc_sd_jwt(vc_sd_jwt):
     // TBD
     return credential

   function map_vc_sd_jwt_to_w3c(vc_sd_jwt):

     // construct input credential (JSON object)
     credential = get_credential_from_vc_sd_jwt(vc_sd_jwt)

     return map_to_w3c(credential)

     vc = {
       "@context": [
         "https://www.w3.org/ns/credentials/v2"
       ]
     }
     vc.issuedAt = epochTimeToISO(credential.iat)
     vc.validFrom = epochTimeToISO(credential.nbf)
     vc.validUntil = epochTimeToISO(credential.exp)
     vc.id = credential.jti
     vc.issuer = credential.iss
     vc.type = credential.type

     // remove all handled claims
     credential = drop_claims(credential, ...)

     // add all remaining claims to credentialSubject
     // ignore other claims such as cnf where no corresponding
     // representation exists
     vc.credentialSubject = {
       "id": credential.sub,
       ... credential
     }

     return vc

   The following is a uni-directional transformation algorithm from a
   VP-SD-JWT onto W3C Verifiable Presentations in pseudo-code:

   function map_vc_sd_jwt_to_w3c(vc_sd_jwt):
     TBD: similar to above but using W3C VP + VC

   ####

10.  Normative References

   [I-D.ietf-oauth-selective-disclosure-jwt]
              Fett, D., Yasuda, K., and B. Campbell, "Selective
              Disclosure for JWTs (SD-JWT)", Work in Progress, Internet-
              Draft, draft-ietf-oauth-selective-disclosure-jwt-04, 11
              April 2023, <https://datatracker.ietf.org/doc/html/draft-
              ietf-oauth-selective-disclosure-jwt-04>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7519]  Jones, M., Bradley, J., and N. Sakimura, "JSON Web Token
              (JWT)", RFC 7519, DOI 10.17487/RFC7519, May 2015,
              <https://www.rfc-editor.org/info/rfc7519>.

   [RFC7800]  Jones, M., Bradley, J., and H. Tschofenig, "Proof-of-
              Possession Key Semantics for JSON Web Tokens (JWTs)",
              RFC 7800, DOI 10.17487/RFC7800, April 2016,
              <https://www.rfc-editor.org/info/rfc7800>.

11.  Informative References

   [RFC7517]  Jones, M., "JSON Web Key (JWK)", RFC 7517,
              DOI 10.17487/RFC7517, May 2015,
              <https://www.rfc-editor.org/info/rfc7517>.

   [VC-DATA]  Sporny, M., Longley, D., and D. Chadwick, "Verifiable
              Credentials Data Model v2.0", 4 May 2023,
              <https://www.w3.org/TR/vc-data-model-2.0/>.

Appendix A.  IANA Considerations

A.1.  JSON Web Token Claims Registration

   Claim Name: "type" o Claim Description: Credential Type o Change
   Controller: IESG o Specification Document(s): Section Section 4.2.2.1
   of this document

A.2.  Media Types Registry

A.2.1.  application/vc+sd-jwt

   The Internet media type for a VC-SD-JWT is application/vc+sd-jwt.

   Type name: : application

   Subtype name: : vc+sd-jwt

   Required parameters: : n/a

   Optional parameters: : n/a

   Encoding considerations: : 8-bit code points; VC-SD-JWT values are
   encoded as a series of base64url-encoded values (some of which may be
   the empty string) separated by period ('.') and tilde ('~')
   characters.

   Security considerations: : See Security Considerations in
   Section TODO.

   Interoperability considerations: : n/a

   *  Published specification: : RFC TODO

   *  Applications that use this media type: : Applications that issue,
      present, verify verifiable credentials and presentations.

   *  Additional information:

      -  Magic number(s): n/a

      -  File extension(s): n/a

      -  Macintosh file type code(s): n/a

      -  Person & email address to contact for further information: TBD

      -  Intended usage: COMMON

      -  Restrictions on usage: none

      -  Author: Oliver Terbu TODO@email.com (mailto:TODO@email.com)

      -  Change controller: IETF

Appendix B.  Acknowledgements

   We would like to thank Alen Horvat, Christian Bormann, Giuseppe De
   Marco, Torsten Lodderstedt and Kristina Yasuda for their
   contributions (some of which substantial) to this draft and to the
   initial set of implementations.

Appendix C.  Document History

   -00

   *  Initial Version

Authors' Addresses

   Oliver Terbu
   Spruce Systems, Inc.
   Email: oliver.terbu@spruceid.com


   Daniel Fett
   Authlete Inc.
   Email: mail@danielfett.de
