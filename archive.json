{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2023-06-29T01:54:06.434880+00:00",
  "repo": "vcstuff/draft-terbu-sd-jwt-vc",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "HAS PR",
      "description": "",
      "color": "1d76db"
    },
    {
      "name": "individual-00",
      "description": "Version individual 00",
      "color": "fbca04"
    },
    {
      "name": "individual-01",
      "description": "Version individual 01",
      "color": "260824"
    },
    {
      "name": "discuss",
      "description": "Discuss",
      "color": "24F09A"
    },
    {
      "name": "NEEDS PR",
      "description": "Needs PR (typically after resolved discussion)",
      "color": "9D719F"
    },
    {
      "name": "pending close",
      "description": "",
      "color": "D0A53E"
    },
    {
      "name": "individual-??",
      "description": "Agreed future feature",
      "color": "B4C852"
    },
    {
      "name": "individual-02",
      "description": "individual-02",
      "color": "fef2c0"
    },
    {
      "name": "DO NOT MERGE",
      "description": "",
      "color": "B60205"
    },
    {
      "name": "individual-03",
      "description": "individual-03",
      "color": "e99695"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOJbVClc5kzo78",
      "title": "Support JSON-LD payload",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/2",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "would be good to normatively define both cases when payload is vanilla JSON and JSON-LD - IETF SD-JWT document only gives non-normative examples in 4a and 4b.",
      "createdAt": "2023-05-01T19:37:22Z",
      "updatedAt": "2023-05-31T09:00:38Z",
      "closedAt": "2023-05-31T09:00:37Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Wouldn't JSON-LD be better suited for a separate spec?",
          "createdAt": "2023-05-05T17:31:46Z",
          "updatedAt": "2023-05-05T17:31:46Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yes, agreed. this profile will focus only on JSON with a `typ` value `vc+sd-jwt`",
          "createdAt": "2023-05-05T22:38:49Z",
          "updatedAt": "2023-05-05T22:38:49Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Reopened this since I think we need to think through this again. ",
          "createdAt": "2023-05-25T12:46:43Z",
          "updatedAt": "2023-05-25T12:46:43Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "i disagre... especially if we will have one document how to sign vanilla JSON payload with SD-JWT and VC-JWT as proposed in issue #102, JSON-LD payload signed using SD-JWT VC being in the same draft will be very confusing. I agree that work is needed somewhere probably, but not in this draft.",
          "createdAt": "2023-05-26T20:15:58Z",
          "updatedAt": "2023-05-26T20:15:58Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with Kristina. JWT and SD-JWT is more or less the same, that's the reason why (I think) we have consensus to a have single draft for it. JSON-LD is different (typing, claims names and semantics, processing) and deserves a dedicated spec. ",
          "createdAt": "2023-05-28T10:14:55Z",
          "updatedAt": "2023-05-28T10:14:55Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "This should definitely focus on normal JSON/JWTs/SD-JWTs etc",
          "createdAt": "2023-05-30T15:23:42Z",
          "updatedAt": "2023-05-30T15:23:42Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Okay, then perhaps it make sense to also set the `cty` header accordingly. So that the JSON-LD version can be distinguished from the JSON version.",
          "createdAt": "2023-05-30T15:29:57Z",
          "updatedAt": "2023-05-30T15:29:57Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The typ should suffice.",
          "createdAt": "2023-05-31T02:05:39Z",
          "updatedAt": "2023-05-31T02:05:39Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, I think there is unanimous agreement. Closing this issue.",
          "createdAt": "2023-05-31T09:00:37Z",
          "updatedAt": "2023-05-31T09:00:37Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOJbVClc5kzsXf",
      "title": "defining `type` claim to be usable beyond SD-JWT-VC",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/3",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "`type` JWT claim should be defined in a way that makes it usable not only with SD-JWT-VC, but any other JSON based Credential Format like JWT-VC.",
      "createdAt": "2023-05-01T19:51:36Z",
      "updatedAt": "2023-05-11T13:54:18Z",
      "closedAt": "2023-05-11T13:54:18Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "that is done",
          "createdAt": "2023-05-11T13:54:18Z",
          "updatedAt": "2023-05-11T13:54:18Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOJbVClc5kzuY5",
      "title": "Define transformation logic back to the base data model in W3C VCDM 2.0.",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/4",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "- omitting `type` claim in Presentation and treating it as a default value `VerifiablePresentations`",
      "createdAt": "2023-05-01T19:58:25Z",
      "updatedAt": "2023-05-23T09:12:25Z",
      "closedAt": "2023-05-23T09:12:25Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "We will do the following:\r\n- Instead of pseudo code, we will use algorithmic description\r\n- Add algorithms for VPs and VCs.",
          "createdAt": "2023-05-16T08:51:50Z",
          "updatedAt": "2023-05-16T08:51:50Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOJbVClc5k0NP6",
      "title": "guidance around the `sub` claim.",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/5",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\u201dsub\u201d Claim MAY be supported by the Issuer. There is no requirement for a binding to exist between `sub` and `cnf` claims.",
      "createdAt": "2023-05-01T21:13:44Z",
      "updatedAt": "2023-05-10T14:06:41Z",
      "closedAt": "2023-05-10T14:06:41Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "That makes sense.",
          "createdAt": "2023-05-02T05:48:00Z",
          "updatedAt": "2023-05-02T05:48:00Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "So, you are saying we need to define something like: if there is a `sub` and a `cnf`, then the `cnf` should authenticate the `sub`?",
          "createdAt": "2023-05-05T17:03:31Z",
          "updatedAt": "2023-05-05T17:03:31Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am saying that \r\n1. `cnf` is used for cryptographic holder binding.\r\n2. `sub` is used as the user's identifier within the Issuer's namespace.\r\n3. if Issuer chooses to establish a relationship between a `cnf` and a `sub` (such as sub is a JWK thumbprint of a JWK in a cnf claim), but it is not necessary (not sure this even needs to be mentioned in the spec, if so, probably implementation considerations) ",
          "createdAt": "2023-05-05T22:41:13Z",
          "updatedAt": "2023-05-05T22:41:13Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, then we don't really need to say anything about the relationship between `cnf` and `sub` since there can be a relationship or there cannot be a relationship.",
          "createdAt": "2023-05-08T08:04:32Z",
          "updatedAt": "2023-05-08T08:04:32Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "fixed by PR #14 ",
          "createdAt": "2023-05-10T14:06:20Z",
          "updatedAt": "2023-05-10T14:06:20Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOJbVClc5lNIdW",
      "title": "Define terminology of SD-JWT-VC, etc.",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/10",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "HAS PR"
      ],
      "body": "I think we need to define what the following \"things\" are.\r\n\r\n- What is the Verifiable Credential based on SD-JWTs?\r\n\r\nI believe it is the JWT that contains the `_sd`s. It is not any of the combined formats. This means that the Verifiable Credential MAY NOT contain any disclosable claims, e.g., `name`. Would you agree @tlodderstedt, @Sakurann, Daniel?\r\n\r\nThe VC based on SD-JWT will have the media type `application/vc+sd-jwt`.\r\n\r\n- What is the Verifiable Presentation based on SD-JWTs? It makes sense to define that since the HB JWT has some specific requirements. It also makes sense because protocol developers will need to refer to one term when they exchange presentations or verifiable presentations between issuer <-> holder <-> verifier.\r\n\r\nCan we call the Combined Format for Issuance AND Presentation the Presentation based on SD-JWTs, and if there is HB, then it is a Verifiable Presentation? \r\n\r\nThe VP based SD-JWT will have the media type `application/vp+sd-jwt` altough I'm not sure if this makes sense. Wouldn't it better to have `application/vp+vc+sd-jwt`? Any thoughts on that?",
      "createdAt": "2023-05-05T17:17:20Z",
      "updatedAt": "2023-05-10T14:29:51Z",
      "closedAt": "2023-05-10T14:29:51Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Also it is important to note that for OIDC4VP we use Verifiable Presentations in vp_token and we use Verifiable Credentials in OIDC4VCI in the credential response.\r\n\r\nIt probably has the implication that for OIDC4VCI, we will put the VC based on SD-JWT into the credential response, or we define a format identifier for something else. Keep in mind we need to send the disclosures to the client as well. In that regards is the SD-JWT itself the SD-JWT-VC without disclosures, or is the combined format including disclosures the SD-JWT-VC? Or we follow the approach above and we return a combined presentation (no HB) in the credential response and define a credential identifier for that.\r\n\r\nIt probably also means that we would put the VP based on SD-JWT into the OIDC4VP vp_token. \r\n ",
          "createdAt": "2023-05-05T19:32:26Z",
          "updatedAt": "2023-05-05T19:39:55Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "NONE",
          "body": "We (IDunion) put the combined presentation (+hb jwt) in the vp_token. What else would you expect?",
          "createdAt": "2023-05-05T19:46:10Z",
          "updatedAt": "2023-05-05T19:46:10Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> We (IDunion) put the combined presentation (+hb jwt) in the vp_token. What else would you expect?\r\n\r\nThat makes sense, so the VP based on SD-JWT is the combined format for presentation including HB JWT.\r\n\r\nThen, there is the question what would the OIDC4VCI credential response return? And what would be a format identifier? I know that this doesn't have to be answered in this spec but it helps with answering the terminology question.",
          "createdAt": "2023-05-05T20:11:24Z",
          "updatedAt": "2023-05-05T20:11:24Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Suggest we not overcomplicate things and say:\n- what is returned in a VP Token in OID4VP is a combined Format for presentation with HB-JWT.\n- what is returned in Credential Response in Credential Response in VCI is combined format for issuance.\n- credential format identifier is 'vc+sd-jwt' for both.\n- Terminology-wise, SD-JWT in the IETF spec is defined as an issuer signed JWS without disclosures. For this profile, the payload of SD-JWT, can be mapped back to a VCDM2.0",
          "createdAt": "2023-05-05T23:49:15Z",
          "updatedAt": "2023-05-05T23:49:15Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "This is potentially fixed by PR #21 ",
          "createdAt": "2023-05-10T14:00:14Z",
          "updatedAt": "2023-05-10T14:00:14Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOJbVClc5lNMAL",
      "title": "`type` is not selectively disclosable",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/11",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-??"
      ],
      "body": "Currently, `type` is not one of the selectively disclosable claims. This might be ok but it might have some privacy implications if a VC has multiple types. Let's assume the following:\r\n\r\nA VC with the types: driver's-license, age-over-18.\r\n\r\nIf the holder discloses only the age, then based on the current specification, the verifier would also know that the age was disclosed from a DL which is probably unnecessary context info since all the verifier needs is to trust the issuer of the VC. Note, the issuer itself might also leak some contextual info as well, so the issue might not need to be mitigated or it might not be entirely possible anyways.\r\n\r\nShould we make `type` selectively disclosable per array entry? Is this even supported by SD-JWT?\r\n\r\n",
      "createdAt": "2023-05-05T17:31:04Z",
      "updatedAt": "2023-06-22T09:46:29Z",
      "closedAt": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue since SD-JWT doesn't support selectively disclosing array elements.",
          "createdAt": "2023-05-05T18:18:34Z",
          "updatedAt": "2023-05-05T18:18:34Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "We might want to add something to privacy considerations about that.",
          "createdAt": "2023-05-05T18:19:02Z",
          "updatedAt": "2023-05-05T18:19:02Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "FYI: There is a discussion about Selective Disclosure for array elements.\r\n\r\nhttps://github.com/oauth-wg/oauth-selective-disclosure-jwt/issues/194#issuecomment-1487860648",
          "createdAt": "2023-05-08T01:15:44Z",
          "updatedAt": "2023-05-08T01:15:44Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "suggest to close as the type is a simple string now",
          "createdAt": "2023-05-16T11:00:19Z",
          "updatedAt": "2023-05-16T11:00:19Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@peteraltmann raised an issue with me that \"if the type is always disclosed, what is the point of selective disclosure because the verifier will know what claims are in the credential\". I think we should consider making type selectively disclosable.",
          "createdAt": "2023-05-24T22:55:48Z",
          "updatedAt": "2023-05-24T22:55:48Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I agree with Peter and I'm in favor of sd for type",
          "createdAt": "2023-05-25T06:23:38Z",
          "updatedAt": "2023-05-25T06:23:38Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What is the value of a VC without type information? Or let me put it the other way around. If the Verifier is supposed to be able to process a VC without knowing the type (which also means it can request the VC presentation without specifying the type), why do we need the type at all?",
          "createdAt": "2023-05-25T06:53:14Z",
          "updatedAt": "2023-05-25T06:53:14Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> What is the value of a VC without type information? Or let me put it the other way around. If the Verifier is supposed to be able to process a VC without knowing the type (which also means it can request the VC presentation without specifying the type), why do we need the type at all?\r\n\r\nI was wondering about that point as well - what is revealed information worth without information about credential type (and corresponding trust framework).",
          "createdAt": "2023-05-25T07:24:54Z",
          "updatedAt": "2023-05-25T07:24:54Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "It becomes valuable if all the verifier wants to know is a specific claim, e.g., `dob`, and trusts an issuer which could issue other credential types as well. The credential type can also make a difference, e.g., if somebody wants to know whether somebody has a driver's license but is not interested in the details. ",
          "createdAt": "2023-05-25T08:13:57Z",
          "updatedAt": "2023-05-25T08:13:57Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My current assumption is that `type` is the primary selection criteria for credentials in a presentation request (as identifier for a pre-defined bundle of claims associated with certain policies for enrollment and issuance). Based on that assumption,  the Verifier always knows the type. So what would be the scenario to request a VC without knowing its type?",
          "createdAt": "2023-05-25T13:21:58Z",
          "updatedAt": "2023-05-25T13:21:58Z"
        },
        {
          "author": "AltmannPeter",
          "authorAssociation": "NONE",
          "body": "Having the type disclosable does not mean the user never shares it. If a verifier requests the type then the user can disclose it, no? \r\n\r\nThe issues with both the `@context` and the `type` is that they reveal what claims the user has, which is more than what is strictly required for a service. The privacy requirements from the Parliament, Council, and the Commission are strict. However, I cannot think of a scenario to justify type being disclosable.\r\n\r\nArguments for: As @awoie mentions, the verifier may require only a particular claim, e.g., age over 18, and should reasonable accept these from any trusted issuer without having to know what exact attestation type it came from. Some issuers may have multiple types that all contain the same attribute. And there are strong demands that the user should reveal only what is required for the service and absolutely nothing else (to the point where I am actively having to fight against people who want to put ZKP everywhere). Not revealing claim values is great; also hiding what claims you have is more privacy preserving.\r\n\r\nArguments against: Beside from those already mentioned, you could question the privacy benefits. As long as the individual Issuer's signature is included, it is likely not that hard to guess what the particular attestation may contain, particularly if the Issuer only issues few attestations.\r\n\r\nIn conclusion, given how there are no technical challenges to making type disclosable, and how the Verifier may just request a type and refuse to process a presented claim without type disclosed, I would argue for that the type MAY be disclosed.",
          "createdAt": "2023-05-25T14:46:20Z",
          "updatedAt": "2023-05-25T15:06:43Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The `iss` field is always disclosed, hence not revealing the `type` only offers privacy if the same issuer with the same key offers multiple VCs that share the same claim name that is being requested. It seems like an unrealistic scenario that this is a privacy benefit. It seems to me the usecase would be merely a fillout help, where the verifier does not care about the origin of claims and handles those as self-attested",
          "createdAt": "2023-05-25T19:04:00Z",
          "updatedAt": "2023-05-25T19:04:00Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's create a PR and see how the spec will change and continue the discussion there.",
          "createdAt": "2023-06-22T09:46:23Z",
          "updatedAt": "2023-06-22T09:46:23Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOJbVClc5lSjvT",
      "title": "non-selectively disclosable registered JWT claims",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/13",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "currenlty, iss, iat, nbf, exp, cnf, type, status are listed as \"non-selectively disclosable registered JWT claims\".\r\nWhat is the risk of selectively disclosing them? I do not have a strong opinion yet, but wanted to make sure we are making a conscious decision.\r\n",
      "createdAt": "2023-05-08T01:46:09Z",
      "updatedAt": "2023-05-23T08:21:15Z",
      "closedAt": "2023-05-23T08:21:15Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "There is no risk but it is not possible to represent them with the VCDM 2.0 since certain properties are required. A verifier that receives a VP-SD-JWT without the mandatory fields would not be able to transform the VP-SD-JWT to a VP as per W3C. This might be ok but also might not be ok. It would be great if we didn't have breaking changes for interop reasons. Thoughts?",
          "createdAt": "2023-05-10T14:11:17Z",
          "updatedAt": "2023-05-10T14:11:17Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the values that define the validity of the token should be non-SD so that a verifier always gets the \"full picture\". Similar for `iss`, which is critical for checking the token. \r\n\r\nFor type, we have Issue #11 \r\n\r\nNot sure about status, but I think it should also be non-SD.",
          "createdAt": "2023-05-16T08:17:28Z",
          "updatedAt": "2023-05-16T08:17:28Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think every claim that is needed to evaluate the security/status of the credential must always be disclosed. For example, if the holder could omit the status, the verifier would never learn the credential was revoked by the issuer. I guess it is the issuer who should determine what must always be disclosed.  ",
          "createdAt": "2023-05-16T11:02:13Z",
          "updatedAt": "2023-05-16T11:02:13Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I would agree with @tlodderstedt ",
          "createdAt": "2023-05-23T08:20:18Z",
          "updatedAt": "2023-05-23T08:20:18Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue since nothing have to be changed. Current spec requires security-related claims to be always present in the SD-JWT.",
          "createdAt": "2023-05-23T08:21:15Z",
          "updatedAt": "2023-05-23T08:21:15Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOJbVClc5liFbX",
      "title": "Fix all references to external documents",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/19",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "danielfett"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "Fix references to OAuth SD-JWT",
      "createdAt": "2023-05-10T08:57:12Z",
      "updatedAt": "2023-05-22T13:57:53Z",
      "closedAt": "2023-05-22T13:57:53Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Fix references to RFCs, standards etc.",
          "createdAt": "2023-05-16T08:16:53Z",
          "updatedAt": "2023-05-16T08:16:53Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOJbVClc5lkTuk",
      "title": "Add media type registration info",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/23",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "HAS PR"
      ],
      "body": "Add media type registration info",
      "createdAt": "2023-05-10T14:07:34Z",
      "updatedAt": "2023-05-10T14:15:26Z",
      "closedAt": "2023-05-10T14:15:25Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Potentially fixed by #22 ",
          "createdAt": "2023-05-10T14:07:46Z",
          "updatedAt": "2023-05-10T14:07:46Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "#22 got merged, closing",
          "createdAt": "2023-05-10T14:15:25Z",
          "updatedAt": "2023-05-10T14:15:25Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOJbVClc5lkUFI",
      "title": "Add more info to intro",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/24",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "HAS PR"
      ],
      "body": "- explain three-party-model\r\n- explain JSON payload",
      "createdAt": "2023-05-10T14:08:18Z",
      "updatedAt": "2023-05-10T14:19:20Z",
      "closedAt": "2023-05-10T14:19:20Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Potentially fixed by #20 ",
          "createdAt": "2023-05-10T14:08:32Z",
          "updatedAt": "2023-05-10T14:08:32Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "#20 merged, closing this issue",
          "createdAt": "2023-05-10T14:19:20Z",
          "updatedAt": "2023-05-10T14:19:20Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOJbVClc5lkUsy",
      "title": "Complete VC and VP example",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/25",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "danielfett"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "- VC-SD-JWT\r\n- VP-SD-JWT w/wo holder binding\r\n- with different payloads",
      "createdAt": "2023-05-10T14:09:39Z",
      "updatedAt": "2023-05-22T15:52:23Z",
      "closedAt": "2023-05-22T15:52:23Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Some examples were added but they are not 100% complete.",
          "createdAt": "2023-05-10T16:42:31Z",
          "updatedAt": "2023-05-10T16:42:31Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@danielfett can you provide the full example here?",
          "createdAt": "2023-05-16T08:18:54Z",
          "updatedAt": "2023-05-16T08:18:54Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Complete examples in section 5.2 Verifiable Credentials and 6.1 Verifiable Presentations.",
          "createdAt": "2023-05-16T08:47:24Z",
          "updatedAt": "2023-05-16T08:47:24Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "This was fixed in #67 ",
          "createdAt": "2023-05-22T15:52:22Z",
          "updatedAt": "2023-05-22T15:52:22Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOJbVClc5lktYx",
      "title": "Review end-to-end with terminology in mind",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/27",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "danielfett",
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "The distinction of VC-SD-JWT and VP-SD-JWT etc. is still not super clean also in terms of what the verifier receives.",
      "createdAt": "2023-05-10T14:54:44Z",
      "updatedAt": "2023-05-22T13:57:53Z",
      "closedAt": "2023-05-22T13:57:53Z",
      "comments": []
    },
    {
      "number": 29,
      "id": "I_kwDOJbVClc5llXf5",
      "title": "Add use case section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/29",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "individual-03"
      ],
      "body": "",
      "createdAt": "2023-05-10T16:42:54Z",
      "updatedAt": "2023-06-22T11:12:54Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 30,
      "id": "I_kwDOJbVClc5llXyg",
      "title": "Add scope section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/30",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "@tlodderstedt suggested to have a scope section and an overview section. Not sure if we need both.",
      "createdAt": "2023-05-10T16:43:52Z",
      "updatedAt": "2023-05-16T11:25:19Z",
      "closedAt": "2023-05-16T11:25:19Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Move \"Overview\" section to \"Scope\" section and delete \"Overview\" section.",
          "createdAt": "2023-05-16T08:21:33Z",
          "updatedAt": "2023-05-16T08:21:33Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOJbVClc5llX_Q",
      "title": "Add flow diagram",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/31",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "I guess that is missing although the flow diagram won't be much different from SD-JWT. Perhaps the status check could be added in addition.",
      "createdAt": "2023-05-10T16:44:31Z",
      "updatedAt": "2023-05-24T21:23:21Z",
      "closedAt": "2023-05-24T21:23:21Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "closing this, #55 was merged",
          "createdAt": "2023-05-24T21:23:21Z",
          "updatedAt": "2023-05-24T21:23:21Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOJbVClc5lpbS7",
      "title": "[Trust Model] validation of Metadata, jwks and not repudiable trust relationships",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/33",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "In https://github.com/vcstuff/draft-terbu-sd-jwt-vc/blob/main/draft-terbu-sd-jwt-vc.md#jwt-issuer-metadata-jwt-issuer-metadata\r\n\r\nMy concerns rely about the semantic of this `/.well-known/jwt-issuer`, since every participant in a identity (openid) or authorization (Oauth) infrastructure is in fact a jwt issuer, even the relying party issues JWT (authz request, private_key_jwt ...). I would like to stress our brains to get a solution re-using what we already have or specialized other wel-known(s) endpoint in relation at the new roles in the wallet ecosystem\r\n\r\nIn addition to this \"intellectual\" challenge, I propose to do a PR by introducing `.well-known/openid-federation` for secure trust establishment mechanisms that cannot be repudiated over time.\r\n\r\nIn particular the role of the `trust_chain` JWS header as shown in the example below\r\n\r\n````\r\n{\r\n \"alg\": \"ES256\",\r\n \"typ\": \"vc+sd-jwt\",\r\n \"kid\": \"4-available-in-the-trust-chain\",\r\n \"trust_chain\": [\r\n   \"fIIE3jCCA8agAwIBAgICAwEwT...TWVU\",\r\n   \"aiIE+zCCBGSgAwIBAgICAQ0wD...09VZ\",\r\n   \"fyIC5zCCAlACAQEwDQYJKoZIh...9ViH\"\r\n ]\r\n}\r\n.\r\n{\r\n \"iss\": \"https://credential-issuer.example.com/\",\r\n \"iat\": 1516239022,\r\n \"exp\": 1516247022,\r\n \"type\": \"Identity\",\r\n \"_sd\": [\r\n   \"UiuRGkTW7e_5UQauGeQRQdF8u3WYevS4Fs0IuB_DgYM\",\r\n   \"tmPlXq0MID-oRXbUNHyoVZrc9Qkm8cwJTohVyOVlUgQ\",\r\n   \"vTz0JI103v4k4pKIloT83Yzi33L1SdZlWBPmsfJBefk\"\r\n ],\r\n \"_sd_alg\": \"sha-256\",\r\n \"cnf\": {\r\n   \"jwk\": {\r\n     \"kty\": \"EC\",\r\n     \"crv\": \"P-256\",\r\n     \"x\": \"TCAER19Zvu3OHF4j4W4vfSVoHIP1ILilDls7vCeGemc\",\r\n     \"y\": \"ZxjiWWbZMQGHVWKVQ4hbSIirsVfuecCE6t4jT9F2HZQ\"\r\n   }\r\n }\r\n}\r\n````\r\nthe benefits of the federation trust chain are summarized below\r\n\r\n1. trust and protocol specific jwks are available in it\r\n2. the jwks and the metadata are verifiable having just the public key of a single trusted third party (Trust Anchor)\r\n3. the metadata of the issuer are subject of the policies of the trust chain, the trust chain may overload, add,remove, some elements from the final metadata by applying the policies contained in it. This allow us to remove the possibility that an entity may use a weak alg or defines unsupported scopes or any other property not allowed by the regulation implemented by Trust Anchor\r\n\r\nThis JWS header will be registered in the IANA registry and will be soon published in the OIDC Federation draft 29\r\n\r\nI can do the draft of the PR and ask to you a revision as usual, while regarding the first point I'd suggest more discussion on that\r\n",
      "createdAt": "2023-05-11T08:46:03Z",
      "updatedAt": "2023-05-23T17:55:27Z",
      "closedAt": "2023-05-23T08:23:34Z",
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The way the spec is written now, the .well-known/jwt-issuer location can be used by anyone issuing JWTs (as long as the issuer value is a HTTPS URL). I think that is ok. If you want to tighten the scope or change the name, we can talk about it. .well-known/jwt-issuer just makes the OpenID Connect approach for key management available to the world of verifiable credentials and people seem to like the idea. \r\n\r\nYou are suggesting a completely different approach (along the lines of OpenID Federation). That's fine (and you know I like your passion about it) and implementers can use this mechanism with SD-JWT VCs (in the same way they can use OpenID Federation as alternative to the OpenID Connect Key resolution today). \r\n\r\nSo what is the issue?",
          "createdAt": "2023-05-16T10:59:14Z",
          "updatedAt": "2023-05-16T10:59:14Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Yes, the scope of this instance should really be defined since it seems too much wide\r\n\r\nThis Issue wants place in the specs a clear statement, and non-normative example, about the key resolution following the approach of the trust relationships, then X509 certificate chain and OpenID Connect Federation Trust Chain\r\n\r\nthe requirement is that there are many cases where a decentralized infrastructure needs a trust delegation mechanism where the verifiable attestation of the trust relationship between the entities is represented as a \"chain\", made with linked claims, public keys and signature bindings \r\n\r\nIf the defining of the trust relationship verifiable attestations is out of scope for this specs, I suggest to not propose the sole OAuth2 connect approach but giving more non-normative example linked to external refs",
          "createdAt": "2023-05-17T08:46:33Z",
          "updatedAt": "2023-05-17T08:46:33Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The .well-known/jwt-issuer is a simple mechanism for key resolution and key rotation. Based on prospect implementers feedback, people like its simplicity and want to implement it. \r\n\r\nTrust management can be built on top. That's why it is out of scope.\r\n\r\nIf implementers want to use other ways to manage keys, fine - they can use other mechanisms. .well-known/jwt-issuer is an option not mandatory to implement. ",
          "createdAt": "2023-05-17T09:51:21Z",
          "updatedAt": "2023-05-17T09:53:37Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "My concerns is related to the missing requirements related to the trust model, that expose us in defining new specification following the hypes or the feedback taken along the road with the mechanism of the empathy or other experiences characterized by social exchanges, these are important but they may have distractions and distorsion due to enviromental conditions or individual inclinations.\r\n\r\nsince I believe that this is the right place to do the right things, I'd like to start over the requirements of the trust model and key attestation mechanisms as well\r\n\r\nIn this document me and other contributors are trying to define an agnostic approach in the definition of the trust model requirements and rules, given as granted the architectural requirements of decentralization\r\n\r\n[The eID Wallet Trust Model Rules](https://docs.google.com/document/d/1Dk_8UmytCI4VhCx5VMnXmEzdXRvgJozGeq1GNHZOQik/)\r\n\r\nI'm looking to non repudiation, decentralized historical registry of expired/revoked keys, selfconsistent VC/Attestation with verifiable keys, metadata and policies\r\n\r\nthat's why I propose a PR including .well-known/openid-federation as endpoint or the way we may define to integrate jwt-issuer with the federation trust chains, since these give the full coverage of the requirements\r\n\r\nthe prerequisite is then the cryptographic verifiability, so jwt-issuer response should or must be signed\r\n\r\nthen I've noted that in the text is written that only x509 and .well-known/jwt-issuer MUST be supported, this would exclude the current and the future specification that brings an higher level of assurance on the attestations. I'd remove that \"only\" :-)\r\n\r\n\r\n",
          "createdAt": "2023-05-21T00:47:29Z",
          "updatedAt": "2023-05-21T00:47:29Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi Giuseppe, it seems you are mixing up the scope of vc-sd-jwt and the high assurance profile. This is the repo of vc-sd-jwt. It won't define mandatory to implement requirements for key resolution & issuer identification/authentication. It just introduces a simple mechanism for this purpose. Mandatory to implement requirement are stated in the high assurance profile. \r\nPS: I don't see why .well-known/jwt-issuer must be signed as pre-requisite to use it with trust management mechanisms, including federation. .well-known/jwt-issuer is intended to be super simple. Application level encryption adds complexity (itself and through key management) and does not add security for an API based model. It makes sense in a mode where all data is carried in a chain structure, but that is a different story. ",
          "createdAt": "2023-05-22T07:22:42Z",
          "updatedAt": "2023-05-22T07:22:42Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Yes, I've mixed up many things just for giving an harmonic view on the requirements and assumptions I have in mind\r\n\r\nConsidering how we can work together to improve high assurance profile, I've raised the issue of having in sd-jwt-vc even openid-federation and not x5c and jwt-issuer alone, as raised in several other issues (and here my excuse for the noise)\r\n\r\nDuring the previous connect call there was the agreement that once Federation Draft 29 will be available, then we'll be able to include the Federation trust_chain JWS header parameter in all the OpenID4VC specs, so I'm looking forward to have this agreement also in sd-jwt-vc \r\n\r\nAs you know, mine is not just a request but a manifestation of willingness to contribute actively to introduce the Federation way to obtain attestations of key, metadata and policies related to these\r\n\r\n ",
          "createdAt": "2023-05-22T12:08:22Z",
          "updatedAt": "2023-05-22T12:19:35Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> During the previous connect call there was the agreement that once Federation Draft 29 will be available, then we'll be able to include the Federation trust_chain JWS header parameter in all the OpenID4VC specs, so I'm looking forward to have this agreement also in sd-jwt-vc\r\n\r\nThat's what the minutes say\r\n\r\n<img width=\"576\" alt=\"image\" src=\"https://github.com/vcstuff/draft-terbu-sd-jwt-vc/assets/328358/8e0d7028-8fd6-435f-bdbc-c602f7a320b4\">\r\n\r\nInterestingly, the issue was closed without any further comments. \r\n\r\nYou can certainly open an issue on this in the issue tracker and we will discuss this in the SIOP special calls (or the OID4VC calls) going forward. ",
          "createdAt": "2023-05-22T13:44:19Z",
          "updatedAt": "2023-05-22T13:44:19Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with @tlodderstedt that this issue relates to the OpenID4VC hi-assurance profile. This spec is a general-purpose Verifiable Credentials representation based on SD-JWTs.\r\n\r\nClosing this issue. Please re-open if you disagree.",
          "createdAt": "2023-05-23T08:23:34Z",
          "updatedAt": "2023-05-23T08:23:34Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "draft 29 has its changelog with the fixed issues by id number, the review process has been completed in the PR, then this latter is referenced in the Issue\r\n\r\nhttps://bitbucket.org/openid/connect/issues/1921/trust_chain-as-jwt-header-claim\r\n\r\nok guys",
          "createdAt": "2023-05-23T17:55:26Z",
          "updatedAt": "2023-05-23T17:55:26Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "I_kwDOJbVClc5lpshA",
      "title": "Intro section might be too broad",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/34",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "danielfett"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "Feedback from @tlodderstedt :\r\n\r\n> \"However, JWTs do not support selective disclosure, i.e., the ability to disclose only a subset of the claims contained in the JWT. \" is to broad - Suggest to frame it like this  \"JWTs do not support selective disclosure in the issuer-holder-verifier model\"",
      "createdAt": "2023-05-11T09:28:19Z",
      "updatedAt": "2023-05-19T08:15:48Z",
      "closedAt": "2023-05-19T08:15:48Z",
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "made a proposal in PR #52 ",
          "createdAt": "2023-05-16T10:47:44Z",
          "updatedAt": "2023-05-16T10:47:44Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "NONE",
          "body": "Fixed in PR #52.",
          "createdAt": "2023-05-19T08:15:48Z",
          "updatedAt": "2023-05-19T08:15:48Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOJbVClc5lptOL",
      "title": "Remove polymorphism from types attribute",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/35",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Pros:\r\n- selective disclosure of types possible to increase privacy and to reduce contextual info\r\n- more granular types possible\r\n- issuers don't have to issue multiple credentials\r\n\r\nCons:\r\n- polymorphism always is a challenge, we that with `aud`\r\n- no support in SD-JWT yet to selectively disclose array elements",
      "createdAt": "2023-05-11T09:30:01Z",
      "updatedAt": "2023-05-11T15:21:16Z",
      "closedAt": "2023-05-11T15:21:16Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "After further discussions it seems that multiple types might cause difficulties with JSON schemas. If multiple types are required in the future (e.g. more implementer's feedback), we can update the specification.\r\n\r\nSo, let's make `types` a single string value.",
          "createdAt": "2023-05-11T13:52:29Z",
          "updatedAt": "2023-05-11T13:52:29Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "I_kwDOJbVClc5lpteU",
      "title": "JWT Issuer Metadata should support paths",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/36",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "The rules for obtaining the issuer metadata needs to be extended to cope with paths as well. I suggest to use the text from https://www.rfc-editor.org/rfc/rfc8414.html#section-3.",
      "createdAt": "2023-05-11T09:30:34Z",
      "updatedAt": "2023-05-25T11:36:01Z",
      "closedAt": "2023-05-25T11:36:01Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "The following example is already supported ...\r\n\r\n```\r\n\"iss\" = \"https://www.rp.com\"\r\n--> www.rp.com/.well-known/jwt-issuer\r\n\r\n\"iss\" = \"https://www.rp.com/user/1234\"\r\n--> www.rp.com/user/1234/.well-known/jwt-issuer \r\n```\r\n\r\n@tlodderstedt is this what you had in mind, or is there anything missing? In that case, we could add an example that makes it more visible that this use case is supported.\r\n",
          "createdAt": "2023-05-23T08:28:15Z",
          "updatedAt": "2023-05-23T08:28:15Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "https://example.com/user/1234/.well-known/jwt-issuer needs to be https://example.com/.well-known/jwt-issuer/user/1234/ \r\n\r\nhave a look at https://www.rfc-editor.org/rfc/rfc8414.html#section-3",
          "createdAt": "2023-05-23T14:53:14Z",
          "updatedAt": "2023-05-23T14:53:33Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, makes sense. Will create a PR to fix that.",
          "createdAt": "2023-05-23T15:28:20Z",
          "updatedAt": "2023-05-23T15:28:20Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOJbVClc5lrjLw",
      "title": "analyze and clarify the diff with vc-jwt?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/37",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The usage of a Holder Binding JWT as defined in [IETF.SD-JWT] might be a different mechanism from Verifiable Presentation as defined in [W3C.VCDM2.0]/[vc-jwt], while achieving the same goal.\r\n\r\nmaybe not needed. not sure if this will bring clarify or more confusion",
      "createdAt": "2023-05-11T14:17:44Z",
      "updatedAt": "2023-05-13T13:00:34Z",
      "closedAt": "2023-05-13T13:00:34Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "The current VC SD-JWT text should actually use Combined Format for Presentations (incl. Holder Binding) for VPs. So, it is already included and the only option to accomplish that. If the current text does not reflect that well enough, we should make the text more precise.\r\n\r\n@Sakurann which section of VC SD-JWT are you specifically referring to?",
          "createdAt": "2023-05-11T14:48:15Z",
          "updatedAt": "2023-05-11T14:48:15Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "The current text of VC SD-JWT has nothing to do with VC-JWT as per W3C.",
          "createdAt": "2023-05-11T14:48:52Z",
          "updatedAt": "2023-05-11T14:48:52Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ok. Than we are not dependent on VC-JWT for nbf too (issue #12)",
          "createdAt": "2023-05-13T13:00:20Z",
          "updatedAt": "2023-05-13T13:00:20Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOJbVClc5l10wF",
      "title": "Align and expand Scenarios/Business Requirements section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/40",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-13T13:42:07Z",
      "updatedAt": "2023-05-13T13:42:32Z",
      "closedAt": "2023-05-13T13:42:31Z",
      "comments": [
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "sorry, wrong repo...",
          "createdAt": "2023-05-13T13:42:31Z",
          "updatedAt": "2023-05-13T13:42:31Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOJbVClc5l1-X3",
      "title": "HTTPS URL and OIDC Federation?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/41",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "per comment from @peppelinux, consider mention that an issuer URL used for /.well-known/jwks can also be used for OpenID Federation.",
      "createdAt": "2023-05-13T15:08:51Z",
      "updatedAt": "2023-05-23T08:33:03Z",
      "closedAt": "2023-05-23T08:33:03Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "OIDC Federation is related to the technical implementation of the Trust Model and then to the infrastructure of Trust\r\n\r\nan HTTP URL should, or may, be inspected for Trust Assessment with the .well-known/openid-federation endpoint and then with the Federation Entity Discovery process.\r\n\r\nThe Federation Entity Discovery process is always required when the trust assessment method is OpenID Federation and its  Trust Chain contains all the verifiable trust relationships between the parties, the metadata with policy applied and everything about a subject\r\n\r\nIf the Trust Chain is statically available, it just only be validated and checked against the revocation methods of the participants in the infrastructure. This last statement considers the availability of the Trust Chain of every issuer of JWS, as introduced in the issue below:\r\n\r\nhttps://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/33\r\n\r\nA secure Trust Model requires \"signature everywhere\" to satisfy the requirement of non-repudiability or everything issued by an issuer. For this reason the JWKS in OpenID Connect federation are embedded in the signed metadata (Entity Configuration) or made available, and signed, in the signed_jwks_uri\r\n\r\ntoghether with the federation entity discovery and the provision of static trust chain in the JWS header, I'm working on these two DID resolution methods\r\n\r\n**did:openid:example.it:oidc:rp[#$kid-value]**\r\nthis URN is translated to https://example.it/oidc/rp/.well-known/openid-federation and requires a Federation Entity Discovery to build a valid Trust Chain. This doesn't preclude any other OpenID Connect trust resolution method in the present or in the future, giving to the trust resolver the freedom to decide which openid standard to use for the resolution of the keys. Kid value is optional depending to the scope of the did indetifier, if related to a subject or to a key\r\n\r\n**did:openid-trustchain:BASE64({\"kid\": 1, \"trust_chain\": [ ... ]})**\r\nthis URN is translated to a static OpenID Connect Federation Trust Chain, that gives a snapshot of the federation configuration and of the trust relationships between the subject and the Trust Anchor, its metadatas, the metadata policies, trust mark... Everything about the Trust Model, without any federation entity discovery process\r\n\r\nSo, HTTP or DID a Trust Model with OpenID Federation should be always supported in the specs\r\n\r\n",
          "createdAt": "2023-05-13T20:17:44Z",
          "updatedAt": "2023-05-14T16:10:06Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The .well-known/jwt-issuer mechanism works with any other .well-known location. We should give a couple of examples.\r\n\r\nRegarding OpenID federation, I\u2019m not sure the current revision of the specification would work well with it, given it would require the issuer keys used to sign JWTs to turn up in the entity configuration again (which duplicates the data).\r\n\r\n@peppelinux can you please comment on that?",
          "createdAt": "2023-05-14T07:52:42Z",
          "updatedAt": "2023-05-14T07:52:42Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I start over from the requirements I have regarding the long-lived and non-repudiable attestations.\r\n\r\na. An Attestation can be a VC or any kind of signed artifact issued according to a contract.\r\nb. The contract can be bilateral, between two organization or multilateral if we mix thousands of organizations and natural persons according to a defined Trust Model, since the architecture is decentralized I consider only multilateral relationships.\r\n\r\nThe Attestation must be verified in both online and offline flows, this requires that the following statements must be satisfied:\r\n\r\n1. The public key for verification must be attested as reliable by a Trusted Third Party. This implies that the public key MUST be contained in the Attestation together with the proof of its reliability. The reliability proof must be issued by a Trusted Third Party\r\n2. The verifier must verify the digital signature of the attestation, using the public key contained in it, since the public key is signed by a Trusted Third Party and made available in the signed attestation \r\n3. The state of the issuer must be contained in the attestation, since all the information about the issuer is available statically and signed by a Trusted Third Party\r\n4. The Policy regarding the issuer MUST be applied, to give evidence if the issuer behaved correctly at time of issuance\r\n5. even if the public keys may change in the future years, the state of the issuer at the time of the issuance, the applied policies, its jwks, must be always verifiable, since the attestation cannot be repudiated\r\n\r\nconsider that an issuer of an attestation can be one or more of all the following entities:\r\n\r\nI. Wallet Provider issuing a Wallet Instance Attestation\r\nII. Credential Issuer that issues a VC\r\nIII. RP that issues a presentation request\r\nIV. Wallet Instance that issue a signed presentation request or an id token\r\n\r\nAll these requirements are fully satisfied by OpenID Connect Federation Trust Chain, since the JWS trust_chain is going to be registered in the IANA JWS header parameter register.\r\n\r\nThe sole and particular exception is made for the Wallet Instance, since these are not andled by organization but by natural person. In this cases they must present the Wallet Instance Attestation where the Wallet Provider Trust Chain is contained in it. A verifier trusts the wallet instance using the instance attestation, since the trust to the Wallet Provider can be established, statically and in offline flows.\r\n\r\nThe Trust Chain contains all the components listed below:\r\n\r\n- Trust Relationship of the subject (one of the previously listed above entities) with a Trusted Third Party, considering all the entities along the path from the subject to a well-known Trust Anchor. If any available, these are called Trust Intermediates\r\n- The Metadata of the subject at time of the issuance\r\n- The Trust Marks/Compliance-attestations of the subject at time of the issuance\r\n- The Policies published by Trust Anchor and its Intermediates to be applied to the issuer Metadata\r\n- The public keys related to the issuance protocol\r\n- the public keys related to the Trust Model attesting the Trust Relationship and the non revocation of the issuer at time of the issuance\r\n\r\nIt can be validated using the sole public key of the Trust Anchor.\r\n\r\nAll this, that's a lot, is efficiently contained in the Trust Chain, that's a JSON Array of JWS. Each JWS is binded with its siblings by claims, public keys and signatures. Using JWS singed with EC, I still don't have a comparison with X509 in term of storage but it is not small at all. But the point is not the size, but the features and the capabilities we have in the Trust Chain instead of the X509 certificate chain.  \r\n\r\n**Finally the answer to your question is:**\r\n\r\n**Since the public keys are not duplicated because they are self contained in the Entity Configuration (.well-known/openid-federation) and validate through the Trust Chain, the data doesn't require to be duplicated elsewhere**\r\n\r\nAnd I want to continue discussing the requirement of external endpoints for JWKS, below.\r\n\r\nOpenID Connect Federation enables the signed_jwks_uri, then .well-known/jwks can be pointed by this claim, with the sole requirement that its response must be signed, for the highest level of security of the Trust Model\r\n\r\nThe traditional approach based on TLS doesn't give non-repudiability of the attestations, since the jwks may change in the future and since these endpoints are not available in offline flows\r\n\r\nWhile TLS alone may work fine in the traditional digital identity infrastructure, where the trust is prestablished between an RP and an IDP, differently the Identity Wallets requires other paradigms regarding the Trust Establishment, where the concept of scalability, distribution and decentralization should consider how fundamental are the long lived static attestation of trust and how the \"decentralized storage\" requires the trust attestation to avoid the architectural need of a single registry with the historical information about all the issuers\r\n\r\n\r\n\r\n",
          "createdAt": "2023-05-14T17:27:31Z",
          "updatedAt": "2023-05-14T22:34:32Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Since the public keys are not duplicated because they are self contained in the Entity Configuration (.well-known/openid-federation) and validate through the Trust Chain, the data doesn't require to be duplicated elsewhere\r\n\r\nIf I understand your answer correctly, you say that .well-known/openid-federation is an alternative to .well-known/jwt-issuer, right?",
          "createdAt": "2023-05-16T10:46:59Z",
          "updatedAt": "2023-05-16T10:46:59Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Yes, definitively a different approach\r\n\r\nThe solution is the one that satisfies all the requirements and represents the best solution\r\n\r\nwhile the alternative should map the implications that entails in relation to the requirements",
          "createdAt": "2023-05-17T08:26:44Z",
          "updatedAt": "2023-05-17T08:26:44Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "After a discussion on the editor's call, we decided to close this issue.\r\n\r\nThe VC-SD-JWT spec does not define every possible mechanism how to obtain the public key to perform issuer authentication, i.e. verify the signature of the JWT. It intentionally says that other mechanisms are supported that are defined outside of this specification. One such mechanism is using OIDC Federation. If there is a need to define how OIDC Federation can be leveraged to verify the SD-JWT, then this should be done in the OpenID hi-assurance profile.",
          "createdAt": "2023-05-23T08:33:03Z",
          "updatedAt": "2023-05-23T08:33:03Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOJbVClc5l-Sws",
      "title": "CWT proof requirements",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/42",
      "state": "CLOSED",
      "author": "TakahikoKawasaki",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "Regarding the proof in a credential request defined in OID4VCI. The \"[Proof Types](https://openid.bitbucket.io/connect/openid-4-verifiable-credential-issuance-1_0.html#name-proof-types)\" section in the current snapshot of the specification lists JWT proof requirements and CWT proof requirements as follows.\r\n\r\n### JWT proof requirements:\r\n\r\n- `typ`\r\n- `alg`\r\n- `kid`\r\n- `jwk`\r\n- `x5c`\r\n- `iss`\r\n- `aud`\r\n- `iat`\r\n- `nonce`\r\n\r\n### CWT proof requirements:\r\n\r\n- Label 1 (`alg`)\r\n- Label 3 (`content type`)\r\n- Label COSE_Key\r\n- Label 33 (`x5chain`)\r\n- Claim Key 3 (`aud`)\r\n- Claim Key 6 (`iat`)\r\n- Claim Key 10 (`Nonce`)\r\n\r\nThe CWT proof does not have requirements that correspond to `kid` and `iss` requirements for the JWT proof. Is this difference intentional?",
      "createdAt": "2023-05-15T21:06:02Z",
      "updatedAt": "2023-05-18T06:28:06Z",
      "closedAt": "2023-05-17T19:16:28Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Can you clarify how this would relate to the VC-SD-JWT specification? Or does this relate to OpenID4VCI only?",
          "createdAt": "2023-05-16T08:30:09Z",
          "updatedAt": "2023-05-16T08:30:09Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@TakahikoKawasaki That is a good question. May I ask you to raise this issue on the OID4VCI spec?",
          "createdAt": "2023-05-16T10:44:15Z",
          "updatedAt": "2023-05-16T10:44:15Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "**openid/connect issue 1932: [OID4VCI] CWT proof requirements**\r\nhttps://bitbucket.org/openid/connect/issues/1932/oid4vci-cwt-proof-requirements",
          "createdAt": "2023-05-16T12:16:15Z",
          "updatedAt": "2023-05-16T12:16:15Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "will clarify in VCI",
          "createdAt": "2023-05-17T19:16:28Z",
          "updatedAt": "2023-05-17T19:16:28Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "Moving this topic to the AB/Connect WG.",
          "createdAt": "2023-05-18T06:28:05Z",
          "updatedAt": "2023-05-18T06:28:05Z"
        }
      ]
    },
    {
      "number": 43,
      "id": "I_kwDOJbVClc5mA7wr",
      "title": "Terms and definitions should refer to SD-JWT spec definitions",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/43",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:31:57Z",
      "updatedAt": "2023-05-23T11:04:05Z",
      "closedAt": "2023-05-23T11:04:05Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Add one sentence that terms such as Issuer, Holder, Verifier etc. are used in the same way as in SD-JWT.",
          "createdAt": "2023-05-23T08:35:01Z",
          "updatedAt": "2023-05-23T08:35:01Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOJbVClc5mBAJ_",
      "title": "Fix media type declaration to include application/",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/44",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:39:40Z",
      "updatedAt": "2023-05-22T13:57:53Z",
      "closedAt": "2023-05-22T13:57:53Z",
      "comments": []
    },
    {
      "number": 45,
      "id": "I_kwDOJbVClc5mBB3A",
      "title": "Avoid and rename Credential based on SD-JWT",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/45",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "Try to find a new term.",
      "createdAt": "2023-05-16T08:43:38Z",
      "updatedAt": "2023-05-25T11:35:39Z",
      "closedAt": "2023-05-25T11:35:39Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Introduce and use the term \"unsecured payload\" instead of payload or credential to refer to the input JSON document.\r\n\r\nWe cannot use payload because it would lead to confusion since the payload of the SD-JWT might not even contain all the claims and only the hashes.",
          "createdAt": "2023-05-23T08:39:32Z",
          "updatedAt": "2023-05-23T08:39:32Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOJbVClc5mBD6T",
      "title": "Add validation rules and processing for VPs",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/46",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "Section is empty atm",
      "createdAt": "2023-05-16T08:48:11Z",
      "updatedAt": "2023-05-22T13:57:52Z",
      "closedAt": "2023-05-22T13:57:52Z",
      "comments": []
    },
    {
      "number": 47,
      "id": "I_kwDOJbVClc5mBESF",
      "title": "Add first version of security considerations",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/47",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "individual-??"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:49:09Z",
      "updatedAt": "2023-06-21T14:02:25Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 48,
      "id": "I_kwDOJbVClc5mBEYJ",
      "title": "Add first version of privacy considerations",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/48",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:49:21Z",
      "updatedAt": "2023-06-22T10:12:33Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this section should point out that VC SD-JWTs per se are linkable and what the suggested strategies are to cope with that (e.g. ephemeral SD-JWT VCs). ",
          "createdAt": "2023-05-28T10:12:38Z",
          "updatedAt": "2023-05-28T10:12:38Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "I_kwDOJbVClc5mBFvl",
      "title": "Add ack section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/49",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:52:44Z",
      "updatedAt": "2023-05-16T11:21:31Z",
      "closedAt": "2023-05-16T11:21:30Z",
      "comments": []
    },
    {
      "number": 50,
      "id": "I_kwDOJbVClc5mBGD-",
      "title": "Add version section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/50",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:53:30Z",
      "updatedAt": "2023-05-16T11:21:31Z",
      "closedAt": "2023-05-16T11:21:31Z",
      "comments": []
    },
    {
      "number": 51,
      "id": "I_kwDOJbVClc5mBGqg",
      "title": "Remove notices section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/51",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-16T08:54:32Z",
      "updatedAt": "2023-05-16T11:21:31Z",
      "closedAt": "2023-05-16T11:21:31Z",
      "comments": []
    },
    {
      "number": 57,
      "id": "I_kwDOJbVClc5mVXSk",
      "title": "Support for multiple VCs in one VP",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/57",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pending close"
      ],
      "body": "We should describe how multiple VCs and VPs can be combined in one VP.",
      "createdAt": "2023-05-19T08:46:19Z",
      "updatedAt": "2023-05-23T08:48:09Z",
      "closedAt": "2023-05-23T08:48:09Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Would the following make sense?\r\n\r\n```\r\n{\r\n  \"@context\": [\r\n    \"https://www.w3.org/2018/credentials/v1\"\r\n  ],\r\n  \"type\": \u201cVerifiable\u201dPresentation,\r\n  \"verifiableCredential\": [ \r\n     \u201cb64-(sd-jwt-combined-format-4-persenation)-#1\u201d,\r\n     \u201cb64-(sd-jwt-combined-format-4-persenation)-#2\u201d \r\n  ]\r\n}\r\n```",
          "createdAt": "2023-05-19T08:53:15Z",
          "updatedAt": "2023-05-19T08:53:15Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "After thinking about this a bit more, I'd say that this doesn't have to be solved in the VC-SD-JWT spec. It should be solved at the protocol level, e.g., OpenID4VP where the `vp_token` would contain an array of VP-SD-JWTs.",
          "createdAt": "2023-05-19T09:26:04Z",
          "updatedAt": "2023-05-19T09:26:17Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1\n\nNo need for another envelope.\nOn 19. May 2023 at 11:26 +0200, Oliver Terbu ***@***.***>, wrote:\n> After thinking about this a bit more, I'd say that this doesn't have to be solved in the VC-SD-JWT spec. It should be solved at the protocol level, e.g., OpenID4VP where the vp_token would contain an array of VP-SD-JWTs.\n> \u2014\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> You are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\n",
          "createdAt": "2023-05-19T18:10:49Z",
          "updatedAt": "2023-05-19T18:10:49Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed in our call, this should not be handled by our specification. ",
          "createdAt": "2023-05-22T09:05:46Z",
          "updatedAt": "2023-05-22T09:05:46Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed on the editor's call (5/23), closing this issue since no longer needed.",
          "createdAt": "2023-05-23T08:48:09Z",
          "updatedAt": "2023-05-23T08:48:09Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOJbVClc5mVl8y",
      "title": "Describe HB-JWT for VPs",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/58",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The SD-JWT spec does not define how to construct the HB-JWT. It would be nice if the HB-JWT could bind the signature to the transaction, i.e., the rest of the SD-JWT combined format for presentation. I'd suggest, we define the following payload for the HB-JWT:\r\n\r\n```\r\n{\r\n  \"nonce\": \"123456\",\r\n  \"aud\": \"https://rp.com\",\r\n  \"iat\": 12345,\r\n  \"exp\": 123456,\r\n  \"_tx_hash\": sha256(<sd-jwt>~<d1>~...~<dn>)\r\n}\r\n```",
      "createdAt": "2023-05-19T09:29:54Z",
      "updatedAt": "2023-05-22T13:57:52Z",
      "closedAt": "2023-05-22T13:57:52Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Because the HB-JWT does not sign any other disclosures, any non-repudiation attacks are not possible.",
          "createdAt": "2023-05-19T11:49:05Z",
          "updatedAt": "2023-05-19T11:49:05Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "NONE",
          "body": "Note that also SD-JWT will be more specific on the HB JWT: https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/262",
          "createdAt": "2023-05-22T09:09:57Z",
          "updatedAt": "2023-05-22T09:09:57Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOJbVClc5mWOEx",
      "title": "Add additional claims for validFrom / validUntil",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/60",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pending close",
        "individual-??"
      ],
      "body": "Discuss whether this is needed.",
      "createdAt": "2023-05-19T11:31:57Z",
      "updatedAt": "2023-06-22T09:50:38Z",
      "closedAt": "2023-06-22T09:50:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I'd pose the attention to the requirement of non repudiation for long lived credentials\r\n\r\nin OIDC Federation we have defined the historical key registry with iat and exp but also revocation status \r\nhttps://openid.net/specs/openid-connect-federation-1_0.html#name-federation-historical-keys-re\r\n\r\nbut, if the response of .well-known/jwt-issuer is in plain application/json and not signed, it is impossibile have a proof that at time T-n that issuer has those key, unless a Trusted Third Party publishes all the historical keys of the participants and the response of the jwt-issuer endpoint should be signed\r\n\r\nthis give the proof that issuer X has that metadata and that jwks at time X, since there is a signed artifact that attests that and its signature is verifiable using the historical keys hosted by a trusted third party\r\n\r\nif non repudiation is a requirement also for you, I'd approach this problem asap  ",
          "createdAt": "2023-05-21T00:31:07Z",
          "updatedAt": "2023-05-21T00:31:07Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "historical keys is not a requirement yet, we want to keep .well-known/jwt-issuer as simple as possible (more or less bringing the OpenID Connect key resolution to VCs). ",
          "createdAt": "2023-05-22T07:25:43Z",
          "updatedAt": "2023-05-22T07:26:34Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Depending on the outcome of the W3C VCWG Miami resolution, we might actually just get rid of the translation algorithm. And then we will need to define `exp`, `iat` and `nbf` relating only to the signature (or proof) of the verifiable credential. Implementer's will then be able to use their own claims, e.g., issue_date, expiry_date (see mDL), to express the validity period of the underlying document.",
          "createdAt": "2023-05-25T08:33:51Z",
          "updatedAt": "2023-05-25T08:33:51Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue if no further discussion. Direction is that exp, iat, nbf are proof-specific claims. Document-specific claims may be introduced based on the type and is out of scope of this spec. ",
          "createdAt": "2023-06-22T09:50:38Z",
          "updatedAt": "2023-06-22T09:50:38Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDOJbVClc5mfx5b",
      "title": "Do we really need to explain that in lengths?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/62",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Do we really need to explain that in lengths?\r\n\r\n_Originally posted by @tlodderstedt in https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/61#discussion_r1200389171_\r\n            ",
      "createdAt": "2023-05-22T12:38:26Z",
      "updatedAt": "2023-05-22T12:39:08Z",
      "closedAt": "2023-05-22T12:38:59Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "accidentally created",
          "createdAt": "2023-05-22T12:39:07Z",
          "updatedAt": "2023-05-22T12:39:07Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOJbVClc5mfyCi",
      "title": "Shorten intro section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/63",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "danielfett"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "> in the JWT, in the three-party-model as described above. This is a common problem\r\nin the three-party model: An Issuer creates a Verifiable Credential for\r\nsome End-User (Holder), who then presents this credential to multiple Verifiers.\r\nA Verifiable Credential might contain a large number of claims, but the Holder\r\n\r\nWe should short this as suggested by @tlodderstedt \r\n\r\n _Originally posted by @tlodderstedt in https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/61#discussion_r1200389171_",
      "createdAt": "2023-05-22T12:38:50Z",
      "updatedAt": "2023-05-25T08:37:33Z",
      "closedAt": "2023-05-25T08:37:33Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Relates to #71 ",
          "createdAt": "2023-05-23T09:51:09Z",
          "updatedAt": "2023-05-23T09:51:09Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOJbVClc5mf2mP",
      "title": "Rename VP-SD-JWTs",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/64",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "> presentation of VC-SD-JWTs\r\n\r\nDiscuss better term than VP-SD-JWTs. VP-SD-JWTs could be an acronym for the above.",
      "createdAt": "2023-05-22T12:51:02Z",
      "updatedAt": "2023-05-25T13:41:12Z",
      "closedAt": "2023-05-25T13:41:12Z",
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the term VP-SD-JWT and especially the media type vp+sd-jwt are not appropriate there is no distinct element in SD-JWT that is \"THE\" VP. I suggest to change the wording to \"presentation of a vc-sd-jwt\" and drop the media type.",
          "createdAt": "2023-05-22T12:58:59Z",
          "updatedAt": "2023-05-22T12:58:59Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "The OpenID4VP spec refers to Verifiable Presentations in the vp_token. Wouldn't it make sense to stick to that terminology? This will allow us to use VP-SD-JWTs more seamlessly with other specs. Would you agree?",
          "createdAt": "2023-05-22T15:47:41Z",
          "updatedAt": "2023-05-22T15:47:41Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That's a good question. I just checked and we don't use the term Verifiable Presentation in conjunction with mdoc. So I think we don't need to use it here either. ",
          "createdAt": "2023-05-23T07:39:29Z",
          "updatedAt": "2023-05-23T07:39:29Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Perhaps we should create an issue in OpenID4VP to make it more clear what can be included in the vp_token?",
          "createdAt": "2023-05-23T07:51:06Z",
          "updatedAt": "2023-05-23T07:51:06Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "So, this means we will not focus on verifiable presentations at all. We would only speak about presentations of VCs. Is this correct?",
          "createdAt": "2023-05-25T09:43:44Z",
          "updatedAt": "2023-05-25T09:43:44Z"
        }
      ]
    },
    {
      "number": 65,
      "id": "I_kwDOJbVClc5mf5ou",
      "title": "change wording around presentation of VC-SD-JWT",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/65",
      "state": "CLOSED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I think the term VP-SD-JWT and especially the media type `vp+sd-jwt` are not appropriate there is no distinct element in SD-JWT that is \"THE\" VP. I suggest to change the wording to \"presentation of a vc-sd-jwt\" and drop the media type.  ",
      "createdAt": "2023-05-22T12:58:11Z",
      "updatedAt": "2023-05-23T08:52:59Z",
      "closedAt": "2023-05-23T08:52:59Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue since duplicate of #64 ",
          "createdAt": "2023-05-23T08:52:59Z",
          "updatedAt": "2023-05-23T08:52:59Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "I_kwDOJbVClc5mgZeK",
      "title": "Do we have to limit potential cnf values?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/66",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@Sakurann suggested the following text:\r\n> It MUST contain a JWK as defined in Section 3.2 of [@!RFC7800]. Other representations of the key MUST NOT be used. \"kid\" (Key ID) member MUST be present in the JWK. Holder Binding JWT in the Combined Format for Presentation MUST be signed by the key identified in this claim.\r\n\r\nIMO, a limitation is not needed. The hi-assurance profile can introduce such a limitation though.",
      "createdAt": "2023-05-22T14:02:51Z",
      "updatedAt": "2023-05-25T11:50:50Z",
      "closedAt": "2023-05-25T11:50:50Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Waiting for your feedback in PR #15 conversation. We can then close this issue.",
          "createdAt": "2023-05-23T08:53:45Z",
          "updatedAt": "2023-05-23T08:53:45Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "We can close this because completed due to PR #15 ",
          "createdAt": "2023-05-25T11:50:50Z",
          "updatedAt": "2023-05-25T11:50:50Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOJbVClc5mm0PJ",
      "title": "Fix how three-party-model relates to VCDM 2.0 in intro section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/69",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-23T07:54:37Z",
      "updatedAt": "2023-05-25T08:40:54Z",
      "closedAt": "2023-05-25T08:40:54Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "As agreed on the editor's call (5/23), the following ...\r\n\r\n> The three-party-model, i.e., actors, Verifiable Credentials and Verifiable Presentations, are further described in [VCDM2.0]. However, this specification focuses on a specific version of the three-party-model which can have different features but will provide a representation of the model described in [VCDM2.0].\r\n\r\nshould become ...\r\n\r\n> The three-party-model, i.e., actors, Verifiable Credentials and Verifiable Presentations, is also described in [VCDM2.0]. However, this specification provides a specific format of Verifiable Credentials which deviates from the format described in [VCDM2.0] to create Verifiable Credentials based on SD-JWT and JSON payloads but a translation algorithm is provided in this specification.\r\n\r\n",
          "createdAt": "2023-05-23T09:00:03Z",
          "updatedAt": "2023-05-23T09:00:03Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm still confused why we need this text at all. What people will basically get is \"this spec **deviates** from the VCDM 2.0\".",
          "createdAt": "2023-05-23T19:14:22Z",
          "updatedAt": "2023-05-23T19:14:22Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOJbVClc5mm2IA",
      "title": "Is VC-SD-JWT the right term?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/70",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "The current spec defines the following:\r\n\r\n> Verifiable Credential based on SD-JWT (VC-SD-JWT):\r\n> A Verifiable Credential encoded using the Issuance format defined in SD-JWT\r\n\r\nVC-SD-JWT seems like the logical acronym and since it is an acronym similar to SD-JWT, why wouldn't we use VC-SD-JWT as the short term in the spec?\r\n\r\n@Sakurann would you agree? You raised this concern in this PR #68 \r\n\r\n",
      "createdAt": "2023-05-23T07:59:09Z",
      "updatedAt": "2023-05-23T11:04:06Z",
      "closedAt": "2023-05-23T11:04:06Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed on the editor's call (5/23) we will rename VC-SD-JWT in \"Selective Disclosure JWT-based Verifiable Credentials\" or short (SD-JWT VC)",
          "createdAt": "2023-05-23T09:02:52Z",
          "updatedAt": "2023-05-23T09:02:52Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "I_kwDOJbVClc5mm9vu",
      "title": "Can we make the introduction more concise?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/71",
      "state": "CLOSED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "danielfett"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "I'm not sure whether we really need a comprehensive description of the issuer-holder-verifier model. I think what is needed is a description why JWT is not suitable and why SD-JWT is to motivate VC-SD-JWT. \r\n\r\nNote: we also have a duplication of term definitions between intro and terminology section",
      "createdAt": "2023-05-23T08:17:40Z",
      "updatedAt": "2023-05-25T11:32:02Z",
      "closedAt": "2023-05-25T11:32:02Z",
      "comments": []
    },
    {
      "number": 73,
      "id": "I_kwDOJbVClc5mnq5l",
      "title": "Fix format of transformation algo",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/73",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "individual-00"
      ],
      "body": "In the rendered HTML, the entire algo appears in one paragraph. The mmark is probably broken and has to be fixed.",
      "createdAt": "2023-05-23T09:52:36Z",
      "updatedAt": "2023-05-23T11:18:23Z",
      "closedAt": "2023-05-23T11:18:23Z",
      "comments": []
    },
    {
      "number": 75,
      "id": "I_kwDOJbVClc5mopEU",
      "title": "Example for JWT Issuer Metadata should contain kid as recommended",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/75",
      "state": "CLOSED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-23T12:08:48Z",
      "updatedAt": "2023-05-25T11:47:19Z",
      "closedAt": "2023-05-25T11:47:19Z",
      "comments": []
    },
    {
      "number": 81,
      "id": "I_kwDOJbVClc5mzaM0",
      "title": "Move flow diagram to intro section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/81",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "",
      "createdAt": "2023-05-24T21:18:46Z",
      "updatedAt": "2023-05-24T21:25:24Z",
      "closedAt": "2023-05-24T21:25:24Z",
      "comments": []
    },
    {
      "number": 89,
      "id": "I_kwDOJbVClc5m3NbB",
      "title": "Require `cnf` when holder binding is needed",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/89",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "awoie"
      ],
      "labels": [
        "HAS PR",
        "individual-00"
      ],
      "body": "The current language is not precise enough",
      "createdAt": "2023-05-25T12:41:28Z",
      "updatedAt": "2023-05-25T13:44:42Z",
      "closedAt": "2023-05-25T13:44:41Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "closing this because #91 got mergd",
          "createdAt": "2023-05-25T13:44:41Z",
          "updatedAt": "2023-05-25T13:44:41Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "I_kwDOJbVClc5m4T03",
      "title": "Introduction description on Status Provider",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/93",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "individual-03"
      ],
      "body": "The spec says:\r\n\r\n> To support revocation of Verifiable Credentials, an optional fourth party can be involved, a Status Provider, who delivers revocation information to Verifiers. (The Verifier can also serve as the Status Provider.)\r\n\r\nI think this is not optimal, as\r\n1. revocation is just an example of status\r\n2. Status Providers do not need to be a fourth party\r\n3. Verifiers are usually not the status provider but the issuer?\r\n\r\nI would suggest:\r\n\"To make status information of a Verifiable Credential after its issuance available, an optional Status Provider can provide status data, e.g. revocation. The role of the Status Provider can be assigned to the Issuer or an optional fourth party.\"",
      "createdAt": "2023-05-25T15:22:33Z",
      "updatedAt": "2023-06-22T09:50:58Z",
      "closedAt": "2023-06-22T09:50:58Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulbastian Since we merge https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/122, can we close this issue?",
          "createdAt": "2023-06-21T13:59:44Z",
          "updatedAt": "2023-06-21T13:59:44Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes",
          "createdAt": "2023-06-21T16:22:57Z",
          "updatedAt": "2023-06-21T16:22:57Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing since #122 got merged.",
          "createdAt": "2023-06-22T09:50:58Z",
          "updatedAt": "2023-06-22T09:50:58Z"
        }
      ]
    },
    {
      "number": 94,
      "id": "I_kwDOJbVClc5m4Vnz",
      "title": "Introduction description on Rationale",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/94",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "paulbastian"
      ],
      "labels": [
        "individual-01"
      ],
      "body": "The spec says:\r\n\r\n> However, JWT-based credentials do not support selective disclosure, i.e., the ability for a Holder to disclose only a subset of the claims contained in the JWT, which is a requirement to implement the three-party-model efficiently.\r\n\r\nIn my opinion this is not correct, because the text basically says: \"JWT-based credentials do not support selective disclosure [...] which is a requirement to implement the three-party-model efficiently\". Imo the need for SD-JWT comes from the shift from IdP to three-party-model.\r\n\r\nMy proposal:\r\n\"While JWT-based credentials enable selective disclosure, i.e., the ability for a holder to disclose only a subset of the contained claims, in an Identity Provider ecosystem by issuing new JWTs to the Verifier for every presentation, this approach does not work in the three-party-model.\"\r\n",
      "createdAt": "2023-05-25T15:26:11Z",
      "updatedAt": "2023-05-26T09:31:56Z",
      "closedAt": "2023-05-26T09:31:56Z",
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1",
          "createdAt": "2023-05-25T15:32:32Z",
          "updatedAt": "2023-05-25T15:32:32Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulbastian do you want to create the PR? Or should I create the PR?",
          "createdAt": "2023-05-25T15:36:09Z",
          "updatedAt": "2023-05-25T15:36:09Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I can do, just wanted to make sure its not for waste. Issue is less effort ;P",
          "createdAt": "2023-05-25T15:46:04Z",
          "updatedAt": "2023-05-25T15:46:04Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #95 got merged, closing this.",
          "createdAt": "2023-05-26T09:09:54Z",
          "updatedAt": "2023-05-26T09:09:54Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOJbVClc5m4lTY",
      "title": "Editorial change of headers/text regarding Data Format",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/96",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "I found several minor issues here:\r\n\r\nThe spec has the following headlines:\r\n\r\n>  4.2.1. Header Parameters\r\n    4.2.2 Claims\r\n\r\nComparing this to RFC7519 JWT these should be:\r\n4.2.1 JOSE Header\r\n4.2.2 JWT Claims Set\r\n\r\nAlso, in 4.2.2.1 type claim `StringOrURI` is never explained. This should be added to the Terminology. Its also missing a link to the Annex A.1.",
      "createdAt": "2023-05-25T16:07:36Z",
      "updatedAt": "2023-06-22T09:52:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Additionally, headline 4.2.2.1 would better fit saying \"New JWT Claims\"?",
          "createdAt": "2023-05-25T16:15:07Z",
          "updatedAt": "2023-05-25T16:15:07Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "I_kwDOJbVClc5m4pfO",
      "title": "Why is kid mandatory for cnf claims?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/97",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "The spec says:\r\n\r\n> cnf\r\nREQUIRED when Cryptographic Holder Binding is to be supported. Contains the confirmation method as defined in [[RFC7800](https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-sd-jwt-vc.html#RFC7800)]. It SHOULD contain a JWK as defined in Section 3.2 of [[RFC7800](https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-sd-jwt-vc.html#RFC7800)] and in this case, the kid (Key ID) member MUST be present in the JWK. For Cryptographic Holder Binding, the Holder Binding JWT in the Combined Format for Presentation MUST be signed by the key identified in this claim.\r\n\r\nI don't see why `kid` is a MUST.\r\nMoreover, the example in 4.3 does not include the `kid`, so either the text or the exampel is wrong.",
      "createdAt": "2023-05-25T16:19:05Z",
      "updatedAt": "2023-06-28T18:02:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yeah, the `kid` member in the cnf JWK shouldn't be a MUST. It probably shouldn't be mentioned at all. ",
          "createdAt": "2023-05-26T21:36:36Z",
          "updatedAt": "2023-05-26T21:36:36Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@bc-pi @paulbastian The reason why it is there is to avoid ambiguities between the key that signs the key binding (holder binding) JWT and the potential inclusion of a cnf `kid`. If you think that there is no issue, we can remove this requirement from the spec. IMO, RFC7800 doesn't say that this is the case but I might be missing something.\r\n\r\nAlternatively, we could say, that `kid` and `jwk` SHOULD be present.",
          "createdAt": "2023-06-21T14:19:14Z",
          "updatedAt": "2023-06-21T14:19:14Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I honestly don't follow what ambiguity there might be...\r\n\r\nA `cnf` claim with the `jwk` member (having only the required parameters) unambiguously has the whole public key that corresponds to the private key that signs the Key Binding JWT. That's it. And that's sufficient. That's what all the examples in SD-JWT have (like [this one](https://www.ietf.org/archive/id/draft-ietf-oauth-selective-disclosure-jwt-04.html#section-5.2-4)) by the way. And as @paulbastian pointed out, the [example in SD-JWT VC](https://datatracker.ietf.org/doc/html/draft-terbu-sd-jwt-vc-02#section-4.3-4) is the same (a `cnf` with a `jwk` having only the required parameters). \r\n\r\nThe text, \"and in this case, the kid (Key ID) member MUST be present in the JWK\" can just be removed from the spec. \r\n",
          "createdAt": "2023-06-21T16:13:09Z",
          "updatedAt": "2023-06-21T19:21:27Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@awoie I don't understand your concerns. Can you provide examples?",
          "createdAt": "2023-06-21T19:17:49Z",
          "updatedAt": "2023-06-21T19:17:49Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we are good here and we should remove the `kid` requirement as @bc-pi suggested. \r\n\r\nEspecially because we have the following requirement...\r\n\r\n> Holder Binding, the Holder Binding JWT in the Combined Format for Presentation MUST be signed by the key identified in this claim.\r\n\r\nMy concern was that technically the following is possible as well:\r\n\r\n```\r\n\"cnf\": {\r\n  \"kid\": \"some-kid-1\",\r\n  \"jwk\": {\r\n    \"kid\": \"another-kid-2\",\r\n    ....\r\n  }\r\n}\r\n```\r\n\r\nThat could lead to ambiguities and the verifier might need to test both confirmation method to verify the key binding JWT. If this is not possible by another requirement in either RFC7800 or the SD-JWT draft, then I might have overlooked that.",
          "createdAt": "2023-06-22T08:47:00Z",
          "updatedAt": "2023-06-22T08:47:00Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Needs PR to remove requirements on `kid` in `cnf`.",
          "createdAt": "2023-06-22T09:54:50Z",
          "updatedAt": "2023-06-22T09:54:50Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #141 removes requirements to have kid in jwk in cnf\r\n\r\n@awoie I think you are right that RFC7800 doesn't strictly prohibit something like that but it seems generally understood and I've never encountered a cnf claim with more than one member in it  \r\n",
          "createdAt": "2023-06-23T21:51:00Z",
          "updatedAt": "2023-06-23T21:51:00Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think RFC7800 allows for multiple JWKs in one `cnf` claim: https://www.rfc-editor.org/rfc/rfc7800#section-3.2\r\n\r\nand I think it indirectly prohibits the following example Oliver is concerned with because section 3.2 limits cnf claim with only jwk member and only mentions that that jwk member may contain a `kid`:\r\n```\r\n\"cnf\": {\r\n  \"kid\": \"some-kid-1\",\r\n  \"jwk\": {\r\n    \"kid\": \"another-kid-2\",\r\n    ....\r\n  }\r\n}\r\n```\r\n\r\nso all good removing kid requirement with jwk member in cnf claim",
          "createdAt": "2023-06-28T18:02:23Z",
          "updatedAt": "2023-06-28T18:02:23Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "I_kwDOJbVClc5m4s-p",
      "title": "Are we missing a chapter on creation?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/98",
      "state": "CLOSED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "While RFC7519 on JWTs has a chapter on Creation of JWTs, the SD-JWT and this spec jump right to Examples on continue with guideline for presentation/verification. Do you see any need for such a Creation chapter/section?",
      "createdAt": "2023-05-25T16:30:24Z",
      "updatedAt": "2023-06-22T09:56:24Z",
      "closedAt": "2023-06-22T09:56:24Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO, it is not needed. \r\n\r\nWe have the following language already:\r\n> SD-JWT VCs MUST be encoded using the SD-JWT Combined Format for Issuance as defined in Section 5.3. of [I-D.ietf-oauth-selective-disclosure-jwt].\r\n\r\n> A presentation of an SD-JWT VC MUST be encoded using the SD-JWT Combined Format for Presentation as defined in Section 5.4. of [I-D.ietf-oauth-selective-disclosure-jwt].\r\n\r\nAdding that section is not adding anything valuable in my mind, it would really just be something like \"create an SD-JWT according to I-D.ietf-oauth-selective-disclosure-jwt, which is already implicitly contained in the statements above. If other people really feel strongly about requiring that extra guidance, I'm happy to add those sections, otherwise, I'd say it is not needed.",
          "createdAt": "2023-06-21T14:27:55Z",
          "updatedAt": "2023-06-21T14:27:55Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How SD-JWTs are created is well defined in the SD-JWT spec. There is no need to have a section on creating SD-jWTs here.",
          "createdAt": "2023-06-22T09:56:24Z",
          "updatedAt": "2023-06-22T09:56:24Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "I_kwDOJbVClc5m40I4",
      "title": "Header Section kid parameter",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/99",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "Section 5 describes how to use `iss` and well-known directory to fetch the issuer key and verify the VC.\r\nIn my opinion it makes sense to name the `kid` parameter as a SHOULD or MAY in section 4.2.1 and make a link to Section 5.",
      "createdAt": "2023-05-25T16:54:00Z",
      "updatedAt": "2023-06-21T14:37:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "the kid allows an easy lookup of the key, since it should not collide to any other kid value, it should be created according to rfc7638\r\nit is like a primary key in a sql schema, better having it and by default with a non colliding value",
          "createdAt": "2023-05-25T22:41:03Z",
          "updatedAt": "2023-05-25T22:41:03Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There are different ways to convey key material in an SD-JWT VC. I thus would not add text specific to JWT Issuer Metadata in Section 4.2.1.. \r\n\r\nI would prefer if the metadata section would state something like \"if this mechanism is used, the issuer MAY need to add a kid to the signed VCs\". Otherwise, it is a back and force. ",
          "createdAt": "2023-05-28T10:10:00Z",
          "updatedAt": "2023-05-28T10:10:00Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we should add an example to Section 5 that shows the header of an SD-JWT VC with a `kid`. There is no need to fix the example in Section 4.2.1 since the `kid` is only RECOMMENDED when using the JWT (VC) Issuer Metadata which is an OPTIONAL feature. \r\n\r\nFrom Section 5:\r\n>    It is RECOMMENDED that the JWT contains a kid JWT header parameter\r\n   that can be used to lookup the public key in the JWK Set included by\r\n   value or referenced in the JWT Issuer Metadata.",
          "createdAt": "2023-06-21T14:36:52Z",
          "updatedAt": "2023-06-21T14:36:52Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "I_kwDOJbVClc5m6VTu",
      "title": "jwt-issuer renamed to vc-jwt-issuer ",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/101",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "HAS PR",
        "discuss",
        "individual-??"
      ],
      "body": "Every entity in the OAuth/OpenID is potentially a JWT issuer, then I found the name of this endpoint misleading.\r\n\r\nConsidering that this brand new specification defines a profile for SD JWT verifiable credentials, I'd propose to change the pathname to\r\n\r\n.well-known/vc-jwt-issuer\r\n ",
      "createdAt": "2023-05-25T22:30:38Z",
      "updatedAt": "2023-06-28T17:54:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "The idea is that the JWT Issuer could be used with any JWT, not necessarily VCs only. ",
          "createdAt": "2023-05-26T09:03:45Z",
          "updatedAt": "2023-05-26T09:03:45Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@tlodderstedt what do you think?",
          "createdAt": "2023-05-26T09:03:53Z",
          "updatedAt": "2023-05-26T09:03:53Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@peppelinux is there a reason the JWT Issuer should not be used with something else than VCs?",
          "createdAt": "2023-05-26T09:04:23Z",
          "updatedAt": "2023-05-26T09:04:23Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "There are well known endpoints like openid-configuration or openid-federation that publish entities metadata, including jwks\r\n\r\nSince this specs Is related to VC based on sd-jwt,  this specs should not be in conflict to pre existing Oauth2/OpenID ecosystem\r\n\r\nSD-JWT-VC should define only the resources needed for the solution It defines",
          "createdAt": "2023-05-26T23:01:28Z",
          "updatedAt": "2023-05-26T23:01:28Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm ok with the proposed change. I anyway assume we will add VC issuance specific metadata in the future (it is not limited to key distribution). ",
          "createdAt": "2023-05-28T10:02:39Z",
          "updatedAt": "2023-05-28T10:03:36Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I agree @tlodderstedt, \r\n\r\nKey attestation alone Is not enough, this endpoint deserves a proper identity with a specialized protocol metadata\r\n\r\nAlso the verifiable attestations related to the entity may be available in it",
          "createdAt": "2023-05-28T14:13:38Z",
          "updatedAt": "2023-05-28T14:13:38Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "To me this sounds reasonable. I will update the spec accordingly. ",
          "createdAt": "2023-06-08T14:43:18Z",
          "updatedAt": "2023-06-08T14:43:18Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "(As a record, I repeat my question I made elsewhere in the past.)\r\n\r\nWhy is it necessary to introduce a new `/.well-known` path, especially if the expected content is just like below (excerpt from \"[5.2. JWT Issuer Metadata Response](https://www.ietf.org/archive/id/draft-terbu-sd-jwt-vc-02.html#name-jwt-issuer-metadata-response-3)\")?\r\n\r\n```json\r\n{\r\n   \"issuer\":\"https://example.com/\",\r\n   \"jwks_uri\":\"https://jwt-issuer.example.org/my_public_keys.jwks\"\r\n}\r\n```\r\n\r\nIsn't the `jku` JWS header parameter (RFC 7515 [Section 4.1.2](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.2)) like below sufficient?\r\n\r\n```json\r\n{\r\n  \"alg\": \"ES256\",\r\n  \"typ\": \"vc+sd-jwt\",\r\n  \"jku\": \"https://jwt-issuer.example.org/my_public_keys.jwks\"\r\n}\r\n```",
          "createdAt": "2023-06-08T15:14:48Z",
          "updatedAt": "2023-06-08T15:14:48Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(For the record, I repeat my answer I gave on Slack and add more context)\r\n\r\nThe jku header is not sufficient for the intended purpose. The purpose of the well-know endpoint is to establish a stable issuer identifier independent of the jwks location. This issuer identifier can be used in other structures to establish trust, e.g. it can be added to trusted lists (verifier end or trusted 3rd party). Additionally, it fits nicely with the other well-known locations, like openid-credential-issuer and oauth-authorization-server. So the issuer can distribute the role specific metadata in different location residing under the same issuer identifier. And not to forget, this well-known location also could work well with openid-federation.\r\n\r\nMoreover, any additional VC issuer metadata we will come across can be added to this endpoint.\r\n\r\nBTW: I think a dedicated issue would be the better place for this discussion.",
          "createdAt": "2023-06-08T15:45:57Z",
          "updatedAt": "2023-06-09T00:50:56Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am actually in favor of `jwt-issuer`. This mechanism is meant to be general enough to be used with not just a 'verifiable credential'. and I don't think anyone would think to use `.well-known/jwt-issuer` with ID Tokens and Access Tokens, UserInfo responses , etc. that are JWTs.",
          "createdAt": "2023-06-09T01:58:59Z",
          "updatedAt": "2023-06-09T01:58:59Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I understand your point @Sakurann, below my thoughts\r\n\r\n1. Why defining jwt-issuer for general purpose in a spec that's specialized for VC? Requirement: definition of a specs in IETF for general purpose JWT Issuer metadata (enabling client metadata, that today is only available in openid-federation...)\r\n\r\n2. I agree that jwt-vc-issuer semantically collides with credential-issuer, and we should not do collisions\r\n\r\n3. why we can't use .well-known/openid-federation? Federation entity discovery is required for the entities that builds trust chain according to the federation specs, nothing prevent to publish all the metadata of all thw \"JWT-role\" in a single metadata, that should not be signed if request (content-type) asks it in plain text\r\n\r\nI suggest to use `.well-known/openid-federation` to consolidate a unique way to publish all the metadata types and roles of an entity.\r\n\r\ncoming back to the name change proposal. Why we use the term `issuer` since the metadata contains also general capabilities not related to the issuance?\r\n\r\nin a more general purpose way, wouldn't it be a `.well-known/oauth-entity`?\r\nthen the question: if that entity has more functionalities and roles, being at the same time a RP and a AS, how the metadata should be organized?\r\n\r\nWe've resolved this issue in openid-federation, with the below schema, where a RP can be also a OP, AS, Client, credential-issuer and so on:\r\nhttps://github.com/italia/spid-cie-oidc-docs/blob/versione-corrente/docs/common/common_examples.rst#en-11-entity-configuration-response-relying-party",
          "createdAt": "2023-06-09T10:27:12Z",
          "updatedAt": "2023-06-09T10:28:38Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "I'm a little embarrassed, but to be honest, I still don't understand the reasoning. \"A stable issuer identifier\" is represented by the `iss` claim, not by the URL of the well-known endpoint, isn't it?\r\n\r\nA possible reason for necessity of a well-known path I guess is _\"to make sure that the host identified by the issuer identifier actually exists and is accessible, by forcing JWT verifiers to access a path under the domain.\"_\r\n\r\nAn example with concrete values would be _\"to make sure that the host `example.com` identified by the issuer identifier `https://example.com` actually exists and is accessible, by forcing JWT verifiers to access a path (`/.well-known/{whatever}`) under the domain (`example.com`).\"_\r\n\r\nIt might be beneficial to define `/.well-known/jwt-issuer` as the ultimate fallback general-purpose option for locating the public key required to verify the JWT's signature (not as the sole rule for every VC to follow), especially when it is challenging to reach a consensus on a single method within a limited timeframe among the following.\r\n\r\n1. `jwk`\r\n1. `x5c`\r\n1. `kid` starting with `did:`\r\n1. `jku`\r\n1. `trust_chain`\r\n1. `/.well-known/openid-configuration`\r\n1. `/.well-known/openid-federation`\r\n1. `/.well-known/vc-jwt-issuer`\r\n1. `./well-known/openid-credential-issuer`\r\n1. `/.well-known/jwt-issuer`\r\n1. Others\r\n\r\nHowever, maybe I'm still missing something, sorry.",
          "createdAt": "2023-06-15T07:10:38Z",
          "updatedAt": "2023-06-15T07:10:38Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The well-known endpoint is indeed also a stable identifier. But it depends on a certain well-known location, i.e. different well-known locations are different identifiers. \r\n\r\nI'm looking for a stable identifier for the issuer that works across .well-known locations and is not bound to a certain key. That's pretty simple with well-known locations as the iss value can be extended by several different .well-known locations, but the identifier is still the same, right?\r\n\r\nSo for example, the issuer could use the jwt-issuer mechanism share keys and (at the same time) be part of an OpenID Federation as shown in the following:\r\n\r\n<iss>/.well-known/jwt-issuer\r\n<iss>/.well-known/openid-federation\r\n\r\nThe same issuer's URL could also at the same time used in an external data structure at the verifier or at a trusted 3rd party. \r\n\r\nEffect: I can establish trust in a certain issuer/entity/server that works across different roles/perspectives.  \r\n\r\nI hope that explains better. ",
          "createdAt": "2023-06-15T16:23:55Z",
          "updatedAt": "2023-06-15T16:23:55Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I'm looking for a stable identifier for the issuer that works across .well-known locations and is not bound to a certain key\r\n\r\nthis would allow an entity to use different keys to sign ID Tokens, VCs, access tokens, etc.",
          "createdAt": "2023-06-17T07:02:03Z",
          "updatedAt": "2023-06-17T07:02:03Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "my question is\r\n\r\nhow to specify different capabilities for different metadata protocols?\r\n\r\nthis is an example in oidc federation\r\nhttps://github.com/italia/eidas-it-wallet-docs/pull/14/files#diff-f44e126e298004564899b4b86fc1f5e074b5ca6a96e9f546b7a1ed8987e61735R542\r\n\r\nhere we're saying, this is the wallet provider metadata, where multiple metadata/roles cohexists in a single .well-known\r\n\r\nhow jwt-issuer endpoint achieves this?",
          "createdAt": "2023-06-17T12:52:24Z",
          "updatedAt": "2023-06-17T12:57:09Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "If the `typ` JWS header indicates that the JWT is a VC (e.g. `\"typ\":\"vc+sd-jwt\"`), the following paths also can work.\r\n\r\n- `/.well-known/openid-credential-issuer` (defined in OID4VCI)\r\n- `/.well-known/vc-jwt-issuer` (proposed by this issue)\r\n\r\nI'd like to understand why the generic name `jwt-issuer` is chosen. The generic name is subject to interpretation where authorization servers, relying parties and any JWT-issuing systems should provide `/.well-known/jwt-issuer` to expose their metadata (at least `jwks_uri` or `jwks`) as the last resort. What if one server behaves as both an authorization server and a credential issuer? Should the authorization server publish the same content at both `/.well-known/openid-configuration` and `/.well-known/jwt-issuer`? Should intermediate authorities and trust anchors of OIDC Federation also provide `/.well-known/jwt-issuer`? Such a conflict is what I'm (and ordinary server implementers will be) concerned about.\r\n\r\nThe latest draft of \"[SD-JWT-based Verifiable Credentials with JSON payloads (SD-JWT VC)](https://datatracker.ietf.org/doc/draft-terbu-sd-jwt-vc/)\" defines `jwks_uri` and `jwks` jwt-issuer metadata. If so, there is no reason to prevent adding the same metadata to OID4VCI [Credential Issuer Metadata](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-issuer-metadata) as well. Basically, I believe the metadata should be added to OID4VCI regardless of the discussion about jwt-issuer.",
          "createdAt": "2023-06-17T18:43:09Z",
          "updatedAt": "2023-06-17T18:43:09Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Potentially fixed by #118 ",
          "createdAt": "2023-06-21T14:38:23Z",
          "updatedAt": "2023-06-21T14:38:23Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@TakahikoKawasaki raises an important question that we need to address, at least by giving guidance. I don't have a good answer to that at the moment.\r\n\r\nBesides that, I don't see a need to rename to `jwt-vc-issuer`.",
          "createdAt": "2023-06-22T09:18:45Z",
          "updatedAt": "2023-06-22T09:18:45Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@TakahikoKawasaki correct me if I'm wrong. I understand you prefer `vc-jwt-issuer` over `jwt-issuer`, right? And whether the key data will be added to the `openid-credential-issuer` is a different topic (that's how I read your last statement). \r\nPlease conform. ",
          "createdAt": "2023-06-27T13:39:47Z",
          "updatedAt": "2023-06-27T13:39:47Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "We will need more discussions on that topic. Potentially at IETF 117. This means, we won't be able to resolve this issue for our individual draft 03.",
          "createdAt": "2023-06-27T20:03:24Z",
          "updatedAt": "2023-06-27T20:03:24Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @TakahikoKawasaki raises an important question that we need to address, at least by giving guidance. I don't have a good answer to that at the moment.\r\n> \r\n> Besides that, I don't see a need to rename to `jwt-vc-issuer`.\r\n\r\nWe had a small discussion on this and I created a new issue #143 so we can separate between the 2 discussions overlapping here (name of the endpoint and intended usage). ",
          "createdAt": "2023-06-27T20:37:59Z",
          "updatedAt": "2023-06-27T20:37:59Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "Regarding the `/.well-known/jwt-issuer` path, I have been losing confidence in my own opinion. As an implementer who has implemented numerous OAuth/OIDC specifications and been leading development of Authlete that holds the most OpenID certifications in the world, my intuition told me _\"The `/.well-known/jwt-issuer` path should be avoided due to possible conflicts with other specifications.\"_ However, I haven't received as much support for my opinion as I expected. For now, I will implement my OID4VCI implementation using the `/.well-known/jwt-issuer` path. Please let me withdraw my opinion.",
          "createdAt": "2023-06-27T20:40:17Z",
          "updatedAt": "2023-06-27T20:40:17Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I agree the position of @TakahikoKawasaki, while in the italian solution we're implementing **openid-credential-issuer** as metadata within the .well-known/openid-federation endpoint, according to OpenID Federation 1.0.\r\n\r\nThis doesn't prevent to include also a jwt-issuer metadata type but there's the decision by our side to wait and the same time give evidence of our implementation to help the consolidation of the vc-jwt-issuer specs",
          "createdAt": "2023-06-28T13:26:10Z",
          "updatedAt": "2023-06-28T13:27:16Z"
        },
        {
          "author": "TakahikoKawasaki",
          "authorAssociation": "NONE",
          "body": "@peppelinux\r\nAn off-topic question out of curiosity. If an authorization server / OpenID provider and a credential issuer are hosted on the same server, the payload of the entity configuration published at `/.well-known/openid-configuration` of the server contains the following, right?\r\n\r\n```json\r\n\"metadata\": {\r\n  \"openid_provider\": { \"...\":\"...\" },\r\n  \"openid-credential-issuer\": { \"...\":\"...\" }\r\n}\r\n```",
          "createdAt": "2023-06-28T14:42:52Z",
          "updatedAt": "2023-06-28T14:42:52Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Hey @TakahikoKawasaki, I'm sure that you meant `openid-federation`\r\n\r\nThe answer Is yes, even if we have used a snake case like `openid_credential_issuer` here\r\n\r\nhttps://italia.github.io/eidas-it-wallet-docs/en/pid-issuing.html\r\n\r\nIt's still an initial draft without an official release, several editorials and implementation compromises needs to be resolved but the most of the work Is there, feelfree to open issue for discussion here\r\n\r\nhttps://github.com/italia/eidas-it-wallet-docs",
          "createdAt": "2023-06-28T17:54:18Z",
          "updatedAt": "2023-06-28T17:54:18Z"
        }
      ]
    },
    {
      "number": 102,
      "id": "I_kwDOJbVClc5m86Tt",
      "title": "Add support for JWT without SD",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/102",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "HAS PR",
        "pending close",
        "individual-03"
      ],
      "body": "Ideally, we have one spec for SD-JWT VC and JWT VC. This issue is about adding support for vanilla JWTs.",
      "createdAt": "2023-05-26T09:23:57Z",
      "updatedAt": "2023-06-27T16:06:47Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "Totally good to merge up [draft-prorock-jose-native-jwt-vcs](https://datatracker.ietf.org/doc/draft-prorock-jose-native-jwt-vcs/) - that may have things covered or at least heading the right direction?\r\n\r\nwant me to put a PR together on that?",
          "createdAt": "2023-05-26T16:00:54Z",
          "updatedAt": "2023-05-26T16:00:54Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "in progress - stand by...",
          "createdAt": "2023-05-30T15:22:58Z",
          "updatedAt": "2023-05-30T15:22:58Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "please take a look - https://github.com/mesur-io/ietf-misc/blob/main/draft-prorock-oauth-jwt-vcs.md \r\n\r\nthis should merge everything up - there will definitely need to be an editorial pass.\r\nthe md generated `-00` xml/txt versions are good to go from an idnits standpoint\r\n\r\nedit - if things look good i will pr over to this repo with the updated draft to build on and we can submit and mark that it replaces the prior drafts.",
          "createdAt": "2023-05-30T15:53:31Z",
          "updatedAt": "2023-05-30T16:08:11Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @mprorock @OR13 for helping with this. We have merged #131. @mprorock @OR13 Can you confirm that after merging #131, the spec achieves now the same goal as https://github.com/mesur-io/ietf-misc/blob/main/draft-prorock-oauth-jwt-vcs.md and there is no need to maintain two different specs? In that case, I'll close this issue.",
          "createdAt": "2023-06-21T14:42:56Z",
          "updatedAt": "2023-06-21T14:43:24Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "Seems like this was merged / should be closed.... We should address the spec title next (in an other issue)",
          "createdAt": "2023-06-27T16:06:47Z",
          "updatedAt": "2023-06-27T16:06:47Z"
        }
      ]
    },
    {
      "number": 103,
      "id": "I_kwDOJbVClc5m8_Ky",
      "title": "Remove W3C VCDM transformation algo",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/103",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "individual-01"
      ],
      "body": "Remove W3C VCDM transformation algo for now",
      "createdAt": "2023-05-26T09:35:46Z",
      "updatedAt": "2023-05-26T11:59:17Z",
      "closedAt": "2023-05-26T11:59:17Z",
      "comments": []
    },
    {
      "number": 108,
      "id": "I_kwDOJbVClc5nAigC",
      "title": "Why private claims are out of scope?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/108",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "individual-03"
      ],
      "body": "> JWTs (and SD-JWTs) can contain claims that are registered in \"JSON Web Token Claims\" registry as defined in [[RFC7519](https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-sd-jwt-vc.html#RFC7519)], as well as public and private claims. Private claims are not relevant for this specification due to the openness of the three-party-model.\r\n\r\nI do not understand this sentence. Because of the different use-cases, private claims are very relevant to the three-party model. \r\n\r\n(cc @tlodderstedt)",
      "createdAt": "2023-05-26T20:14:03Z",
      "updatedAt": "2023-06-21T14:46:00Z",
      "closedAt": "2023-06-21T14:45:47Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Can you give an example where this is relevant? With excluding private\nclaims we make sure all claims are uniquely identifiable across all parties\nof the three-party-model.\n\nOn Fri 26. May 2023 at 22:14, Kristina ***@***.***> wrote:\n\n> JWTs (and SD-JWTs) can contain claims that are registered in \"JSON Web\n> Token Claims\" registry as defined in [RFC7519\n> <https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-sd-jwt-vc.html#RFC7519>],\n> as well as public and private claims. Private claims are not relevant for\n> this specification due to the openness of the three-party-model.\n>\n> I do not understand this sentence. Because of the different use-cases,\n> private claims are very relevant to the three-party model.\n>\n> (cc @tlodderstedt <https://github.com/tlodderstedt>)\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/108>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AKLN3MCJEET34D4PKKAKXB3XIEFJNANCNFSM6AAAAAAYQUXPXI>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
          "createdAt": "2023-05-27T08:07:13Z",
          "updatedAt": "2023-05-27T08:07:13Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "We will also avoid name collisions this way.\n\nOn Sat 27. May 2023 at 10:06, Oliver Terbu ***@***.***>\nwrote:\n\n> Can you give an example where this is relevant? With excluding private\n> claims we make sure all claims are uniquely identifiable across all parties\n> of the three-party-model.\n>\n> On Fri 26. May 2023 at 22:14, Kristina ***@***.***> wrote:\n>\n>> JWTs (and SD-JWTs) can contain claims that are registered in \"JSON Web\n>> Token Claims\" registry as defined in [RFC7519\n>> <https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-sd-jwt-vc.html#RFC7519>],\n>> as well as public and private claims. Private claims are not relevant for\n>> this specification due to the openness of the three-party-model.\n>>\n>> I do not understand this sentence. Because of the different use-cases,\n>> private claims are very relevant to the three-party model.\n>>\n>> (cc @tlodderstedt <https://github.com/tlodderstedt>)\n>>\n>> \u2014\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/108>, or\n>> unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AKLN3MCJEET34D4PKKAKXB3XIEFJNANCNFSM6AAAAAAYQUXPXI>\n>> .\n>> You are receiving this because you are subscribed to this thread.Message\n>> ID: ***@***.***>\n>>\n>\n",
          "createdAt": "2023-05-27T08:08:43Z",
          "updatedAt": "2023-05-27T08:08:43Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Why are we worrying about name collisions? By prohibiting usage of private claims, We are limiting to the use-cases that need only public claims to express claims about the subject.",
          "createdAt": "2023-05-27T08:27:16Z",
          "updatedAt": "2023-05-27T08:27:16Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Aren't all the example in the spec right now using private claims instead of public claims? I don't see any problem with private claims",
          "createdAt": "2023-05-27T08:55:57Z",
          "updatedAt": "2023-05-27T08:55:57Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, then we should say SHOULD use registered or public claims to facilitate\ninterop and avoid name collisions. Can you adjust your PR?\n\nI really want folks just using private claims for use cases that are closed.\n\nOn Sat 27. May 2023 at 10:27, Kristina ***@***.***> wrote:\n\n> Why are we worrying about name collisions? By prohibiting usage of private\n> claims, We are limiting to the use-cases that need only public claims to\n> express claims about the subject.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/108#issuecomment-1565268565>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AKLN3MECCHR4B4AKCCCKXTLXIG3G5ANCNFSM6AAAAAAYQUXPXI>\n> .\n> You are receiving this because you commented.Message ID:\n> ***@***.***>\n>\n",
          "createdAt": "2023-05-27T08:57:23Z",
          "updatedAt": "2023-05-27T08:57:23Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO, those examples should probably be fixed. Name collisions are a problem.\n\nOn Sat 27. May 2023 at 10:56, Paul Bastian ***@***.***> wrote:\n\n> Aren't all the example in the spec right now using private claims instead\n> of public claims? I don't see any problem with private claims\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/108#issuecomment-1565288174>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AKLN3MGTSRQHQ6PKKB4WFTDXIG6SRANCNFSM6AAAAAAYQUXPXI>\n> .\n> You are receiving this because you commented.Message ID:\n> ***@***.***>\n>\n",
          "createdAt": "2023-05-27T08:58:58Z",
          "updatedAt": "2023-05-27T08:58:58Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If we want to encourage public claims instead of private claims, then this should be reflected in some examples of the document",
          "createdAt": "2023-05-27T08:59:24Z",
          "updatedAt": "2023-05-27T08:59:24Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with Kristina. I don't understand this constrained and miss a justification.\r\n\r\nIn my opinion, what we call private claim could also be a collision resistant claim defined by a community/sdo, that is just not registered in the IANA registry. Something like `<fqdn>.<claim>`.\r\n\r\nI suggest to revert to the previous text that allowed for private claims, too.",
          "createdAt": "2023-05-27T09:31:10Z",
          "updatedAt": "2023-05-28T10:01:17Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I thought that was included in the definition of a public claim. But I\ndouble checked and you are right. We should fix that.\n\nOn Sat 27. May 2023 at 11:31, Torsten Lodderstedt ***@***.***>\nwrote:\n\n> I agree with Kristina. I don't understand this constrained and miss a\n> justification.\n>\n> In my opinion, what we call private claim could also be a collision\n> resistant claim defined by a community/sdo, that is just not registered in\n> the IANA registry. Something like \".\".\n>\n> I suggest to revert to the previous text that allowed for private claims,\n> too.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/108#issuecomment-1565305030>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AKLN3MCWOWRN7PINVR4KEHLXIHCWTANCNFSM6AAAAAAYQUXPXI>\n> .\n> You are receiving this because you commented.Message ID:\n> ***@***.***>\n>\n",
          "createdAt": "2023-05-27T10:09:23Z",
          "updatedAt": "2023-05-27T10:09:23Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue since we merged #109 ",
          "createdAt": "2023-06-21T14:45:47Z",
          "updatedAt": "2023-06-21T14:45:47Z"
        }
      ]
    },
    {
      "number": 110,
      "id": "I_kwDOJbVClc5nAp_y",
      "title": "make HB JWT mandatory",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/110",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss",
        "pending close"
      ],
      "body": "I thought we have previously agreed to make HB JWT mandatory ([current text reads MAY](https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-sd-jwt-vc.html#section-6.1-2)). I think it is critical for the interoperability to mandate HB JWT. \r\n\r\nand with [PR 262](https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/262) in sd-jwt being merged, SD-JWT will normatively define the structure of HB-JWT so section 6.1.1 in sd-jwt vc should also be removed.",
      "createdAt": "2023-05-26T20:46:09Z",
      "updatedAt": "2023-06-22T10:00:08Z",
      "closedAt": "2023-06-22T10:00:08Z",
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree moving the HB-JWT to SD-JWT spec and removing it from SD-JWT-VC but I would like to keep cryptographic holder binding optional. Claim based holder binding is a simple and easy solution that will be requested by adopters. ",
          "createdAt": "2023-05-27T08:45:13Z",
          "updatedAt": "2023-05-27T08:45:13Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "At the same time it might make sense to give more guidance in this direction in the spec",
          "createdAt": "2023-05-27T08:45:58Z",
          "updatedAt": "2023-05-27T08:45:58Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the vc-sd-jwt should be the module describing how VCs shall be implemented with SD-JWT, however it should be flexible enough to be used in different contexts. \r\n\r\n Interoperability is the point of the high assurance profile. It does already make the HB JWT mandatory. I think this is sufficient. ",
          "createdAt": "2023-05-28T10:00:36Z",
          "updatedAt": "2023-05-28T10:00:36Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@Sakurann I agree with @tlodderstedt that key binding should stay optional in this specification. More specific profiles may or may not make it mandatory. \r\n\r\nI'm marking as pending close and will close after 1 week of no activity. ",
          "createdAt": "2023-06-21T14:49:48Z",
          "updatedAt": "2023-06-21T14:49:48Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We just discussed this again and agree that this should be closed.",
          "createdAt": "2023-06-22T10:00:08Z",
          "updatedAt": "2023-06-22T10:00:08Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "I_kwDOJbVClc5nAzkR",
      "title": "don't use \"Three-Party-Model\"",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/111",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "There are lots of things that could be described as a three-party model (including classic OAuth where this work is aspiring for adoption). The use of \"Three-Party-Model\" in this document strikes me as somewhat presumptuous and potentially misleading or confusing. Could we instead use \"Issuer-Holder-Verifier Model\"? \r\n\r\n\r\n",
      "createdAt": "2023-05-26T21:28:05Z",
      "updatedAt": "2023-06-22T09:34:38Z",
      "closedAt": "2023-06-22T09:34:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I agree, since there must be always a trusted third party in the model, like a trust anchor or its intermediate",
          "createdAt": "2023-05-26T23:04:43Z",
          "updatedAt": "2023-05-26T23:04:43Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I typically refer to this model as \"decentralized identity\" or \"verifiable credentials applications/solutions/ecosystems\", I would be fine with \"digital credentials applications/solutions/ecosystems\". ",
          "createdAt": "2023-05-28T09:57:35Z",
          "updatedAt": "2023-05-28T09:57:35Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm suggesting only to replace the 5 or 6 usages of \"Three-Party-Model\" with \"Issuer-Holder-Verifier Model\". ",
          "createdAt": "2023-05-28T19:21:10Z",
          "updatedAt": "2023-05-28T19:21:10Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "That would work for me and I understand that Three-Party-Model is confusing since other architectures also involve 3 parties.",
          "createdAt": "2023-05-29T11:14:56Z",
          "updatedAt": "2023-05-29T11:14:56Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm ok with using \"Issuer-Holder-Verifier Model\". ",
          "createdAt": "2023-05-29T17:04:50Z",
          "updatedAt": "2023-05-29T17:04:50Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "It seems that this issue is ready for a PR.",
          "createdAt": "2023-06-21T14:50:22Z",
          "updatedAt": "2023-06-21T14:50:22Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> It seems that this issue is ready for a PR.\r\n\r\n#138 is that PR ",
          "createdAt": "2023-06-21T19:51:06Z",
          "updatedAt": "2023-06-21T19:51:06Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "I_kwDOJbVClc5nA1Nx",
      "title": "Why is JWT issuer metadata part of this spec?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/112",
      "state": "OPEN",
      "author": "andresuribe87",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "tlodderstedt"
      ],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "Mechanisms to go from `iss` -> cryptographic public key that can be used for signature verification seem to be out of scope for this document. Why is it included? ",
      "createdAt": "2023-05-26T21:37:48Z",
      "updatedAt": "2023-06-22T10:02:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Is the purpose of the issuer metadata to provide an alternative to x509 certificates (that can today be shared via the x* header claims)?",
          "createdAt": "2023-06-13T19:35:04Z",
          "updatedAt": "2023-06-13T19:35:04Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Mechanisms to go from iss -> cryptographic public key that can be used for signature verification seem to be out of scope for this document. Why is it included?\r\n\r\nWe could have put that in a separate spec, but that would have been a very small one. We felt JWT issuer metadata is tightly enough related to VCs that having the meta and configuration data distribution mechanism in the same spec as the VCs makes sense.  \r\n\r\n> Is the purpose of the issuer metadata to provide an alternative to x509 certificates (that can today be shared via the x* header claims)?\r\n\r\nWe want to provide implementers a simple way to resolve keys similar to how OpenID Connect does it. And yes, that is an alternative to x.509, but also other mechanisms, like DIDs.",
          "createdAt": "2023-06-13T20:40:55Z",
          "updatedAt": "2023-06-13T20:40:55Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "_We could have put that in a separate spec, but that would have been a very small one. We felt JWT issuer metadata is tightly enough related to VCs that having the meta and configuration data distribution mechanism in the same spec as the VCs makes sense._\r\n\r\nResolving keys without an ability to resolve information about key attestation/certificates, etc., is not enough. The proposed model works under assumption that there is a relationship between all the participants since only key is resolved. For an open system, the metadata should return more information, like key attestations, trust chains, accreditations, and other.\r\n\r\nIf the specs are aiming at closed systems where all the rules are clear, the proposal is fine. Else, a separate specification (that would be much more elaborate) would be required.\r\n\r\nThe model assumes .well-known endpoint which makes it compatible only with did:web. Why not using DID web then? with additional query parameter DID method should be able to return a specific key in a defined format, e.g., jwk (I cannot find the specs but I think DID resolver supports this)",
          "createdAt": "2023-06-13T20:52:25Z",
          "updatedAt": "2023-06-13T20:52:25Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> The proposed model works under assumption that there is a relationship between all the participants since only key is resolved. \r\n\r\nThe concept works very well for open systems: The key distribution with `jwt-issuer` allows the verifier to authenticate the issuer URL. The assumption of the model is that additional data can be provided using suitable mechanisms on top of the (authenticated) issuer URL as identifier. For example, a trusted registry could list the issuers trusted for a certain purpose.\r\n\r\n> The model assumes .well-known endpoint which makes it compatible only with did:web. \r\n\r\n.well-known is a mechanism widely used by a number of standards. Thus `.well-known/jwt-issuer` is compatible with a large number of other well-known locations, including `openid-credential-issuer`, `oauth-authorization-server` and `openid-federation` (even `openid-configuration`). So implementations can share role specific meta and configuration data based on a single service identifier in a modular fashion. Additionally, `openid-federation` can be used to anchor the issuer within a trust graph, which allows to establish trust and share policies in a quite flexible manner (which adds to your first point).\r\n\r\nA credential issuer could, for example, host metadata in all those locations and clients can access whatever is needed for their respective use case. \r\n```\r\n<issuer URL>/.well-known\r\n                  jwt-issuer (verifier perspective, mainly keys)\r\n                  openid-credential-issuer (wallet perspective, available credential types, endpoints)\r\n                  oauth-authorization-server (OAuth endpoints and capabilities)\r\n                  openid-federation (trust anchors, ...)\r\n```\r\n                   \r\ndid:web, in contrast, tries to bundle all kinds of metadata in a single location, i.e. it does not embrace the modular concept of .well-known. ",
          "createdAt": "2023-06-14T09:39:47Z",
          "updatedAt": "2023-06-14T09:40:13Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tlodderstedt This question came up a couple of times already. Can you please provide a PR with some considerations along the lines of what you said above for inclusion in the spec?",
          "createdAt": "2023-06-22T10:02:33Z",
          "updatedAt": "2023-06-22T10:02:33Z"
        }
      ]
    },
    {
      "number": 113,
      "id": "I_kwDOJbVClc5nA1VW",
      "title": "Clarify which VCDM this is intended for",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/113",
      "state": "OPEN",
      "author": "andresuribe87",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "I'm assuming that this is for VCDM 1.1, but there aren't any reference (normative or informative) in the current draft. ",
      "createdAt": "2023-05-26T21:38:34Z",
      "updatedAt": "2023-06-27T20:01:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is not for VCDM.",
          "createdAt": "2023-06-27T20:01:03Z",
          "updatedAt": "2023-06-27T20:01:03Z"
        }
      ]
    },
    {
      "number": 114,
      "id": "I_kwDOJbVClc5nA11T",
      "title": "Create an example with a VCDM",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/114",
      "state": "OPEN",
      "author": "andresuribe87",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I found it hard to understand the relationship between VC's and the spec. Specifically, it's not clear to me how to go from VC (as in `application/vc+ld+json`) to `SD-JWT VC`, nor the other way. ",
      "createdAt": "2023-05-26T21:41:46Z",
      "updatedAt": "2023-05-26T21:41:46Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 115,
      "id": "I_kwDOJbVClc5nA3Ng",
      "title": "What is the relationship between verifiable presentations and combined format for presentation?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/115",
      "state": "OPEN",
      "author": "andresuribe87",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "My  expectation was that the SD-JWT's combined format for presentation would be used inside a verifiable presentation. Something similar to the example below\r\n```json\r\n{\r\n  \"@context\": [\r\n    \"https://www.w3.org/2018/credentials/v1\",\r\n    \"https://www.w3.org/2018/credentials/examples/v1\"\r\n  ],\r\n  \"id\": \"urn:uuid:3978344f-8596-4c3a-a978-8fcaba3903c5\",\r\n  \"type\": [\"VerifiablePresentation\"],\r\n  \"verifiableCredential\": [{\r\n    \"type\": \"SD-JWT Presentation\",\r\n    \"combinedFormat\": \"XXX.XXX.XXX~YYY~ZZZ\"\r\n  }]\r\n}\r\n```\r\n\r\nI'm curious whether this was considered. If so, it would be nice to add a section on that to the spec on the relationship. ",
      "createdAt": "2023-05-26T21:51:00Z",
      "updatedAt": "2023-05-26T21:51:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 116,
      "id": "I_kwDOJbVClc5oF6gH",
      "title": "Need a way to define confidence or assurance levels",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/116",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-??"
      ],
      "body": "If SD-JWT holder binding is focusing on key (device/wallet) binding in terms of cloning/replay protection, we will need some mechanism to define how we want to communicate how the holder was authenticated if certain claims are presented to verifiers. To verifiers it will be also interesting to understand the confidence (ISO 23220-5) / assurance levels (eIDAS) especially if credentials and wallets support multiple levels. This information could be conveyed by another claim, or it could be just some annotations in form of new members of the specific `cnf` method.\r\n\r\nFor example:\r\n\r\n```\r\n\"cnf\": {\r\n  \"jwk\": {\r\n     ... JWK members ...,\r\n     \"trust_framework\": \"some-ecosystem\",\r\n     \"profile\": \"some-configuration-type\"\r\n  }\r\n}\r\n```\r\n\r\nVS something like the following ...\r\n\r\n```\r\n\"cnf\": {\r\n  \"jwk\": {\r\n     ... JWK members ...\r\n  }\r\n},\r\n\"holder_authentication\": {\r\n  \"trust_framework\": \"some-ecosystem\",\r\n  \"profile\": \"some-configuration-type\"\r\n}\r\n\r\n```\r\n\r\nIMO, it makes no sense to provide the authenticator assertion directly to the verifier. ",
      "createdAt": "2023-06-07T17:37:11Z",
      "updatedAt": "2023-06-22T10:09:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Clarifying questions:\r\n\r\n* Do I understand correctly that you want to convey from the issuer through the VC to wallet and verifier what requirements the issuer has regarding holder authentication?\r\n* Why is this need caused by the focus of SD-JWT on key binding?\r\n* To my knowledge the eIDAS assurance levels do not differentiate identification and authentication. Do you think this is a suitable vocabulary?",
          "createdAt": "2023-06-08T16:20:23Z",
          "updatedAt": "2023-06-08T16:20:23Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "NIST clearly differentiates between IAL and AAL. Both should be supported.",
          "createdAt": "2023-06-13T19:40:38Z",
          "updatedAt": "2023-06-13T19:40:38Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> * To my knowledge the eIDAS assurance levels do not differentiate identification and authentication. Do you think this is a suitable vocabulary?\r\n\r\nif key binding is about wallet authentication, then we need something else that tells the verifier that the holder was authenticated when the data was shared. IMO, this could be done in form of claims. We could essentially just define one claim \"holder_authentication\". A verifier might then be able to request specific members of `holder_authentication` in the response such as assurance levels, form factors etc. Perhaps something like `acr` and `amr` is sufficient?\r\n\r\n@tlodderstedt you don't think this is needed?",
          "createdAt": "2023-06-21T15:03:13Z",
          "updatedAt": "2023-06-21T15:03:13Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "@awoie, what you're describing is \"key attestation\" or x509 cert today without the holder information. In terms of eIDAS, it is the signature \"assurance level\" - only 'qualified' is expressed.\r\n\r\nHow to get the qualified tag is defined within the framework. So question boils down to: How to express the key attestation?\r\nIMO it should be a separate credential.\r\n\r\nInformation like authentication/identification/documents presented can be implicit. Vocabulary needs to be defined by the trust framework anyway.\r\n",
          "createdAt": "2023-06-21T15:16:58Z",
          "updatedAt": "2023-06-21T15:16:58Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed on the editor's call on June 22, we won't define any normative requirements but we will add some language to some considerations section.",
          "createdAt": "2023-06-22T10:09:46Z",
          "updatedAt": "2023-06-22T10:09:46Z"
        }
      ]
    },
    {
      "number": 119,
      "id": "I_kwDOJbVClc5oNNOC",
      "title": "Why splitting iss weburl to insert .well-known/jwt-issuer?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/119",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "in https://github.com/vcstuff/draft-terbu-sd-jwt-vc/blob/main/draft-terbu-sd-jwt-vc.md#jwt-issuer-metadata-request\r\n\r\nI propose to change the current approach in favor of the solution below:\r\n````\r\nIf the `iss` value contains a path component, any terminating `/` MUST be\r\nremoved before inserting the `/.well-known/jwt-issuer` at the end of the\r\npath.\r\n\r\nThe following is a non-normative example of a HTTP request for the JWT Issuer\r\nMetadata configuration when `iss` is set to `https://example.com/user/1234`:\r\n\r\n\r\nGET /user/1234/.well-known/jwt-issuer HTTP/1.1\r\nHost: example.com\r\n````\r\nI'm aware that https://datatracker.ietf.org/doc/html/rfc8414 defines the current approach but It seems to me that splitting a url, including other path in it, is worst then simply append the .well-known\r\n\r\nthere are some cases where the webpath matches specific web routing in specific contexts, like `user/1234` might be in a multitenant solution, and givin the .well-known resource in a context coherent path I think it is better.\r\n\r\nps = OIDC Federation 1.0 uses the proposed approach.",
      "createdAt": "2023-06-08T16:31:36Z",
      "updatedAt": "2023-06-09T13:59:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As far as I understand, the splitting is required by RFC 5785, which we must comply with to get this specification through the IETF approval process. @selfissued can tell you more about it. ",
          "createdAt": "2023-06-08T17:04:31Z",
          "updatedAt": "2023-06-08T17:04:31Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "Well, specifically here\r\nhttps://openid.net/specs/openid-connect-federation-1_0.html#section-6\r\n\r\nIn Federation we have them both",
          "createdAt": "2023-06-08T20:07:49Z",
          "updatedAt": "2023-06-08T20:07:49Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That\u2019s an OIDF spec, not an IETF spec. Please talk to Mike about the journey with RFC 8414.",
          "createdAt": "2023-06-08T20:14:54Z",
          "updatedAt": "2023-06-08T20:14:54Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "here I report Mike's comments on OAUTH2-WG\r\n\r\nIn [https://www.ietf.org/archive/id/draft-terbu-sd-jwt-vc-02.html#section-5.1](https://www.ietf.org/archive/id/draft-terbu-sd-jwt-vc-02.html#section-5.1) (JWT Issuer Metadata Request), I question whether \u201cIf the iss value contains a path component, any terminating / MUST be removed before inserting /.well-known/ and the well-known URI suffix between the host component and the path component.\u201d is always the right choice.  Yes, I know that that\u2019s what it takes to conform to RFC 5785 and I wrote similar text at https://www.rfc-editor.org/rfc/rfc8414#section-5 , but practically, the permissions on servers may not be administered in a way that allows tenants to write to this location.",
          "createdAt": "2023-06-09T10:43:20Z",
          "updatedAt": "2023-06-09T10:43:20Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not defending the RFC 5785 rules. I'm just pointing out we will not get this draft over the finishing line without complying to them. ",
          "createdAt": "2023-06-09T13:59:33Z",
          "updatedAt": "2023-06-09T13:59:33Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "I_kwDOJbVClc5oUDwc",
      "title": "Is the following a valid SD-JWT-VC or how can it be mapped to the SD-JWT-VC?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/121",
      "state": "OPEN",
      "author": "alenhorvat",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "<img width=\"591\" alt=\"image\" src=\"https://github.com/vcstuff/draft-terbu-sd-jwt-vc/assets/10848802/48c0ead3-3657-4cf5-8380-6bcb6063ce08\">\r\n\r\nAll the claims need to be present, along with the @context.\r\n\r\nWould this be a valid SD-JWT-VC?",
      "createdAt": "2023-06-09T15:18:28Z",
      "updatedAt": "2023-06-10T12:19:31Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "From first read, mostly, however, the processing result might not what you would expect. \r\n\r\nThe \"type\" violates the definition in SD-JWT VC. \r\n\r\nI miss the JOSE header, which is important as it marks SD-JWT VCs as such (with the `typ` `vc+sd-jwt`).  \r\n\r\nInterpretation of \"@context\", \"id\", \"credentialSubject\", \"credentialStatus\", \"credentialSchema\", \"termsOfUse\" is up to your application. \r\n\r\nThere will be a status management mechanism in SD-JWT VC similar to credentialStatus but using the JWT `status` to represent the status list (https://github.com/vcstuff/draft-looker-jwt-cwt-status-list). \r\n\r\nI guess \"credentialSubject\" is intended to be used for holder binding. SD-JWT VC uses the JWT `cnf` claim for that purpose. \r\n\r\nI think we could come up with a JWTish equivalent to \"termsOfUse\".\r\n\r\n\"type\" is defined single value for SD-JWT VC - I'm not sure which of the type information in your example I would put into the \"type\" claim of a SD-JWT VC. \"VerifiableCredential\" is already covered by the \"typ\" JOSE header \"vc+sd-jwt\". \"VerifiableAttestation\" does not sound that much different. Not sure how to interpret the \"credentialSchema\". \r\n\r\nI see two directions: \r\n\r\n1. You may modify the content to use JWT claims.\r\n2. You can use a different kind of SD-JWT envelop to carry the current JSON-LD (inspired) content (which would use a different `typ` header). ",
          "createdAt": "2023-06-09T15:36:01Z",
          "updatedAt": "2023-06-09T15:36:01Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "- We need the \"type\" to support an array of strings.\r\n- We define our own status and the status list should support an object\r\n- credentialSubject contains domain-specific claims about the subject (name, ...)\r\n- termsOfUse is currently misused; we need to express: rules what the credential can be used for (termsOfUse name is appropriate), and to express the accreditation information/trust information/...\r\n\r\ntyp header is not working for us, since we need an ability to arbitrarily extend the schema. Type as array is the best approach so far\r\n\r\nI need to think about the header type names.",
          "createdAt": "2023-06-09T15:48:55Z",
          "updatedAt": "2023-06-09T15:48:55Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "- credentialSchema references JSON schema that used to validate the VC format and plays a role when it comes to accreditations; in open systems, it is an important information\r\n- type: Verifiable Credential defines the data model as per w3c vc; Verifiable Attestation data model extends the VC data model; other credentials that we're using: V. Authorisation to Onboard, V. Authorisation for Trust Chain, V. Accreditation for accrediting, V. Accreditation for attesting all extend the V. Attestation.\r\n- Domains that define the data models also extend the V. Attestation data model\r\nHence the type and credentialSchema claims play an important role in an open ecosystem as it allows coherent data modelling across different domains.",
          "createdAt": "2023-06-09T19:53:28Z",
          "updatedAt": "2023-06-09T19:53:28Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "The relevant header typ values would be\r\n- vc+json+jwt - VCDM + JWT claims processed as JSON\r\n- vc+json-ld+jwt - VCDM + JWT claims processed as JSON-LD\r\n- vc+json+sd+jwt - same as above, except that it is SD\r\n- vc+json-ld+sd+jwt - same as above, except that is SD\r\n\r\nIf SD-JWT has 0 hidden claims, it boils down to JWT-VC? If yes, then one needs only last 2\r\n\r\nIt is inappropriate to put the type values I'm mentioning above, in the typ header value since it is not a new media type, but an extended data model",
          "createdAt": "2023-06-09T19:59:42Z",
          "updatedAt": "2023-06-09T19:59:42Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Based on experience and feedback from a wide range of stakeholders, a full data model should contain the following claims:\r\nImportant property is that use cases have the ability to extend the different claims when required.\r\n\r\n```jsonc\r\n{\r\n  \"@context\": [\r\n    \"https://www.w3.org/2018/credentials/v1\"\r\n  ], // Type: array of URIs. Use: CONDITIONAL: If credential is JSON-LD, the claim MUST be present, else it MUST NOT be present\r\n\r\n  \"iss\": \"did:ebsi:alice\", // Type: String (URI) or object. Use: REQUIRED\r\n  \"aud\": \"did:ebsi:bob\", // Type: String (URI) or object. Use: OPTIONAL\r\n\r\n  \"id\": \"urn:uuid:003a1dd8-a5d2-42ef-8182-e921c0a9f2cd\", // Unique ID of the credential. Use: OPTIONAL\r\n\r\n  // Credential validity information. \r\n  \"validity\": {\r\n    \"iat\": \"2021-11-01T00:00:00Z\", // Date and time of issuance - required\r\n    \"exp\": \"2024-06-22T14:11:44Z\", // Date at and after which the VC MUST be considered invalid - optional - e.g., credential cannot be used for online authentication (e.g., the bound key/certificate expired), but can be used for offline identification where person is compared against the photo if notAfter > exp.\r\n    \"nbf\": \"2024-06-22T14:11:44Z\", // date at an after which the VC is valid (e.g., signature expires) - optional\r\n    \"notAfter\": \"2024-06-22T14:11:44Z\" // Date and time after which the business content becomes invalid - optional \r\n  },\r\n\r\n  // REQUIRED. String or object\r\n  \"subject\": {\r\n    // If object, type MUST be present and define the business type of the credential. Can be string or array\r\n    \"type\": [\r\n      \"VerifiableCredential\",\r\n      \"VerifiableAttestation\", \"VerifiableID\"\r\n    ],\r\n    \"id\": \"did:ebsi:00001235\" // optional - subject identifier\r\n  },\r\n\r\n  // OPTIONAL. Cryptographic binding information. Can be JWK or other object/string\r\n  \"cnf\": {},\r\n\r\n  // OPTIONAL. Credential status. MUST be object. Type determines the processing rules and the additional claims\r\n  \"status\": { \r\n    \"type\": \"AnyExtension\"\r\n  },\r\n\r\n  // OPTIONAL. JSON schema that validates the credential. Type: object. Type determines the validation rules\r\n  \"schema\": {\r\n    \"id\": \"https://api-test.ebsi.eu/trusted-schemas-registry/v2/schemas/0x23039e6356ea6b703ce672e7cfac0b42765b150f63df78e2bd18ae785787f6a2\",\r\n    \"type\": \"FullJsonSchemaValidator2021\"\r\n  },\r\n\r\n  // OPTIONAL. Defines the rules and limitations when/how the credential can be used/consumed. E.g., medical data can be shared only with certified entities, diploma cannot be used for identification, ...; Type: object or array of objects\r\n  \"termsOfUse\": {\r\n    \"type\": \"AnyExtension\"\r\n  },\r\n\r\n  // OPTIONAL. Contains all the necessary information about the trust chain. Can be Federation Trust Chain, Accreditation chain, etc.; Type: object or array of objects\r\n  \"trustChain\": {\r\n    \"type\": \"AnyExtension\"\r\n  },\r\n\r\n  // OPTIONAL. Contains information about rendering. Type determines the processing rules.\r\n  \"rendering\": {\r\n    \"type\": \"AnyExtension\"\r\n  }\r\n}\r\n```",
          "createdAt": "2023-06-09T20:36:20Z",
          "updatedAt": "2023-06-09T20:36:20Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi @alenhorvat, \r\n\r\nyou have added a lot of information to this issue. I suggest we discuss them step by step. \r\n\r\nI would like to start with `type` vs `typ`. \r\n\r\nThe JOSE `typ` header is used to determine the structure and processing rules of the payload. The `typ` value `vc+sd-jwt` indicates \"this thing is a VC with pure JSON content following the rules defined for JWTs and it can selectively disclosed using SD-JWT + there are some more rules defined in the sd-jwt vc spec\". This `typ` value plays the same role the \"VerifiableCredential\" type values has in the VCDM. So we don't need it in the `type`.\r\n\r\nPart of the rules defined for `vc+sd-jwt` is the presence of the `type` claim. \r\n\r\n> This specification defines the JWT claim type. The type claim is used to express the type of the JSON object that is secured by the JWT. The type value MUST be a case-sensitive StringOrURI value.\r\n\r\nThis is an application type, such as \"MyEMailCredential\", so it basically tells you what end-user (or subject) claims to expect in this type of a credential. The `type` value is especially important for presentation requests, as it used to determine the kind of credential that is being requested and it also determines what claims can be used to filter matching credentials and those claims can also be selectively disclosed. \r\n\r\nTo me, the `type` as defined in sd-jwt vc and `type` as well as `credentialSchema` that you use have a similar purpose. \r\n\r\nI have a couple of questions to that end: \r\n\r\n1. Can you shed some light on why you use both, `type` and `credentialSchema`? The reason why I'm asking is, I assume the schema could be derived from the type value or the type value could even be the schema URL. \r\n2. Can you please share examples of credentials where you use two or more type values in addition to the \"VerifiableCredential\". The reason I'm asking is, in my observation VCs typically have the \"VerifiableCredential\" value plus another application specific type. As \"VerifiableCredential\" is replaced in sd-jwt vc by the `typ`value, we have come to the conclusion (for now), a String literal is enough. I'm a bit hesitant to make that an array because I think there might be unintended consequences as clashes between rules defined for the different VC types. ",
          "createdAt": "2023-06-10T12:19:31Z",
          "updatedAt": "2023-06-10T12:19:31Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOJbVClc5omByT",
      "title": "JWT Issuer Metadata: Why is jwks_uri recommended over jwks?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/125",
      "state": "OPEN",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I would like to understand why the draft recommends use of `jwks_uri` as way to refer to the issuer's key set. I personally would recommend `jwks` as it saves one HTTP request/response. I would only recommend `jwks_uri` for cases where the issuing entity has multiple roles using the same key set and want to keep that in a single place. ",
      "createdAt": "2023-06-13T12:40:58Z",
      "updatedAt": "2023-06-16T08:43:53Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "I would recommend having only the jwks_uri. \r\n\r\nIt allows the issuer to manage (rotate, set cache duration, etc) it's keys independent of any other metadata and in a location other than under .well-known, which can be be a difficult place in some deployments to have dynamic content. \r\n\r\nAlso many JWT/JOSE libraries have existing robust support for resolving keys from a JWKS endpoint and dealing with caching and new kid values etc. But the same functionality isn't present for getting the keys from within a JSON document with other content.\r\n\r\nHaving both jwks_uri and jwk complicates things for every entity that is verifying signatures on these things because they have to account for both. \r\n\r\n  \r\n\r\n",
          "createdAt": "2023-06-15T23:19:57Z",
          "updatedAt": "2023-06-15T23:19:57Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "body": "I agree that jwks Is Better since It doesnt require additional http requests\r\n\r\nThat's why in oidc federation we have enabled jwks also for oidc op\r\n\r\nAnd more, having a static and verifiable attestation of a metadata (signed!) makes the flow possible also in offline use cases, while using jwks_uri won't ",
          "createdAt": "2023-06-16T06:44:15Z",
          "updatedAt": "2023-06-16T06:44:15Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think having both options is valid. I agree that I don't see enough reason to recommend one over the other",
          "createdAt": "2023-06-16T08:43:52Z",
          "updatedAt": "2023-06-16T08:43:52Z"
        }
      ]
    },
    {
      "number": 127,
      "id": "I_kwDOJbVClc5oo00F",
      "title": "Add privacy considerations for JWT issuer metadata - privacy concerns",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/127",
      "state": "OPEN",
      "author": "alenhorvat",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "JWT issuer metadata, as defined in this document, is raising privacy concerns since verifiers will need to contact issuers directly which basically maps to the existing authentication model. Question is, why not just using the existing OIDC/SAML infrastructure instead?",
      "createdAt": "2023-06-13T19:32:02Z",
      "updatedAt": "2023-06-21T15:37:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> JWT issuer metadata, as defined in this document, is raising privacy concerns since verifiers will need to contact issuers directly which basically maps to the existing authentication model.\r\n\r\nI disagree with this assessment. The issuer basically sees the IP address of the inbound HTTPS GET request. The issuer can neither see what user that request is related to nor (depending on the hosting model of the verifier) what verifier. And the verifier can even cache the results, so the issuer won't even get information about any use of credentials. \r\n\r\nThat's fundamentally different from the classical OIDC/SAML model. \r\n\r\n> Question is, why not just using the existing OIDC/SAML infrastructure instead?\r\nWhat do you have in mind?",
          "createdAt": "2023-06-13T20:45:24Z",
          "updatedAt": "2023-06-13T20:45:24Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> JWT issuer metadata, as defined in this document, is raising privacy concerns since verifiers will need to contact issuers directly which basically maps to the existing authentication model. Question is, why not just using the existing OIDC/SAML infrastructure instead?\r\n\r\nI don't think that this is an issue for non-malicious issuers. Normally, there is no correlation between the issuer key and the user (citizen). This is because the issuer probably uses the same key for a large number of users and VCs.\r\n\r\nHowever, if an issuer would create keys per user, then indeed the issuer could track a user but this is something that would be detectable and it probably also have some legal implications for the issuer. In general, we can agree this is something that when becomes public, would harm the reputation of the issuer. Furthermore, hi-assurance VC issuers would probably want to use HSMs for signing which in that case would be impractical for cost-efficiency reasons. HSMs are expensive. I do agree though that there is a risk that malicious issuers could create special keys for special users i.e. targeted attacks, but this would be also detectable.\r\n\r\nI suggest that we should add something to the privacy considerations section. ",
          "createdAt": "2023-06-21T15:35:36Z",
          "updatedAt": "2023-06-21T15:36:40Z"
        }
      ]
    },
    {
      "number": 128,
      "id": "I_kwDOJbVClc5oo3Ec",
      "title": "What is the benefit of defining a VC-like data model with JWT claims?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/128",
      "state": "OPEN",
      "author": "alenhorvat",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "Data model in this document resembles to the ID Token data model as defined in OIDC (with the addition of cnf).\r\n\r\nOn the other hand, the data model is trying to follow the W3C VC data model.\r\nWhat is the benefit of this data model over the W3C VC data model (except that the claim names are different and iss can be a URI, and not an object and that JSON-LD is not supported by the data model, which basically excludes some significant use cases such as Europass that are leveraging JSON-LD for internationalization, for example)?",
      "createdAt": "2023-06-13T19:39:17Z",
      "updatedAt": "2023-06-23T09:28:54Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It is simple, leverages all predefined JWT claims (including eKYC), and can be used by people familiar with the JWT model to also implement VCs - with SD-JWT also with selective disclosure capabilities. So it clearly gives an easy migration path from the federated to the issuer-holder-verifier model. \r\n\r\nWe tested the idea with some projects and communities and it seems a lot of implementers like that. \r\n\r\nRegarding Europass and other JSON-LD-based credential schemes. There could be another spec defining how SD-JWT could be used with JSON-LD. \r\n",
          "createdAt": "2023-06-13T20:32:13Z",
          "updatedAt": "2023-06-13T20:32:13Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "eKCY defines its own data model same as for ID Token. eKYC can be easily mapped to VCs.\r\nThe only real difference is the name of the metadata claims (iss vs issuer, iat vs validFrom, etc.)\r\n\r\nBut SD-JWT can be used with W3C VCs (bot as SD-JWT is and W3C VCs as they are).",
          "createdAt": "2023-06-13T20:42:53Z",
          "updatedAt": "2023-06-13T20:42:53Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "eKYC defines an extension that can be used in any JWTish environment. Doesn't work with W3C VCs due to the split between subject related data (credentialSubject) and metadata (evidence). Ask Mark Haine. \r\n\r\n> But SD-JWT can be used with W3C VCs (bot as SD-JWT is and W3C VCs as they are).\r\nnot sure what you mean. can you please explain.  ",
          "createdAt": "2023-06-13T20:50:54Z",
          "updatedAt": "2023-06-13T20:50:54Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "We did some mapping in the past (it was some time ago, and I don't remember how far we got):\r\n\r\nEvidence in VCs is optional and the model and use of evidence for eKYC doesn't make a lot of sense since eKYC already defines the full data model. eKYC can be nicely modelled within the credential subject. There were discussions around re-using the model of eKYC for expressing different levels of verifications.\r\n\r\nEssentially it was something like:\r\n\r\n\r\n\r\n```json\r\n{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"Verifiable Global ID\",\r\n    \"description\": \"Schema of the Verifiable Global ID for a natural person\",\r\n    \"type\": \"object\",\r\n    \"allOf\": [{\r\n            \"$ref\": \"./verifiable-attestation-v1.json\"\r\n        },\r\n        {\r\n            \"properties\": {\r\n                \"credentialSubject\": {\r\n                    \"$ref\": \"#/definitions/credentialSubjectDef\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"definitions\": {\r\n        \"credentialSubjectDef\": {\r\n            \"allOf\": [{\r\n                    \"properties\": {\r\n                        \"id\": {\r\n                            \"description\": \"Defines the DID of the subject that is described by the Verifiable Attestation. This identifier is usually used for cryptographic binding.\",\r\n                            \"type\": \"string\",\r\n                            \"format\": \"uri\",\r\n                            \"examples\": [\"did:ebsi:z...\", \"did:key:...\"]\r\n                        },\r\n                        \"claims\": {\r\n                            \"type\": \"object\",\r\n                            \"properties\": {\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"$ref\": \"./e-kyc-verified_claims-2022-08.json#/definitions/verified_claims_def2\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nverifiable-attestation-v1.json is the VC data model\r\ne-kyc-verified_claims-2022-08.json#/definitions/verified_claims_def2 - is the JSON schema of the eKYC",
          "createdAt": "2023-06-13T21:07:09Z",
          "updatedAt": "2023-06-13T21:07:09Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just had a chat with Alen about typing and want to share the conclusion. \r\nWe think typing happens on the following levels:\r\n\r\n1. Payload of a (HTTPS) response - here, a processor needs to know how to process the object (blob). So on this level, the media types `application/jose` or `application/jose+json` should be used. \r\n1. JOSE header - on that level, the `typ` determines how the payload of the JWS shall be processed. `vc+sd-jwt` fits on that level. It governs the format (SD-JWT, which implies JSON) and what claims MUST be present (e.g. `iss` and `type`). Those claims are related to security of and trust in the credential. They are not related to the further domain specific structure of the credential. \r\n1. In SD-JWT VC, we use the `type` claim to determine the structure/schema beyond the basic structure determined by the `typ` JOSE header. A university credential, for example, will have different rules for the schema of the payload than a drivers license. \r\n\r\n@danielfett @c2bo @awoie @tplooker @Sakurann @paulbastian @selfissued Please let us know, whether we are on the same page. If so, it might be beneficial to add some text along those lines to the draft. \r\n\r\n  ",
          "createdAt": "2023-06-15T10:30:17Z",
          "updatedAt": "2023-06-15T10:30:53Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "on point 1, I think that is ruled by the underlying protocol - OID4VP/OID4VP define those (`application/x-www-form-urlencoded` and `application/json`) I do not think sd-jwt vc draft should say anything about that.\r\n\r\non points 2 and 3, i think i agree",
          "createdAt": "2023-06-16T06:02:59Z",
          "updatedAt": "2023-06-16T06:02:59Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "to answer the original question raised in the issue,\r\n- the way VCDM 2.0 is going, it requires data model to be JSON-LD and processed according to JSON-LD rules, so things like `@context is in the payload, we put it to be conformant, but are not processing it` will not be conformant.\r\n- the value of VCDM IMO is defining the concept of a credential in a three party model: issued credential must contain the issuer, the subject, claims about the subject, metadata about the issuance of that credential (iat, exp, etc.) and optionally a cryptographic key. that's it. How to map it to the JWT claims is not the expertise of w3c vc wg nor is well-defined in the documents produced by that group.\r\n- VCDM itself is silent about how to sign/process the `data model`\r\n\r\nI would absolutely not equate ID Token data model to a VC data model. VC data model needs one step to get to the ID Token usability which is defining how the concepts defined in VCDM are mapped to the JWT claims and how to sign/process that JWT claimset, which is what this sd-jwt vc draft attempts to do.",
          "createdAt": "2023-06-16T06:11:37Z",
          "updatedAt": "2023-06-16T06:11:37Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@Sakurann \r\n\r\n> OID4VP/OID4VP define those (application/x-www-form-urlencoded and application/json) I do not think sd-jwt vc draft should say anything about that.\r\n\r\nI think we need to at least scope the media type definition in the spec as those definitions are related to the `typ` only, not request payload. ",
          "createdAt": "2023-06-16T06:15:22Z",
          "updatedAt": "2023-06-16T06:15:22Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "why it can't be left to the protocol? why it can't be `application/json`? just for example: https://openid.bitbucket.io/connect/openid-4-verifiable-credential-issuance-1_0.html#section-7.3-9",
          "createdAt": "2023-06-16T06:19:42Z",
          "updatedAt": "2023-06-16T06:19:42Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "@Sakurann \r\n\r\n_- the way VCDM 2.0 is going, it requires data model to be JSON-LD and processed according to JSON-LD rules, so things like @context is in the payload, we put it to be conformant, but are not processing it will not be conformant._\r\n\r\nPlease check the discussion in https://github.com/w3c/vc-data-model/pull/1088 since the conclusion is different.\r\n@Sakurann What do you understand under LD processing?  (LD processing with VCs is used only by: data integrity proofs, selective disclosure that's been just defined, internationalisation, identity matching, some advanced querying)\r\nSince JWS is not using any of that, JWS protection mechanism is not affected by the -LD part.\r\nHowever, it enable use cases, that want to use the -LD (e.g., ELM v3) for internationalisation etc., to use it.\r\n\r\nWhen VCs are secured with JWS, LD processing is not performed. It MAY be performed, if use case requires it, in the post-processing (after the validation) or rendering phase.\r\n\r\n_- the value of VCDM IMO is defining the concept of a credential in a three party model: issued credential must contain the issuer, the subject, claims about the subject, metadata about the issuance of that credential (iat, exp, etc.) and optionally a cryptographic key. that's it. How to map it to the JWT claims is not the expertise of w3c vc wg nor is well-defined in the documents produced by that group._\r\n\r\nThat's perfectly fine. W3C VCDM is focusing on the VCDM data model.\r\nNote that the current VCDM v2.0, without any JWT claim, is a valid JWT.\r\n\r\n_- VCDM itself is silent about how to sign/process the data model_\r\n\r\nI think this is a good approach of the specification, since it defines a data model. Securing mechanism should be defined by specifications like JAdES which defines a profile for JSON-based AdES.\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2023-06-16T06:26:38Z",
          "updatedAt": "2023-06-16T06:26:38Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "> why it can't be left to the protocol? why it can't be `application/json`? just for example: https://openid.bitbucket.io/connect/openid-4-verifiable-credential-issuance-1_0.html#section-7.3-9\r\n\r\nReason is simple and it is following the basic architecture/design principles. Signature (e.g., JWS) defines the serialisation and with it the resulting type.  JWS specification cannot and should not know anything about the protocol that will use it.\r\n\r\nWhen a protocol defines a profile or a set of supported elements, the protocol needs to ensure that the media type that's defined consistent with the elements it selected.",
          "createdAt": "2023-06-16T06:33:29Z",
          "updatedAt": "2023-06-16T06:33:29Z"
        },
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@Sakurann Perhaps I did not explain well. \r\n\r\nThis is the media type definition from the spec. \r\n<img width=\"605\" alt=\"image\" src=\"https://github.com/vcstuff/draft-terbu-sd-jwt-vc/assets/328358/1af7d747-1d74-4327-b0bd-969cff564027\">\r\n\r\nIt does not describe the context where the media type `application/vc+sd-jwt` shall be used. So people might think this is a media type that should be used as content type of an HTTP response. I think we agree this is not the case. All I'm suggesting is to document the intended use in the JOSE header (and as format identifier in credential exchange protocols). \r\n\r\nWould you agree?\r\n",
          "createdAt": "2023-06-16T06:37:40Z",
          "updatedAt": "2023-06-16T06:38:24Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @Sakurann \n> \n> _- the way VCDM 2.0 is going, it requires data model to be JSON-LD and processed according to JSON-LD rules, so things like @context is in the payload, we put it to be conformant, but are not processing it will not be conformant._\n> \n> Please check the discussion in https://github.com/w3c/vc-data-model/pull/1088 since the conclusion is different.\n> @Sakurann What do you understand under LD processing?  (LD processing with VCs is used only by: data integrity proofs, selective disclosure that's been just defined, internationalisation, identity matching, some advanced querying)\n> Since JWS is not using any of that, JWS protection mechanism is not affected by the -LD part.\n> However, it enable use cases, that want to use the -LD (e.g., ELM v3) for internationalisation etc., to use it.\n> \n> When VCs are secured with JWS, LD processing is not performed. It MAY be performed, if use case requires it, in the post-processing (after the validation) or rendering phase.\n> \n> _- the value of VCDM IMO is defining the concept of a credential in a three party model: issued credential must contain the issuer, the subject, claims about the subject, metadata about the issuance of that credential (iat, exp, etc.) and optionally a cryptographic key. that's it. How to map it to the JWT claims is not the expertise of w3c vc wg nor is well-defined in the documents produced by that group._\n> \n> That's perfectly fine. W3C VCDM is focusing on the VCDM data model.\n> Note that the current VCDM v2.0, without any JWT claim, is a valid JWT.\n> \n> _- VCDM itself is silent about how to sign/process the data model_\n> \n> I think this is a good approach of the specification, since it defines a data model. Securing mechanism should be defined by specifications like JAdES which defines a profile for JSON-based AdES.\n> \n> \n> \n> \n> \n\nI agree that securing JSON-LD as payload with SD-JWT is important work that should be considered and investigated.\nI don't agree that it is a good idea to take VCDM claims and use all of those to secure JWTs, because there are existing claims from JWT claims registry and existing implementations depend on those",
          "createdAt": "2023-06-16T17:44:42Z",
          "updatedAt": "2023-06-16T17:44:42Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "@paulbastian thank you for your feedback and I fully understand your concern. We need to put things into a context: most of those cases operate within closed systems where everything is well defined - data models, verification rules, etc. Within this context, I fully agree with you.\r\n\r\nSecuring JSON-LD can be done today by JAdES (pure JWS, no JWT). I believe it is worth to read and reflect on it\r\nhttps://www.etsi.org/deliver/etsi_ts/119100_119199/11918201/01.01.01_60/ts_11918201v010101p.pdf\r\n\r\nFrom my experience, the @context is really processed (in most cases) outside of the verification scope/process. There are signatures that rely on the context, however, that's not relevant for JWS and this discussion. (In a brute-force scenario context can be embedded/inline and problem solved - size is the price to pay - not in the scope of this discussion)\r\n\r\nSince JWT specifies that all claims are optional, libraries should be able to process JWT tokens without any JWT claims (I know how it sounds). From experience, JWS/JWT libraries verify the signature, other verifications are performed manually. People could also argue that VCs are used. This direction won't lead to a solution.\r\n\r\nID Token and eKYC define rules for the JWT claims when they are secured with JWS. I believe there are many other use cases that define profiles, rules, etc.\r\n\r\nIn an open multi-use case system, there are additional challenges and we had a good discussion with Torsten on the topic where we identified several points that should be considered.\r\n\r\nIt is worth reflecting on the designs of\r\n- JWS\r\n- JAdES\r\n- linked data proofs\r\n- VCDM v2\r\non their data model and serialisation.\r\n\r\nBack to my question:\r\nWhat is the real benefit of this data model over the W3C VC data model by looking at the situation objectively?\r\n(I'm also trying to find an answer to the question)\r\n\r\nWith Torsten we had a very fruitful discussion. We need to reflect on several elements.\r\n\r\nHave a nice weekend!",
          "createdAt": "2023-06-16T18:32:03Z",
          "updatedAt": "2023-06-16T18:32:03Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "@paulbastian , I missed one point.\r\n> I agree that securing JSON-LD as payload with SD-JWT is important work that should be considered and investigated. I don't agree that it is a good idea to take VCDM claims and use all of those to secure JWTs, because there are existing claims from JWT claims registry and existing implementations depend on those\r\n\r\nCan you please elaborate on \"take VCDM to secure JWT\"? \r\nIf my understanding is correct (sometimes is, sometimes isn't), it is JWS the one secures the payload (and it can be any JSON). JWT claims define contextual information: who, validity, about who, for whom. We should reflect on sigTst from JAdES.\r\n\r\nI'm personally not proposing to use VCDM to protect a JWT. VCDM and JWT are both protected by JWS.",
          "createdAt": "2023-06-16T18:37:02Z",
          "updatedAt": "2023-06-16T18:37:02Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As an example, iss and cnf are registered claim names for JWTs that are used to secure the VC. Existing RFCs are using those. Therefore it doesn't make sense to overwrite those by the w3c data model in my opinion",
          "createdAt": "2023-06-18T13:33:04Z",
          "updatedAt": "2023-06-18T13:33:04Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Thank you @paulbastian. I understand your view. If VC claims were registered, what would be the benefit of the data model over VCDM? \r\n\r\nSince I\u2019m involved in projects that use VCDM (in JSON and JSON-LD) and also JWT I would really like to understand the objective benefits od the data model. ",
          "createdAt": "2023-06-18T14:18:15Z",
          "updatedAt": "2023-06-18T14:18:15Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "To resolve this issue, we will add a section on relationship to other documents and include a chapter on \"VCDM\".",
          "createdAt": "2023-06-23T09:28:08Z",
          "updatedAt": "2023-06-23T09:28:08Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue is ready for a PR.",
          "createdAt": "2023-06-23T09:28:23Z",
          "updatedAt": "2023-06-23T09:28:23Z"
        }
      ]
    },
    {
      "number": 129,
      "id": "I_kwDOJbVClc5oy0QP",
      "title": "Same typ for JWT and SD-JWT?",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/129",
      "state": "CLOSED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss",
        "pending close"
      ],
      "body": "Should we consider to use the same `typ` header value for both variants, JWT and SD-JWT? I came across this when I was thinking about the OID4VC credential format profile for JWT-based VCs. A single `typ` would also result in a single format identifier in the presentation request, which might everyone's live easier. The only reason to distinguish would be that a dedicated format identifier for sd-jwt would allow the processor to directly decide whether selective disclosure is allowed in the presentation definition.\r\n\r\n_Originally posted by @tlodderstedt in https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/120#discussion_r1229300126_\r\n            ",
      "createdAt": "2023-06-15T06:46:26Z",
      "updatedAt": "2023-06-23T09:29:40Z",
      "closedAt": "2023-06-23T09:29:40Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Would it make sense to have the spec be only about SD-JWT VCs and treat the plain JWT VC as just a special case of an SD-JWT with no selectively disclosable claims? Then there wouldn't be variants and a single typ header value falls out naturally. ",
          "createdAt": "2023-06-15T17:40:51Z",
          "updatedAt": "2023-06-15T17:40:51Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess after we merged PR #131 it seems we have decided to go with a single value for JWT VCs and SD-JWT VCs. Can we close this issue @tlodderstedt ?",
          "createdAt": "2023-06-21T15:22:51Z",
          "updatedAt": "2023-06-21T15:22:51Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "As per editor's call from June 23rd, closing this since it was addressed by #131.",
          "createdAt": "2023-06-23T09:29:40Z",
          "updatedAt": "2023-06-23T09:29:40Z"
        }
      ]
    },
    {
      "number": 130,
      "id": "I_kwDOJbVClc5o1JEl",
      "title": "Align claims for Type and Status with JWT claims",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/130",
      "state": "OPEN",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "I think we should use short JWT-style names for the type and status list claims in order to show that these claims are at the core of the JWT (just like `exp`, `iss`, etc.). I therefore propose that we use `scm` (for \"scheme\", since the short form of \"type\" is already taken) and `stu` (for status list URI).",
      "createdAt": "2023-06-15T12:50:33Z",
      "updatedAt": "2023-06-23T09:37:34Z",
      "closedAt": null,
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think that this document is the right place for these things, as things should and are being described in the corresponding specification: https://github.com/vcstuff/draft-looker-jwt-cwt-status-list \r\nIf there a discussions on the claim names, this should happen over there",
          "createdAt": "2023-06-16T12:35:25Z",
          "updatedAt": "2023-06-16T12:35:25Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Hi.\r\n\r\nDepends on the data model design/extension capabilities. There are 2 options:\r\na) This specification defines a claim (e.g., status/stu/...) as object with mandatory property type. Any other specification can then extend the claim, like the example in the previous comment\r\nb) This specification does not define the status claim, other specifications define the additional claim etc.\r\n\r\nWith a) there's a better control over the data model and the approach is more interoperable, since the claim name is always the same, and the validation rules depend on the \"type\"/sub-type. In our projects, where we support several status methods (since there's no on-fits-all solution), this approach is more appropriate.\r\n\r\nWith b) every \"status\" specification needs to define their own data model (essentially), and there's always a risk that compatibility is broken; e.g., by setting required claims as optional, selecting different claim names, etc.\r\n\r\nsimplest definition would be (in terms of a JSON schema):\r\n\r\n```yaml\r\nstatus:\r\n  description: >-\r\n    discovery of information about the current status of the credential, such as\r\n    whether it is suspended or revoked.\r\n  type: object\r\n  required:\r\n    - type\r\n  properties:\r\n    type:\r\n      description: >-\r\n        Claim that expresses the status type (and with it the vocabulary and the\r\n        validation rules) The type MUST be understood within the context of the\r\n        Trust Framework under which the credential has been issued. Type also\r\n        defines other optional/required claims.\r\n      type: string\r\n\r\n```",
          "createdAt": "2023-06-21T08:33:04Z",
          "updatedAt": "2023-06-21T08:35:03Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "@danielfett @tlodderstedt @paulbastian @awoie  the design decision, whatever it is, should be applied consistently to all elements that can be extended according to this specification.",
          "createdAt": "2023-06-21T08:49:52Z",
          "updatedAt": "2023-06-21T08:49:52Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> stu\r\n\r\nI agree that `status` should be defined in https://github.com/vcstuff/draft-looker-jwt-cwt-status-list. ",
          "createdAt": "2023-06-21T15:16:51Z",
          "updatedAt": "2023-06-21T15:16:51Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd not recommend using `scm` (or scheme) since this could be confused with JSON schemas (which might be a feature we could add in the future).",
          "createdAt": "2023-06-21T15:18:11Z",
          "updatedAt": "2023-06-21T15:18:11Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "> > stu\r\n> \r\n> I agree that `status` should be defined in https://github.com/vcstuff/draft-looker-jwt-cwt-status-list.\r\n\r\nThis means option b) above?",
          "createdAt": "2023-06-21T15:21:12Z",
          "updatedAt": "2023-06-21T15:21:12Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> the short form of \"type\" is already taken\r\n\r\nFWIW it's not actually taken. \"typ\" is a registered JOSE header https://www.iana.org/assignments/jose/jose.xhtml#web-signature-encryption-header-parameters but not a registered JWT claim https://www.iana.org/assignments/jwt/jwt.xhtml#claims \r\n\r\n\"type\" is already pretty short and JWT-style though.  No need to change that one. ",
          "createdAt": "2023-06-21T20:32:22Z",
          "updatedAt": "2023-06-21T20:32:22Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I started the very similar discussion here: https://github.com/vcstuff/draft-looker-oauth-jwt-cwt-status-list/issues/21\n@alenhorvat please take a look at the first draft of jwt status list",
          "createdAt": "2023-06-22T21:43:55Z",
          "updatedAt": "2023-06-22T21:43:55Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "@paulbastian thank you for pointing out the issue and the status list documentation.\r\n\r\nIndeed, the two are related. Here, the overall design decision should be addressed a) or b). Depending on that the JWT status list it will be clear how to bind it to this data model; via type or via claim name. \r\nDoes this make sense?",
          "createdAt": "2023-06-23T06:33:13Z",
          "updatedAt": "2023-06-23T06:33:13Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would be fine with an external definition of the status list claim as its definition and contents may depend on the mechanim used.\r\n\r\nI still think that a three-letter JWT-style claim instead of `type` would be good (but `typ` would be confusing).",
          "createdAt": "2023-06-23T09:35:15Z",
          "updatedAt": "2023-06-23T09:35:15Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that `typ` is confusing for the credential type. What about `dty` which is short for Document Type?",
          "createdAt": "2023-06-23T09:37:34Z",
          "updatedAt": "2023-06-23T09:37:34Z"
        }
      ]
    },
    {
      "number": 134,
      "id": "I_kwDOJbVClc5pU6bw",
      "title": "cnf and key rotation",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/134",
      "state": "OPEN",
      "author": "alenhorvat",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "Hi.\r\n\r\nDIDs, allow key rotation. Use case: legal entities/organisations/companies\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc7800\r\n\r\nsays:\r\n\r\n>  By including a \"cnf\" (confirmation) claim in a JWT, the issuer of the\r\n>    JWT declares that the presenter possesses a particular key and that\r\n>    the recipient can cryptographically confirm that the presenter has\r\n>    possession of that key.  The value of the \"cnf\" claim is a JSON\r\n>    object and the members of that object identify the proof-of-\r\n>    possession key.\r\n\r\nkid can be a DID, which is legal according to the rfc7800 (The content of the \"kid\" value is application specific.)\r\n\r\n> issuer of the JWT declares that the presenter possesses a particular key\r\n\r\nCan the holder (legal entity) present the credential with a different key from the one defined in the cnf? E.g., legal entity is rotating keys every year.",
      "createdAt": "2023-06-21T08:41:28Z",
      "updatedAt": "2023-06-23T10:10:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO, it is probably a decision of the issuer to include a DID URI for the `kid` and therefore allow the Holder to change the authoritative key. So, I guess this might be possible with the current language, although it is not RECOMMENDED since we have this requirement for `cnf` in 4.2.2.2 Registered JWT Claims ...\r\n\r\n> It SHOULD contain a JWK\r\n\r\nDoes this clarify the question? Is there anything you want us to change in the current spec?",
          "createdAt": "2023-06-21T15:14:19Z",
          "updatedAt": "2023-06-21T15:14:19Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Yes, but this essentially blocks key rotation. For Natural Persons that's not an issue, but it becomes an issue for Legal Entities.\r\n\r\nIf \"SHOULD\" -> \"MAY\" would be better since we don't want that capabilities are limited by the data model.",
          "createdAt": "2023-06-21T15:19:31Z",
          "updatedAt": "2023-06-21T15:19:31Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Would you be ok to change \"SHOULD\" to \"RECOMMEND\". We only want that JWK is the default mechanism. We don't want to prevent other mechanisms. We will add a informative sentence that describes that other cnf methods are also allowed. Would you be ok with that?",
          "createdAt": "2023-06-23T09:45:36Z",
          "updatedAt": "2023-06-23T09:45:36Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "Hi @awoie . Yes.\r\n\r\nYou plan to keep the requirement for the endpoint (.well-known) or (.well-known) is default you recommend, but other endpoints are possible?",
          "createdAt": "2023-06-23T10:10:22Z",
          "updatedAt": "2023-06-23T10:10:22Z"
        }
      ]
    },
    {
      "number": 135,
      "id": "I_kwDOJbVClc5pWzD6",
      "title": "Presentation should be a plain JWT if no _sd claims are present",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/135",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "If the SD-JWT VC contains no `_sd` claims and therefore can be represented as a plain JWT, no trailing tilde should be necessary for presentations.",
      "createdAt": "2023-06-21T13:15:42Z",
      "updatedAt": "2023-06-22T08:49:07Z",
      "closedAt": null,
      "comments": [
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Current direction is to base credentials without Selective Disclosures on SD-JWT VC and not JWT, so it is an SD-JWT without _sd and disclosures, and not a JWT.",
          "createdAt": "2023-06-21T15:56:39Z",
          "updatedAt": "2023-06-21T15:56:39Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, that is the current direction but my point is that we should potentially change that. The reason is that it is awkward if developers cannot use standard JWT libs for verification and creation without adding/removing the tilde first. ",
          "createdAt": "2023-06-21T15:59:41Z",
          "updatedAt": "2023-06-21T16:00:22Z"
        },
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My points towards the current approach solving everything with SD-JWT and keeping the tilde:\n- the specification is much cleaner\r\n- I expect implementations to be much cleaner\r\n- I don't see confusion with trailing tilde, because typ is not jwt but sd-jwt\r\n- most interop profiles will require SD support anyway",
          "createdAt": "2023-06-21T19:21:53Z",
          "updatedAt": "2023-06-21T19:21:53Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@paulbastian you don't see a problem with developers not being able to use standard JWT libs for creating and verifying plain JWT VCs?",
          "createdAt": "2023-06-22T08:49:07Z",
          "updatedAt": "2023-06-22T08:49:07Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "I_kwDOJbVClc5pWz9x",
      "title": "Fix presentation examples",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/136",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "The examples in Section 6.2 don't contain any Disclosures which is required for the combined format for presentations.",
      "createdAt": "2023-06-21T13:17:37Z",
      "updatedAt": "2023-06-22T09:40:38Z",
      "closedAt": "2023-06-22T09:40:38Z",
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "The Disclosure for `address` is missing.",
          "createdAt": "2023-06-21T13:17:52Z",
          "updatedAt": "2023-06-21T13:17:52Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "I_kwDOJbVClc5pXjQN",
      "title": "Make section on public claims to include private claims as well",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/137",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "NEEDS PR",
        "individual-03"
      ],
      "body": "Currently, we have a section about public claims. This should be either removed or it should be generalized to something like \"Additional Claims\" where it mentions additional private and public claims MAY be added.",
      "createdAt": "2023-06-21T14:47:10Z",
      "updatedAt": "2023-06-21T14:47:26Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 142,
      "id": "I_kwDOJbVClc5p9DVU",
      "title": "Update status list reference",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/142",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "individual-03"
      ],
      "body": "Since the status list draft was published, the spec can update the references accordingly.",
      "createdAt": "2023-06-27T19:19:50Z",
      "updatedAt": "2023-06-27T19:20:01Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 143,
      "id": "I_kwDOJbVClc5p9bYZ",
      "title": "Clarification on metadata endpoint",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/143",
      "state": "OPEN",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There was an on-going discussion in #101 on the new metadata endpoint, but the discussion should have it's own issue (separated from the naming issue).\r\n\r\nImho, we should add a section that adds more clarity on the intended use of the endpoint introduced in this spec during verification (e.g., by making the resolution of the key using this endpoint mandatory during verification if the JWS header indicates web-based key resolution).\r\nPerhaps adding a small part to the \"Verification and Processing\" section makes sense?\r\n\r\nPrior discussion was here: https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/101#issuecomment-1595828680",
      "createdAt": "2023-06-27T20:35:00Z",
      "updatedAt": "2023-06-27T20:35:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 144,
      "id": "I_kwDOJbVClc5qD_W2",
      "title": "examples for ARF.",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/144",
      "state": "OPEN",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "moving @tlodderstedt's and my work on adding examples how to represent PID/EAA/mDLs as SD-JWT VC to this repo from the sd-jwt repo.\r\nEAA: https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/211\r\nmDL: https://github.com/oauth-wg/oauth-selective-disclosure-jwt/issues/144 and https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/233\r\nPID as a reference point: https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/304- ",
      "createdAt": "2023-06-28T17:54:26Z",
      "updatedAt": "2023-06-28T18:34:34Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 145,
      "id": "I_kwDOJbVClc5qEpxU",
      "title": "how cnf claim can be used with any other types of \"binding\"",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/145",
      "state": "OPEN",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "like biometrics-based binding\r\n\r\nTorsten started with this example in [this PR in sd-jwt repo](https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/210/files) but i do not think it's viable anymore: \r\n\r\n```\r\n    \"binding\":\r\n      [\r\n        {\r\n          \"type\": \"CryptographicBinding2022\",\r\n          \"cnf\":\r\n            {\r\n              \"jwk\":\r\n                {\r\n                  \"kty\": \"RSA\",\r\n                  \"n\": \"0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx4cbbf\r\n                    AAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMst\r\n                    n64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_F\r\n                    DW2QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n9\r\n                    1CbOpbISD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHa\r\n                    Q-G_xBniIqbw0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw\",\r\n                  \"e\": \"AQAB\",\r\n                },\r\n            },\r\n        },\r\n        { \"type\": \"BiometricBinding2022\", \"template\": \"...\" },\r\n      ]\r\n```",
      "createdAt": "2023-06-28T19:25:10Z",
      "updatedAt": "2023-06-28T19:25:10Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJbVClc5PR0JG",
      "title": "Initial version",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/1",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-27T09:45:58Z",
      "updatedAt": "2023-05-05T11:52:08Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "0bd5b91af069299e1e5959451e1d62d015e5e693",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/feat-initi",
      "headRefOid": "d8349bf5232f65351e702e5336b85878c7c0ed0a",
      "closedAt": "2023-05-05T11:52:08Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOJbVClc5P2d39",
      "title": "fix: initial version",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/6",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-05T10:32:46Z",
      "updatedAt": "2023-05-05T12:08:29Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "0bd5b91af069299e1e5959451e1d62d015e5e693",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/initial-version",
      "headRefOid": "005fc7a180b9508eb9541a097faf3c1ca98d06a3",
      "closedAt": "2023-05-05T12:08:29Z",
      "mergedAt": "2023-05-05T12:08:28Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "77093d2be6491063b7d05755e5c3d7531faf858b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOJbVClc5P27GF",
      "title": "fix: fixed readme",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/7",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-05T12:14:37Z",
      "updatedAt": "2023-05-05T12:14:52Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "77093d2be6491063b7d05755e5c3d7531faf858b",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-readme",
      "headRefOid": "c34e4fb09d70d1bc75f209b756d1b66c95425512",
      "closedAt": "2023-05-05T12:14:52Z",
      "mergedAt": "2023-05-05T12:14:52Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "e3603bc1c00de98ef7aa7947f37c691d94377e86"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOJbVClc5P295C",
      "title": "feat: added headers",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/8",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-05T12:24:46Z",
      "updatedAt": "2023-05-05T12:25:18Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "e3603bc1c00de98ef7aa7947f37c691d94377e86",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/header-params",
      "headRefOid": "0ac6254bc6595da1c13a12b7a10bb12091384d58",
      "closedAt": "2023-05-05T12:25:18Z",
      "mergedAt": "2023-05-05T12:25:18Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "2560fd87ff6227ec945123cae055677527d3b386"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 9,
      "id": "PR_kwDOJbVClc5P3DZq",
      "title": "feat: added payload params",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/9",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-05T12:43:23Z",
      "updatedAt": "2023-05-05T12:44:37Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "2560fd87ff6227ec945123cae055677527d3b386",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/feat-payload",
      "headRefOid": "6707a1b246d823992ae2bf6db55a57a9d961233b",
      "closedAt": "2023-05-05T12:44:37Z",
      "mergedAt": "2023-05-05T12:44:37Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "10de5de2b6cdcc95f116f6e320897221893be87c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 12,
      "id": "PR_kwDOJbVClc5P8_Z3",
      "title": "make nbf optional",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/12",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I would personally remove it, but will not die on that hill",
      "createdAt": "2023-05-08T01:43:46Z",
      "updatedAt": "2023-05-22T14:01:14Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "cc8925f95271ee5df4e011d465fd433b3e635d4e",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "sakuran-nbf",
      "headRefOid": "384c3493822bbe5cd7cc7e262fdb0b11b1cb0a22",
      "closedAt": "2023-05-22T14:01:14Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "c2bo",
          "authorAssociation": "NONE",
          "body": "Please correct me if I am wrong, but I would understand VCDM2.0 `validFrom` as a mix of `iat` and `nbf`? \r\nVCDM 2.0 does not have a issued at field and only defines `validFrom`. \r\n\r\nSo my understanding would be:\r\n- if only `iat` is defined, we set the `validFrom` to the value of `iat`\r\n- if both are defined, we set `validFrom` to the value of `nbf` (and lose the iat information in the VCDM2.0 representation)\r\n\r\nSo either remove nbf completely or make it optional and basically overwrite iat (for the VCDM2.0) if it exists?\r\nDoes that make sense?\r\n",
          "createdAt": "2023-05-11T14:47:01Z",
          "updatedAt": "2023-05-11T14:47:01Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> Please correct me if I am wrong, but I would understand VCDM2.0 `validFrom` as a mix of `iat` and `nbf`? VCDM 2.0 does not have a issued at field and only defines `validFrom`.\r\n> \r\n> So my understanding would be:\r\n> \r\n> * if only `iat` is defined, we set the `validFrom` to the value of `iat`\r\n> * if both are defined, we set `validFrom` to the value of `nbf` (and lose the iat information in the VCDM2.0 representation)\r\n> \r\n> So either remove nbf completely or make it optional and basically overwrite iat (for the VCDM2.0) if it exists? Does that make sense?\r\n\r\nFrom the VCDM 2.0 spec:\r\n\r\n> validFrom\r\nA [credential](https://www.w3.org/TR/vc-data-model-2.0/#dfn-credential) MUST have an validFrom [property](https://www.w3.org/TR/vc-data-model-2.0/#dfn-property). The value of the validFrom [property](https://www.w3.org/TR/vc-data-model-2.0/#dfn-property) MUST be a string value of an [[XMLSCHEMA11-2](https://www.w3.org/TR/xmlschema11-2/#dateTime)] combined date-time string representing the date and time the [credential](https://www.w3.org/TR/vc-data-model-2.0/#dfn-credential) becomes valid, which could be a date and time in the future. Note that this value represents the earliest point in time at which the information associated with the credentialSubject [property](https://www.w3.org/TR/vc-data-model-2.0/#dfn-property) becomes valid.\r\n\r\nFrom the JWT nbf spec:\r\n\r\n> The \"nbf\" (not before) claim identifies the time before which the JWT\r\n   MUST NOT be accepted for processing.  The processing of the \"nbf\"\r\n   claim requires that the current date/time MUST be after or equal to\r\n   the not-before date/time listed in the \"nbf\" claim.  Implementers MAY\r\n   provide for some small leeway, usually no more than a few minutes, to\r\n   account for clock skew.  Its value MUST be a number containing a\r\n   NumericDate value.  Use of this claim is OPTIONAL.\r\n\r\nIMO, we should map nbf <-> validFrom and iat <-> issuedAt or we don't map iat at all (which might be fine).\r\n",
          "createdAt": "2023-05-11T14:56:44Z",
          "updatedAt": "2023-05-11T14:56:44Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Please correct me if I am wrong, but I would understand VCDM2.0 `validFrom` as a mix of `iat` and `nbf`? VCDM 2.0 does not have a issued at field and only defines `validFrom`.\r\n> > So my understanding would be:\r\n> > \r\n> > * if only `iat` is defined, we set the `validFrom` to the value of `iat`\r\n> > * if both are defined, we set `validFrom` to the value of `nbf` (and lose the iat information in the VCDM2.0 representation)\r\n> > \r\n> > So either remove nbf completely or make it optional and basically overwrite iat (for the VCDM2.0) if it exists? Does that make sense?\r\n> \r\n> From the VCDM 2.0 spec:\r\n> \r\n> > validFrom\r\n> > A [credential](https://www.w3.org/TR/vc-data-model-2.0/#dfn-credential) MUST have an validFrom [property](https://www.w3.org/TR/vc-data-model-2.0/#dfn-property). The value of the validFrom [property](https://www.w3.org/TR/vc-data-model-2.0/#dfn-property) MUST be a string value of an [[XMLSCHEMA11-2](https://www.w3.org/TR/xmlschema11-2/#dateTime)] combined date-time string representing the date and time the [credential](https://www.w3.org/TR/vc-data-model-2.0/#dfn-credential) becomes valid, which could be a date and time in the future. Note that this value represents the earliest point in time at which the information associated with the credentialSubject [property](https://www.w3.org/TR/vc-data-model-2.0/#dfn-property) becomes valid.\r\n> \r\n> From the JWT nbf spec:\r\n> \r\n> > The \"nbf\" (not before) claim identifies the time before which the JWT\r\n> > MUST NOT be accepted for processing.  The processing of the \"nbf\"\r\n> > claim requires that the current date/time MUST be after or equal to\r\n> > the not-before date/time listed in the \"nbf\" claim.  Implementers MAY\r\n> > provide for some small leeway, usually no more than a few minutes, to\r\n> > account for clock skew.  Its value MUST be a number containing a\r\n> > NumericDate value.  Use of this claim is OPTIONAL.\r\n> \r\n> IMO, we should map nbf <-> validFrom and iat <-> issuedAt or we don't map iat at all (which might be fine).\r\n\r\n@c2bo I agree that `issuedAt` is not defined in VCDM 2.0. One of the reasons is that it is redundant with the date time in the `proof` of the data integrity proof. For that reason we can probably just drop it entirely.",
          "createdAt": "2023-05-11T14:59:09Z",
          "updatedAt": "2023-05-11T14:59:38Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "NONE",
          "body": "Hmm yeah, vc-jwt seems to do exactly that - drop `iat` and use `nbf` for `validFrom`. ",
          "createdAt": "2023-05-11T17:38:39Z",
          "updatedAt": "2023-05-11T17:38:39Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I disagree with the request for changes. We don't have to follow VC-JWT mapping. The cleanest is to map iat to ValidFrom.",
          "createdAt": "2023-05-13T12:55:48Z",
          "updatedAt": "2023-05-13T12:56:13Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> I disagree with the request for changes. We don't have to follow VC-JWT mapping. The cleanest is to map iat to ValidFrom.\r\n\r\nI see where you are coming from. Would you be ok with the following:\r\n- make `nbf` optional\r\n- in the mapping section: \r\n  - if `nbf` was omitted, use `iat` as default for `ValidFrom`\r\n  - if `nbf` is present, use `nbf` for `ValidFrom`\r\n\r\nIMO, that would be the cleanest.",
          "createdAt": "2023-05-15T12:04:36Z",
          "updatedAt": "2023-05-15T12:04:36Z"
        },
        {
          "author": "c2bo",
          "authorAssociation": "NONE",
          "body": "> > I disagree with the request for changes. We don't have to follow VC-JWT mapping. The cleanest is to map iat to ValidFrom.\r\n> \r\n> I see where you are coming from. Would you be ok with the following:\r\n> \r\n> * make `nbf` optional\r\n> * in the mapping section:\r\n>   \r\n>   * if `nbf` was omitted, use `iat` as default for `ValidFrom`\r\n>   * if `nbf` is present, use `nbf` for `ValidFrom`\r\n> \r\n> IMO, that would be the cleanest.\r\n\r\nThis feels more natural to me and is pretty much what I was thinking about \ud83d\udc4d ",
          "createdAt": "2023-05-16T13:18:50Z",
          "updatedAt": "2023-05-16T13:18:50Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Once PR #61 is merged, this should be included.",
          "createdAt": "2023-05-22T13:24:31Z",
          "updatedAt": "2023-05-22T13:24:31Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #61 got merged. closing this PR.",
          "createdAt": "2023-05-22T14:00:39Z",
          "updatedAt": "2023-05-22T14:00:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5UpVdq",
          "commit": {
            "abbreviatedOid": "384c349"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Shouldn't `nbf` map to `validFrom` in VCDM 2.0? If `validFrom` is MUST as per VCDM 2.0, how would we do the mapping?",
          "createdAt": "2023-05-10T08:58:53Z",
          "updatedAt": "2023-05-10T08:58:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOJbVClc5P9AKz",
      "title": "adding text on sub claim",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/14",
      "state": "MERGED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "no binding btw sub and cnf necessary",
      "createdAt": "2023-05-08T01:50:45Z",
      "updatedAt": "2023-05-10T14:06:40Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "cc8925f95271ee5df4e011d465fd433b3e635d4e",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "sakurann-sub-cnf",
      "headRefOid": "2840dd585c29edacb5223271a7b9361b918af677",
      "closedAt": "2023-05-10T14:06:40Z",
      "mergedAt": "2023-05-10T14:06:40Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "1c5b665daace2879cbad08d864fe7e0f687c6775"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5UrqVV",
          "commit": {
            "abbreviatedOid": "2840dd5"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, thank you",
          "createdAt": "2023-05-10T14:05:48Z",
          "updatedAt": "2023-05-10T14:05:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOJbVClc5P9AzY",
      "title": "update the text on cnf claim",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/15",
      "state": "MERGED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "need to discuss how much we want to mandate.",
      "createdAt": "2023-05-08T01:56:10Z",
      "updatedAt": "2023-05-26T14:28:21Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "f3aa611889067732af8fd8a00d01abeb9331d30e",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "sakurann-cnf",
      "headRefOid": "2ca5321bdee9b354c9bec8ca1e25ccc6254b0d5c",
      "closedAt": "2023-05-25T11:46:45Z",
      "mergedAt": "2023-05-25T11:46:45Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "200d4236dcb22e5b43049da7a992f6ec12d80559"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "let's discuss this issue here #66 ",
          "createdAt": "2023-05-22T14:03:11Z",
          "updatedAt": "2023-05-22T14:03:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Urp4c",
          "commit": {
            "abbreviatedOid": "20d39b8"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Shouldn't this limitation go in the hi-assurance profile only?",
          "createdAt": "2023-05-10T14:04:55Z",
          "updatedAt": "2023-05-10T14:04:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5VpR_k",
          "commit": {
            "abbreviatedOid": "20d39b8"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T15:25:58Z",
          "updatedAt": "2023-05-22T15:25:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think it is sufficient to use \"SHOULD\" and explain why (no key rotation required, self contained). There might be reasons/solutions in the future where people want to use other variants of the claim, which we should not preclude. I would make it a MUST in the high assurance profile (for sake of interoperability). ",
              "createdAt": "2023-05-22T15:25:58Z",
              "updatedAt": "2023-05-22T15:25:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VpecZ",
          "commit": {
            "abbreviatedOid": "20d39b8"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T15:50:31Z",
          "updatedAt": "2023-05-22T15:50:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I don't understand why this limitation is necessary in this spec?",
              "createdAt": "2023-05-22T15:50:31Z",
              "updatedAt": "2023-05-22T15:50:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vr79Y",
          "commit": {
            "abbreviatedOid": "20d39b8"
          },
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T21:05:53Z",
          "updatedAt": "2023-05-22T21:05:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'd suggest\r\n\r\n`It SHOULD be used when Cryptographic holder binding is required` and then `It SHOULD contain a JWK as defined ...` since there may be in the future different kind of cnf objects\r\n\r\nregarding `Other representations of the key MUST NOT be used` -> why not? Since together with a JWK there may be a different but equivalent method to represent the same object, in this case the final result must be the same otherwise the attestation should be considered not valid\r\n\r\n\r\n\r\n",
              "createdAt": "2023-05-22T21:05:53Z",
              "updatedAt": "2023-05-22T21:05:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VxCbk",
          "commit": {
            "abbreviatedOid": "20d39b8"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T08:00:46Z",
          "updatedAt": "2023-05-23T08:00:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The \"OPTIONAL... MAY\" does not work, and I think as @tlodderstedt mentioned, a SHOULD is in order. I suggest the following text:\r\n\r\n```suggestion\r\n    * RECOMMENDED when Cryptographic Holder Binding is to be supported. Contains the confirmation method as defined in [@!RFC7800]. It SHOULD contain a JWK as defined in Section 3.2 of [@!RFC7800] and in this case, the `kid` (Key ID) member MUST be present in the JWK.  For Cryptographic Holder Binding, the Holder Binding JWT in the Combined Format for Presentation MUST be signed by the key identified in this claim.\r\n```",
              "createdAt": "2023-05-23T08:00:46Z",
              "updatedAt": "2023-05-23T08:00:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VxFqp",
          "commit": {
            "abbreviatedOid": "20d39b8"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T08:07:50Z",
          "updatedAt": "2023-05-23T08:07:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@Sakurann That would work for me. If you commit @danielfett suggestions, I'd approve this PR.",
              "createdAt": "2023-05-23T08:07:51Z",
              "updatedAt": "2023-05-23T08:07:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOJbVClc5P9DCp",
      "title": "add JSON Web Token Claims Registration to IANA",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/16",
      "state": "MERGED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-08T02:05:17Z",
      "updatedAt": "2023-05-10T13:53:46Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "cc8925f95271ee5df4e011d465fd433b3e635d4e",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "sakurann-type-claim",
      "headRefOid": "6c126dbf7b8b7fb7d136dc803994ae7b9fd0352a",
      "closedAt": "2023-05-10T13:53:45Z",
      "mergedAt": "2023-05-10T13:53:45Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "351db9a9043b4dba43887f109072155af10c7016"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Urje-",
          "commit": {
            "abbreviatedOid": "6c126db"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-05-10T13:53:28Z",
          "updatedAt": "2023-05-10T13:53:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOJbVClc5QBPDR",
      "title": "Changes from my first pass",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/17",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-08T17:07:47Z",
      "updatedAt": "2023-05-10T08:54:39Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "cc8925f95271ee5df4e011d465fd433b3e635d4e",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/first-pass",
      "headRefOid": "90446aefa3138436201d64d2c2c4678e600e5c3c",
      "closedAt": "2023-05-10T08:54:39Z",
      "mergedAt": "2023-05-10T08:54:39Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "7229d6b19b565ae1edc2fc1c81c9c7c28ef6b0f4"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@danielfett do you know how to fix the build errors?",
          "createdAt": "2023-05-08T17:41:02Z",
          "updatedAt": "2023-05-08T17:41:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5UeRzL",
          "commit": {
            "abbreviatedOid": "594648d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "great improvement to the spec. thanks a lot!",
          "createdAt": "2023-05-08T17:39:17Z",
          "updatedAt": "2023-05-08T17:39:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5UpN-7",
          "commit": {
            "abbreviatedOid": "594648d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "i'll just merge those changes and fix them on my machine.",
          "createdAt": "2023-05-10T08:46:43Z",
          "updatedAt": "2023-05-10T08:46:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5UpP5Z",
          "commit": {
            "abbreviatedOid": "594648d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "let's fix references later and create a new issue for that",
          "createdAt": "2023-05-10T08:50:00Z",
          "updatedAt": "2023-05-10T08:51:09Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n(TBD: see oauth-selective-disclosure-jwt) using JSON payloads.\r\n```",
              "createdAt": "2023-05-10T08:50:00Z",
              "updatedAt": "2023-05-10T08:51:09Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\n 1. REQUIRED. Verify the SD-JWT-VC as defined in Section 6.2 of (TBD: see oauth-selective-disclosure-jwt). For the verification, the `iss` claim in the SD-JWT-VC MAY be used to retrieve the public key from the JWT Issuer Metadata configuration (as defined in {#jwt-issuer-metadata}) of the SD-JWT-VC issuer. A verifier MAY use alternative methods to obtain the public key to verify the signature of the SD-JWT.\r\n```",
              "createdAt": "2023-05-10T08:50:47Z",
              "updatedAt": "2023-05-10T08:51:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOJbVClc5QKsKw",
      "title": "fix: removed trailing white spaces",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/18",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-10T08:55:49Z",
      "updatedAt": "2023-05-10T08:56:51Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "7229d6b19b565ae1edc2fc1c81c9c7c28ef6b0f4",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/fix-build-errors",
      "headRefOid": "8fc57342adf1a1ceeb58a90a577dd87e6b2a07b9",
      "closedAt": "2023-05-10T08:56:51Z",
      "mergedAt": "2023-05-10T08:56:51Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "13c4f9a8b8b2478e672c18fc500ce95731ebbcec"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "merging since this is just fixing trailing whitespaces",
          "createdAt": "2023-05-10T08:56:47Z",
          "updatedAt": "2023-05-10T08:56:47Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 20,
      "id": "PR_kwDOJbVClc5QMMeA",
      "title": "feat: added more intro",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/20",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Finished introduction section",
      "createdAt": "2023-05-10T12:56:55Z",
      "updatedAt": "2023-05-10T14:18:59Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "13c4f9a8b8b2478e672c18fc500ce95731ebbcec",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/finish-intro",
      "headRefOid": "505266ccf6879425fe9bffb37b58e066a967d62b",
      "closedAt": "2023-05-10T14:18:59Z",
      "mergedAt": "2023-05-10T14:18:59Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "c95245a2d09249352442a28267291f5d7ce92302"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOJbVClc5QMf-X",
      "title": "feat: added terms and definitions section; updated data format; fixes #10",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/21",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Added terms and definitions section; made some changes data formats based on terms and definitions section\r\n- fixes #10",
      "createdAt": "2023-05-10T13:39:31Z",
      "updatedAt": "2023-05-26T14:29:01Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "13c4f9a8b8b2478e672c18fc500ce95731ebbcec",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/add-terminology",
      "headRefOid": "c9f98ad0a8b7ee9bc814c0f1e51c51160fd173e5",
      "closedAt": "2023-05-10T14:29:50Z",
      "mergedAt": "2023-05-10T14:29:50Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "d31441235ff637f0607d07d5768c109337643a48"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 22,
      "id": "PR_kwDOJbVClc5QMohM",
      "title": "feat: added media type registration info",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/22",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "feat: added media type registration info",
      "createdAt": "2023-05-10T13:59:43Z",
      "updatedAt": "2023-05-10T14:15:06Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "351db9a9043b4dba43887f109072155af10c7016",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/add-iana-reg",
      "headRefOid": "723aeea2d46e5a5a018f332834fdae42c94ba12d",
      "closedAt": "2023-05-10T14:15:05Z",
      "mergedAt": "2023-05-10T14:15:05Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "cd54cad2d8ca71d74a3eecb9be03db1f28cc4d63"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 26,
      "id": "PR_kwDOJbVClc5QNDiq",
      "title": "fix: some editorial fixes",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/26",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-10T14:53:43Z",
      "updatedAt": "2023-05-26T14:29:00Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "d31441235ff637f0607d07d5768c109337643a48",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/various-edits",
      "headRefOid": "9696a912ea4cf75e743a4e4aa73aa1ac45b894bb",
      "closedAt": "2023-05-10T14:55:04Z",
      "mergedAt": "2023-05-10T14:55:04Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "5a074d3bb774dfeaa74f433ef4aa2c0943330009"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "PR_kwDOJbVClc5QNh5a",
      "title": "Feat/add examples",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/28",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-10T16:18:38Z",
      "updatedAt": "2023-05-26T14:28:58Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "5a074d3bb774dfeaa74f433ef4aa2c0943330009",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/add-examples",
      "headRefOid": "14e25b0df6b7aa7d6d39f3cc47a0ab758063cf71",
      "closedAt": "2023-05-10T16:20:15Z",
      "mergedAt": "2023-05-10T16:20:15Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "4d83ee0402ce47f439d82e59b0128402b55e66e1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 32,
      "id": "PR_kwDOJbVClc5QNrM_",
      "title": "Add mapping algo for VCs",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/32",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-10T16:53:01Z",
      "updatedAt": "2023-05-26T14:28:55Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "4d83ee0402ce47f439d82e59b0128402b55e66e1",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "feat/mapping",
      "headRefOid": "8b66ad3e90433111c621a029d09f84e8baca8d49",
      "closedAt": "2023-05-10T17:29:24Z",
      "mergedAt": "2023-05-10T17:29:24Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "23ebea27286bc7bc3878ebe1d7993399730aea2c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 38,
      "id": "PR_kwDOJbVClc5QTe1j",
      "title": "fix: made types a single value, fixes #35 ",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/38",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #35 ",
      "createdAt": "2023-05-11T15:20:33Z",
      "updatedAt": "2023-05-26T14:28:45Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "23ebea27286bc7bc3878ebe1d7993399730aea2c",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-35",
      "headRefOid": "9b5b29a46e9a48df2211ae426193bc9edbbea481",
      "closedAt": "2023-05-11T15:21:15Z",
      "mergedAt": "2023-05-11T15:21:15Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "ca3dac286df942065e93ba95c1f949cd71ead767"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 39,
      "id": "PR_kwDOJbVClc5QX7dE",
      "title": "Some editorial changes",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/39",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-12T10:18:39Z",
      "updatedAt": "2023-05-26T14:28:44Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "ca3dac286df942065e93ba95c1f949cd71ead767",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/editorial-2",
      "headRefOid": "df29922e312dc14e32ed35bb5210b008dfb9751d",
      "closedAt": "2023-05-12T10:20:44Z",
      "mergedAt": "2023-05-12T10:20:44Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "dd87576d16445a8dc4438eac191b217f6799459b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 52,
      "id": "PR_kwDOJbVClc5QmXhI",
      "title": "propose some editorial changes",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/52",
      "state": "MERGED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-16T10:20:47Z",
      "updatedAt": "2023-05-26T14:28:50Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "dd87576d16445a8dc4438eac191b217f6799459b",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "tlodderstedt-editorial",
      "headRefOid": "e8e084d3b20f6e53fbf8fa2e765b4e5ba6da151e",
      "closedAt": "2023-05-17T19:27:15Z",
      "mergedAt": "2023-05-17T19:27:15Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "cb5d9c72eb081b37e3fc060fd90276e06c3e2709"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5VUUPS",
          "commit": {
            "abbreviatedOid": "e8e084d"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-17T19:16:52Z",
          "updatedAt": "2023-05-17T19:16:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5VUZf1",
          "commit": {
            "abbreviatedOid": "e8e084d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-05-17T19:27:09Z",
          "updatedAt": "2023-05-17T19:27:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOJbVClc5Qmsr-",
      "title": "Added ack sections, removed notices section, added initial doc history",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/53",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #49, fixes #50, fixes #51",
      "createdAt": "2023-05-16T11:20:24Z",
      "updatedAt": "2023-05-26T14:28:43Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "dd87576d16445a8dc4438eac191b217f6799459b",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-51",
      "headRefOid": "19f1eb75b8ec318a3315bd5d29062147cd8844f6",
      "closedAt": "2023-05-16T11:21:29Z",
      "mergedAt": "2023-05-16T11:21:29Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "e65d4bbaae7652a6c48e74d439f36244253b83cc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 54,
      "id": "PR_kwDOJbVClc5QmuTq",
      "title": "Merged scope with overview section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/54",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #30",
      "createdAt": "2023-05-16T11:24:36Z",
      "updatedAt": "2023-05-26T14:28:42Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "e65d4bbaae7652a6c48e74d439f36244253b83cc",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-30",
      "headRefOid": "8f46da816cd619c86aee6591120c4a62fee2aec5",
      "closedAt": "2023-05-16T11:25:18Z",
      "mergedAt": "2023-05-16T11:25:18Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "61dae60c321f19739d750b0ec6abbc27c9977022"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 55,
      "id": "PR_kwDOJbVClc5QtrcA",
      "title": "Flow Diagram",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/55",
      "state": "MERGED",
      "author": "andresuribe87",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #31 \r\n\r\nThe flow diagram has the additional step of the holder retrieving the status VC.\r\n\r\nI am not convinced this should be part of the spec because the credentialStatus is an extension point, and different types could work in different ways. ",
      "createdAt": "2023-05-17T13:09:48Z",
      "updatedAt": "2023-05-24T20:11:19Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "b954505f848dc2cd749c5e6655799ca30048f47d",
      "headRepository": "andresuribe87/draft-terbu-sd-jwt-vc",
      "headRefName": "patch-1",
      "headRefOid": "4cd74d2d4148603c33ab5531bcd0548e1924a6bb",
      "closedAt": "2023-05-24T20:11:19Z",
      "mergedAt": "2023-05-24T20:11:19Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "11eef80c75ac5535f17ce6384f7376a1b30046b0"
      },
      "comments": [
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "AFAIK, only the trailing whitespace prevents compiling - I don't think the long lines do, too.",
          "createdAt": "2023-05-23T10:45:26Z",
          "updatedAt": "2023-05-23T10:45:26Z"
        },
        {
          "author": "andresuribe87",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@awoie is it expected for the github actions check to fail? Not sure how to debug that one.\r\n",
          "createdAt": "2023-05-23T19:29:37Z",
          "updatedAt": "2023-05-23T19:29:37Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> @awoie is it expected for the github actions check to fail? Not sure how to debug that one.\r\n\r\nI think this issue is due to another PR I just merged. @danielfett might be able to fix it. I have to roll back the previous PR.",
          "createdAt": "2023-05-23T19:32:01Z",
          "updatedAt": "2023-05-23T19:32:01Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@andresuribe87 can you rebase main?",
          "createdAt": "2023-05-24T13:24:25Z",
          "updatedAt": "2023-05-24T13:24:25Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> @andresuribe87 can you rebase main?\r\n\r\nI mean sync from vcstuff:main and then rebase because you will need #76 ",
          "createdAt": "2023-05-24T13:25:46Z",
          "updatedAt": "2023-05-24T13:25:46Z"
        },
        {
          "author": "andresuribe87",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@awoie cool, waiting for workflow approval now. ",
          "createdAt": "2023-05-24T20:03:18Z",
          "updatedAt": "2023-05-24T20:03:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5VS7lM",
          "commit": {
            "abbreviatedOid": "0149833"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thank you. LGTM, just needs to change the terms of the labels.",
          "createdAt": "2023-05-17T15:40:30Z",
          "updatedAt": "2023-05-17T15:40:52Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Thanks for the PR. can you change the terms used for the labels of the lines? Let's avoid SD-JWT and use Verifiable Credentials and Verifiable Presentations instead.",
              "createdAt": "2023-05-17T15:40:30Z",
              "updatedAt": "2023-05-17T15:40:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VUTvq",
          "commit": {
            "abbreviatedOid": "0149833"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-17T19:15:16Z",
          "updatedAt": "2023-05-17T19:15:16Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "We did not introduce the status provider yet. If we want to have it here (can make sense), let's introduce it somewhere first.",
              "createdAt": "2023-05-17T19:15:16Z",
              "updatedAt": "2023-05-17T19:15:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VbOlf",
          "commit": {
            "abbreviatedOid": "cad5733"
          },
          "author": "andresuribe87",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-18T18:09:42Z",
          "updatedAt": "2023-05-18T18:09:46Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Added it to the terminology section. ",
              "createdAt": "2023-05-18T18:09:43Z",
              "updatedAt": "2023-05-18T18:09:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VbO8o",
          "commit": {
            "abbreviatedOid": "0149833"
          },
          "author": "andresuribe87",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-18T18:10:20Z",
          "updatedAt": "2023-05-18T18:10:21Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Done in [cad5733](https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/55/commits/cad5733884ac2c61748350a314965f95e8a5d749)",
              "createdAt": "2023-05-18T18:10:20Z",
              "updatedAt": "2023-05-18T18:10:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VxHWy",
          "commit": {
            "abbreviatedOid": "cad5733"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "lgtm after you committed my suggestion",
          "createdAt": "2023-05-23T08:11:37Z",
          "updatedAt": "2023-05-23T08:12:09Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n: An entity that provides status information (e.g. revocation) about a Verifiable Credential.\r\n```",
              "createdAt": "2023-05-23T08:11:37Z",
              "updatedAt": "2023-05-23T08:12:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vx5Sz",
          "commit": {
            "abbreviatedOid": "037c72e"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you very much! LGTM.",
          "createdAt": "2023-05-23T09:29:55Z",
          "updatedAt": "2023-05-23T09:29:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Vx6th",
          "commit": {
            "abbreviatedOid": "037c72e"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Can you pls fix the following issues:\r\n\r\n```\r\n/github/workspace/draft-terbu-sd-jwt-vc.xml(165): Warning: Too long line found (L221), 3 characters longer than 72 characters: \r\n              +------------+                                 +------------+\r\n/github/workspace/draft-terbu-sd-jwt-vc.xml(165): Warning: Too long line found (L222), 3 characters longer than 72 characters: \r\n              |            |                                 |   Status   |\r\n/github/workspace/draft-terbu-sd-jwt-vc.xml(165): Warning: Too long line found (L223), 3 characters longer than 72 characters: \r\n              |   Holder   |-------- optionally ------------>|  Provider  |\r\n/github/workspace/draft-terbu-sd-jwt-vc.xml(165): Warning: Too long line found (L2[24](https://github.com/vcstuff/draft-terbu-sd-jwt-vc/actions/runs/5055609076/jobs/9072030782?pr=55#step:9:25)), 3 characters longer than 72 characters: \r\n              |            |       retrieves status          |            |\r\n/github/workspace/draft-terbu-sd-jwt-vc.xml(165): Warning: Too long line found (L2[25](https://github.com/vcstuff/draft-terbu-sd-jwt-vc/actions/runs/5055609076/jobs/9072030782?pr=55#step:9:26)), 3 characters longer than 72 characters: \r\n              +------------+             VC                  +------------+\r\n/github/workspace/draft-terbu-sd-jwt-vc.xml(748): Warning: Too long line found (L854), 3 characters longer than 72 characters: \r\n  vc.credentialSubject = insert_claims_into_credential_subject(vc, payload)\r\nlib/trace.sh draft-terbu-sd-jwt-vc.html -s xml2rfc-html xml2rfc -q -s 'Setting consensus=\"true\" for IETF STD document' --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/github/workspace/.refcache --css=lib/v3.css --metadata-js-url=/dev/null draft-terbu-sd-jwt-vc.xml -o draft-terbu-sd-jwt-vc.html --html\r\n181:           +------------+                                 +------------+ \r\n185:           +------------+             VC                  +------------+ \r\n*** Run 'make fix-lint' to automatically fix some errors\r\ndraft-terbu-sd-jwt-vc.md contains trailing whitespace\r\nmake[1]: *** [lib/main.mk:201: lint-whitespace] Error 1\r\nmake[1]: Target 'lint' not remade because of errors.\r\nrm draft-terbu-sd-jwt-vc.xml\r\nmake: *** [lib/main.mk:16: all] Error 2\r\n```",
          "createdAt": "2023-05-23T09:32:04Z",
          "updatedAt": "2023-05-23T09:32:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5V2wdI",
          "commit": {
            "abbreviatedOid": "4cd74d2"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm now. thank you!",
          "createdAt": "2023-05-23T19:22:17Z",
          "updatedAt": "2023-05-24T20:02:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOJbVClc5Q30V1",
      "title": "Fix some references to address Issue #19",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/56",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I left some references open that will be addressed by other pull requests changing the surrounding text in order to avoid merge conflicts.",
      "createdAt": "2023-05-19T08:39:13Z",
      "updatedAt": "2023-05-26T14:28:49Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "cb5d9c72eb081b37e3fc060fd90276e06c3e2709",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/fix-19",
      "headRefOid": "deb7991d9f3a314401740ee91c3a92043a7afdf5",
      "closedAt": "2023-05-19T09:31:28Z",
      "mergedAt": "2023-05-19T09:31:28Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "87d93fbc92c96049b6e1036537bc3330f495fd4f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Vepby",
          "commit": {
            "abbreviatedOid": "deb7991"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-05-19T09:31:19Z",
          "updatedAt": "2023-05-19T09:31:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOJbVClc5Q4kig",
      "title": "Attempt to clean up the terminology, fix Issue #45",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/59",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also fixes some typos and small editorial stuff that I noticed while working on this.",
      "createdAt": "2023-05-19T11:21:26Z",
      "updatedAt": "2023-05-26T14:28:48Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "184bf2121b2cf75671653a2cbc4d2c5cd2b66c4c",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/fix-45",
      "headRefOid": "92ffccd2cc4eb4767ff75e6c1c035a3b41ed189e",
      "closedAt": "2023-05-23T07:44:47Z",
      "mergedAt": "2023-05-23T07:44:47Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "4fe832b11adbc7e202f8bd49ad42345529d9758e"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@danielfett can you fix trailing whitespaces?",
          "createdAt": "2023-05-19T11:30:57Z",
          "updatedAt": "2023-05-19T11:30:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5VfR8m",
          "commit": {
            "abbreviatedOid": "6e68185"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, had a similar pending pr but let's merge yours in.",
          "createdAt": "2023-05-19T11:30:21Z",
          "updatedAt": "2023-05-19T11:30:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Vw8hd",
          "commit": {
            "abbreviatedOid": "92ffccd"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T07:51:04Z",
          "updatedAt": "2023-05-23T07:51:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOJbVClc5RAU3-",
      "title": "Added VP section and other things",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/61",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #58, fixes #46, fixes #44, fixes #27,  fixes #19",
      "createdAt": "2023-05-22T11:07:59Z",
      "updatedAt": "2023-05-26T14:28:33Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "87d93fbc92c96049b6e1036537bc3330f495fd4f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/vp-algorithm",
      "headRefOid": "cafeaea1171ba820b068a6fd6303266fa3e1f6d8",
      "closedAt": "2023-05-22T13:57:51Z",
      "mergedAt": "2023-05-22T13:57:51Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "3b9bc544ff8adffb5dcb4c0c2137bd3c77b972ee"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe I addressed all the things except the ones where I created issues for @tlodderstedt . Please review again @tlodderstedt .",
          "createdAt": "2023-05-22T13:00:48Z",
          "updatedAt": "2023-05-22T13:00:48Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@tlodderstedt approved, merging this.",
          "createdAt": "2023-05-22T13:57:45Z",
          "updatedAt": "2023-05-22T13:57:45Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Vnf8L",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-05-22T11:26:59Z",
          "updatedAt": "2023-05-22T11:49:19Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Why does a VP need to be an envelope?",
              "createdAt": "2023-05-22T11:26:59Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\ndescribed in [@!I-D.ietf-oauth-selective-disclosure-jwt].\r\n```",
              "createdAt": "2023-05-22T11:28:35Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nsome End-User (Holder), who then can presents this credential to multiple Verifiers.\r\n```",
              "createdAt": "2023-05-22T11:29:11Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 56,
              "body": "Do we really need to explain that in lengths?",
              "createdAt": "2023-05-22T11:33:30Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nexcept for Decoy Digests as per section 5.1.1.3. of [@!I-D.ietf-oauth-selective-disclosure-jwt].\r\n```",
              "createdAt": "2023-05-22T11:38:49Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 97,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-05-22T11:39:03Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 96,
              "body": "does not produce a link",
              "createdAt": "2023-05-22T11:39:33Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 201,
              "body": "type is now used before it is actually defined",
              "createdAt": "2023-05-22T11:40:39Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 134,
              "body": "Not sure I understand the rationale of this proposed change. It seems to mix the claims that \"can\" be used and the claims, where this draft defines requirements (a lot of then \"MUST\").  For the time being, I like the previous approach better.",
              "createdAt": "2023-05-22T11:43:06Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 240,
              "body": "```suggestion\r\nsection 6 of [@!I-D.ietf-oauth-selective-disclosure-jwt]. For the\r\n```",
              "createdAt": "2023-05-22T11:43:54Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 259,
              "body": "the \"presentation of VC-SD-JWTs\"? VP sounds to formal in my opinion. ",
              "createdAt": "2023-05-22T11:47:39Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            },
            {
              "originalPosition": 266,
              "body": "that is technically not feasible ",
              "createdAt": "2023-05-22T11:48:04Z",
              "updatedAt": "2023-05-22T11:49:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VnzZe",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:13:13Z",
          "updatedAt": "2023-05-22T12:13:13Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "It does not have to be an envelope. I just didn't have a better term. I can rephrase. ",
              "createdAt": "2023-05-22T12:13:13Z",
              "updatedAt": "2023-05-22T12:13:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vnz1A",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:14:20Z",
          "updatedAt": "2023-05-22T12:14:21Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "I didn't add this language in this PR. I think @danielfett wanted to fix that in a separate PR.",
              "createdAt": "2023-05-22T12:14:20Z",
              "updatedAt": "2023-05-22T12:14:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn0MJ",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:15:14Z",
          "updatedAt": "2023-05-22T12:15:15Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "You mean [@!I-D.ietf-oauth-selective-disclosure-jwt, section 5.3.] doesn't produce a link?",
              "createdAt": "2023-05-22T12:15:15Z",
              "updatedAt": "2023-05-22T12:15:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn0l1",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:16:13Z",
          "updatedAt": "2023-05-22T12:16:13Z",
          "comments": [
            {
              "originalPosition": 266,
              "body": "This is feasible. It doesn't say that `typ` has to be set.",
              "createdAt": "2023-05-22T12:16:13Z",
              "updatedAt": "2023-05-22T12:16:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn0uH",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:16:31Z",
          "updatedAt": "2023-05-22T12:16:32Z",
          "comments": [
            {
              "originalPosition": 266,
              "body": "A VP-SD-JWT is a Combined Format object, not the SD-JWT contained in it.",
              "createdAt": "2023-05-22T12:16:31Z",
              "updatedAt": "2023-05-22T12:16:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn8TS",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:34:06Z",
          "updatedAt": "2023-05-22T12:34:07Z",
          "comments": [
            {
              "originalPosition": 259,
              "body": "Can we fix that later since we would need to change that in several places? Please create ticket to rename VP-SD-JWT to something more appropriate.",
              "createdAt": "2023-05-22T12:34:06Z",
              "updatedAt": "2023-05-22T12:34:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn84r",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:35:27Z",
          "updatedAt": "2023-05-22T12:35:28Z",
          "comments": [
            {
              "originalPosition": 201,
              "body": "fixed",
              "createdAt": "2023-05-22T12:35:27Z",
              "updatedAt": "2023-05-22T12:35:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn9bc",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:36:44Z",
          "updatedAt": "2023-05-22T12:36:44Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Removed envelope",
              "createdAt": "2023-05-22T12:36:44Z",
              "updatedAt": "2023-05-22T12:36:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn-oJ",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:39:27Z",
          "updatedAt": "2023-05-22T12:39:28Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "I created a separate issue here: https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/63",
              "createdAt": "2023-05-22T12:39:27Z",
              "updatedAt": "2023-05-22T12:39:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vn_Y3",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:41:12Z",
          "updatedAt": "2023-05-22T12:41:13Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "It was not clear in the previous version where to find those claims. Technically speaking, they are not always in the SD-JWT but sometimes in the Disclosure object. That is why this PR tried to adjust that language.",
              "createdAt": "2023-05-22T12:41:12Z",
              "updatedAt": "2023-05-22T12:41:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VoBzR",
          "commit": {
            "abbreviatedOid": "52524cc"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:46:50Z",
          "updatedAt": "2023-05-22T12:46:51Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "That shows the terminology is still unclear/not precise enough. If the SD-JWT is just the thing used to keep the signed hashes, we need another term for the whole thing (combined format for issuance/presentation is a \"tongue breaker\" and sounds much to technical).\r\nWe could also try to speak about the claims in the object after or before constructing the SD-JWT. Only in this stage it makes sense to talk about what can be selectively disclosed and what not. ",
              "createdAt": "2023-05-22T12:46:50Z",
              "updatedAt": "2023-05-22T12:46:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VoDvR",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:51:13Z",
          "updatedAt": "2023-05-22T12:51:13Z",
          "comments": [
            {
              "originalPosition": 259,
              "body": "Created a ticket here https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/64",
              "createdAt": "2023-05-22T12:51:13Z",
              "updatedAt": "2023-05-22T12:51:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VoEEt",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T12:51:59Z",
          "updatedAt": "2023-05-22T12:51:59Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "we have a term for whole thing already -> VC-SD-JWT -> pls see terminology section. Same as VP-SD-JWT. Does this solve your issue?",
              "createdAt": "2023-05-22T12:51:59Z",
              "updatedAt": "2023-05-22T12:51:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VoJTr",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T13:02:43Z",
          "updatedAt": "2023-05-22T13:02:43Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I adjusted the language. Please check if this makes more sense now.",
              "createdAt": "2023-05-22T13:02:43Z",
              "updatedAt": "2023-05-22T13:02:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VoRMr",
          "commit": {
            "abbreviatedOid": "e1b9b2d"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T13:18:57Z",
          "updatedAt": "2023-05-22T13:18:58Z",
          "comments": [
            {
              "originalPosition": 266,
              "body": "I removed the media type for VPs. Let's rename VP-SD-JWT in a separate PR since it would impact more sections.",
              "createdAt": "2023-05-22T13:18:57Z",
              "updatedAt": "2023-05-22T13:18:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VoCEq",
          "commit": {
            "abbreviatedOid": "cafeaea"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-22T12:47:26Z",
          "updatedAt": "2023-05-22T13:55:24Z",
          "comments": [
            {
              "originalPosition": 266,
              "body": "but it does not have a media type associated with it",
              "createdAt": "2023-05-22T12:47:26Z",
              "updatedAt": "2023-05-22T13:55:25Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\n`application/vc+sd-jwt` as defined in (#application-vc-sd-jwt).\r\n```",
              "createdAt": "2023-05-22T13:18:03Z",
              "updatedAt": "2023-05-22T13:55:24Z"
            },
            {
              "originalPosition": 226,
              "body": "```suggestion\r\n(#jwt-issuer-metadata)) of the VC-SD-JWT issuer. A Verifier MAY use alternative\r\n```",
              "createdAt": "2023-05-22T13:25:27Z",
              "updatedAt": "2023-05-22T13:55:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 67,
      "id": "PR_kwDOJbVClc5RBfQR",
      "title": "Update workflow to generate examples",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/67",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-22T14:16:08Z",
      "updatedAt": "2023-05-26T14:28:32Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "3b9bc544ff8adffb5dcb4c0c2137bd3c77b972ee",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/generated-examples",
      "headRefOid": "ea015edff28d6015e535d5b7a4895b5ce37ee869",
      "closedAt": "2023-05-22T15:50:52Z",
      "mergedAt": "2023-05-22T15:50:52Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "184bf2121b2cf75671653a2cbc4d2c5cd2b66c4c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5VpbcO",
          "commit": {
            "abbreviatedOid": "296db61"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks, that is a great improvement. just a few minor editorial suggestions.",
          "createdAt": "2023-05-22T15:43:33Z",
          "updatedAt": "2023-05-22T15:45:37Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\nThe following example shows a presentation of a (different) SD-JWT without a Holder Binding JWT:\r\n```",
              "createdAt": "2023-05-22T15:43:33Z",
              "updatedAt": "2023-05-22T15:45:37Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nThe following is a non-normative example of a presentation of the SD-JWT shown above including a Holder Binding JWT:\r\n```",
              "createdAt": "2023-05-22T15:44:28Z",
              "updatedAt": "2023-05-22T15:45:37Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOJbVClc5RB9tA",
      "title": "Fixed VCDM transformation algo, fixes #4",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/68",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixed VCDM transformation algo, fixes #4",
      "createdAt": "2023-05-22T15:34:02Z",
      "updatedAt": "2023-05-26T14:28:31Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "3b9bc544ff8adffb5dcb4c0c2137bd3c77b972ee",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-vc-mapping-algo",
      "headRefOid": "d4e9f16a5ec4b9443f85677f785baa0f249fd752",
      "closedAt": "2023-05-23T09:12:24Z",
      "mergedAt": "2023-05-23T09:12:24Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "60354b1943cd0596d008f0b383da19a443de592f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Vqem4",
          "commit": {
            "abbreviatedOid": "c873a4a"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T18:20:22Z",
          "updatedAt": "2023-05-22T18:20:22Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nProcedure:\r\n1. Validate SD-JWT following the steps defined in Section 6.2 of [@oauth-selective-disclosure-jwt].\r\n1. Let payload of a VC in the VCDM 2.0 format be the payload of the VC-SD-JWT obtained in the previous step.\r\n```\r\n\r\nI thought we are calling it SD-JWT-VC and not VC-SD-JWT..?\r\nI would prefer we move away from a VC WG specific terminology like secure/unsecured - signed, unsigned is simpler, no?\r\n`payload` makes it look like it is a claim, for example, like `@context` claim. please make it clear it is not a claim (if I understood correctly.)\r\n\"of a VC in the VCDM 2.0 format \" -> this is just a suggestion but need to be consistent in abbreviations.",
              "createdAt": "2023-05-22T18:20:22Z",
              "updatedAt": "2023-05-22T18:25:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vqevk",
          "commit": {
            "abbreviatedOid": "c873a4a"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T18:20:51Z",
          "updatedAt": "2023-05-22T18:20:51Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "```suggestion\r\n1. Let \"VC\" be an empty JSON object that represents the transformed Verifiable Credential in the VCDM 2.0 format:\r\n  - Set the `@context` property of \"VC\" to `\"https://www.w3.org/ns/credentials/v2\"`.\r\n```\r\n\r\n`VC` makes it look like it is a claim, for example, like `@context` claim. please make it clear it is not a claim (if I understood correctly.)",
              "createdAt": "2023-05-22T18:20:51Z",
              "updatedAt": "2023-05-22T18:26:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VqrT0",
          "commit": {
            "abbreviatedOid": "c873a4a"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T18:49:00Z",
          "updatedAt": "2023-05-22T18:49:00Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "@Sakurann `VC` is a variable that contains a JSON object in that case which is also the resulting W3C VC. I made it lower-case now. Does that work for you?",
              "createdAt": "2023-05-22T18:49:00Z",
              "updatedAt": "2023-05-22T18:49:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VqsW6",
          "commit": {
            "abbreviatedOid": "c873a4a"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-22T18:51:37Z",
          "updatedAt": "2023-05-22T18:51:38Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Can we please have the naming discussion in a separate issue? This PR does not introduce a new name, only the algorithm. ",
              "createdAt": "2023-05-22T18:51:38Z",
              "updatedAt": "2023-05-22T18:51:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vw6Kj",
          "commit": {
            "abbreviatedOid": "f5a9809"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T07:46:41Z",
          "updatedAt": "2023-05-23T07:46:41Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Agree with @Sakurann's proposals but to move naming discussion elsewhere.",
              "createdAt": "2023-05-23T07:46:41Z",
              "updatedAt": "2023-05-23T07:46:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VxB1T",
          "commit": {
            "abbreviatedOid": "c873a4a"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T07:59:29Z",
          "updatedAt": "2023-05-23T07:59:30Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I created this issue https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/70, resolving this discussion.",
              "createdAt": "2023-05-23T07:59:29Z",
              "updatedAt": "2023-05-23T07:59:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5VxLOw",
          "commit": {
            "abbreviatedOid": "c873a4a"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-23T08:19:12Z",
          "updatedAt": "2023-05-23T08:19:12Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "We will use italic instead of double quotes for variable names.",
              "createdAt": "2023-05-23T08:19:12Z",
              "updatedAt": "2023-05-23T08:19:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Vxu9K",
          "commit": {
            "abbreviatedOid": "d4e9f16"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T09:12:18Z",
          "updatedAt": "2023-05-23T09:12:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 72,
      "id": "PR_kwDOJbVClc5RIAKI",
      "title": "Some editorial changes; changing title and acronym",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/72",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #36, fixes #43, fixes #70",
      "createdAt": "2023-05-23T09:48:56Z",
      "updatedAt": "2023-05-26T14:28:29Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "60354b1943cd0596d008f0b383da19a443de592f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/editorial",
      "headRefOid": "dd11ae2f0ee12f0ee6472c8173690d5af634ac11",
      "closedAt": "2023-05-23T11:04:04Z",
      "mergedAt": "2023-05-23T11:04:04Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "80a2a171f0a690182bec3098938a28f179d21c81"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5VyqhT",
          "commit": {
            "abbreviatedOid": "c16184b"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-23T10:42:45Z",
          "updatedAt": "2023-05-23T10:44:23Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\ntitle = \"SD-JWT-based Verifiable Credentials with JSON payloads (SD-JWT VC)\"\r\n```",
              "createdAt": "2023-05-23T10:42:45Z",
              "updatedAt": "2023-05-23T10:44:23Z"
            },
            {
              "originalPosition": 150,
              "body": "```suggestion\r\nThe following is a non-normative example of the URL of the JWT Issuer Metadata\r\n```",
              "createdAt": "2023-05-23T10:43:50Z",
              "updatedAt": "2023-05-23T10:44:24Z"
            },
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nThe following is a non-normative example of the URL of the JWT Issuer Metadata\r\n```",
              "createdAt": "2023-05-23T10:44:01Z",
              "updatedAt": "2023-05-23T10:44:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOJbVClc5RImM8",
      "title": "Attempt to Fix #73",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/74",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-23T11:14:53Z",
      "updatedAt": "2023-05-26T14:28:37Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "80a2a171f0a690182bec3098938a28f179d21c81",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/fix-73",
      "headRefOid": "c73ea3cc55b57566c26ca19edf3fc6bced1a31aa",
      "closedAt": "2023-05-23T11:18:22Z",
      "mergedAt": "2023-05-23T11:18:22Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "8b0961b072b8f04569cf2b240950f7691099d13f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Vy88J",
          "commit": {
            "abbreviatedOid": "c73ea3c"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, thank you!",
          "createdAt": "2023-05-23T11:18:12Z",
          "updatedAt": "2023-05-23T11:18:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOJbVClc5RK1mf",
      "title": "Fix build scripts",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/76",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This fix is needed as I changed the scripts in the sd-jwt library into scripts that are installed with the library itself, not just sitting in the git repository.",
      "createdAt": "2023-05-23T17:28:09Z",
      "updatedAt": "2023-05-26T14:28:36Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "8b0961b072b8f04569cf2b240950f7691099d13f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/fix-building",
      "headRefOid": "2febb677c2575ab6037ef68cd8da8e66af53527c",
      "closedAt": "2023-05-23T19:21:43Z",
      "mergedAt": "2023-05-23T19:21:43Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "b916fb56c11962fb6f255549038283db1360e8f4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5V2wPa",
          "commit": {
            "abbreviatedOid": "2febb67"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "awesome, thank you",
          "createdAt": "2023-05-23T19:21:38Z",
          "updatedAt": "2023-05-23T19:21:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOJbVClc5RLYLD",
      "title": "feat: added andres to ack",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/77",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "feat: added andres to ack",
      "createdAt": "2023-05-23T19:32:22Z",
      "updatedAt": "2023-05-26T14:28:28Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "b916fb56c11962fb6f255549038283db1360e8f4",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/add-andres",
      "headRefOid": "ce91a4f28b2e1a5f46a2323039d911ae2418da36",
      "closedAt": "2023-05-24T13:18:51Z",
      "mergedAt": "2023-05-24T13:18:51Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "b954505f848dc2cd749c5e6655799ca30048f47d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 78,
      "id": "PR_kwDOJbVClc5RSA4h",
      "title": "fix: fixed intro according to resolution",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/78",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #69 ",
      "createdAt": "2023-05-24T19:34:18Z",
      "updatedAt": "2023-05-26T14:28:18Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "b954505f848dc2cd749c5e6655799ca30048f47d",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-69",
      "headRefOid": "9a1af516f06026b5bd35a6de7eb9f6b34cc2cfe7",
      "closedAt": "2023-05-25T08:40:53Z",
      "mergedAt": "2023-05-25T08:40:53Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "9453d7ec21ac8da619b34b7b3fe3dcae36ab6fc3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WCCcC",
          "commit": {
            "abbreviatedOid": "9a1af51"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T08:37:49Z",
          "updatedAt": "2023-05-25T08:37:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOJbVClc5RSDFx",
      "title": "fix: fixes #63",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/79",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fix: fixes #63",
      "createdAt": "2023-05-24T19:41:38Z",
      "updatedAt": "2023-05-26T14:28:16Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "b954505f848dc2cd749c5e6655799ca30048f47d",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-63",
      "headRefOid": "25f4aca517a5652e2e4718fb3e531850feae3cee",
      "closedAt": "2023-05-25T08:37:32Z",
      "mergedAt": "2023-05-25T08:37:32Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "06fa1efe2e1dec0c8e78bdfb8d7219f9f60608ce"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WCCRW",
          "commit": {
            "abbreviatedOid": "25f4aca"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T08:37:25Z",
          "updatedAt": "2023-05-25T08:37:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOJbVClc5RSeIP",
      "title": "fix: fixes #36; used similar language to rfc8414",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/80",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #36 ",
      "createdAt": "2023-05-24T21:15:37Z",
      "updatedAt": "2023-05-26T14:28:12Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "11eef80c75ac5535f17ce6384f7376a1b30046b0",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-36",
      "headRefOid": "3e9172c4023163420f72c26e9350a163e4742a86",
      "closedAt": "2023-05-25T11:36:00Z",
      "mergedAt": "2023-05-25T11:36:00Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "f3aa611889067732af8fd8a00d01abeb9331d30e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WCnJu",
          "commit": {
            "abbreviatedOid": "002f650"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T09:53:05Z",
          "updatedAt": "2023-05-25T09:53:06Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nA JWT Issuer Metadata configuration MUST be queried using an HTTP \"GET\" request\r\nat the path defined in (#jwt-issuer-metadata).\r\n```",
              "createdAt": "2023-05-25T09:53:06Z",
              "updatedAt": "2023-05-25T09:53:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCnpM",
          "commit": {
            "abbreviatedOid": "002f650"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T09:54:15Z",
          "updatedAt": "2023-05-25T09:54:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 82,
      "id": "PR_kwDOJbVClc5RSfhR",
      "title": "fix: fixes #81",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/82",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This just moves the flow diagram to the intro section, fixes #81",
      "createdAt": "2023-05-24T21:22:08Z",
      "updatedAt": "2023-05-26T14:28:15Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "11eef80c75ac5535f17ce6384f7376a1b30046b0",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-81",
      "headRefOid": "ca0398bf015ea8480dc298afe25a4e0c4d01d32c",
      "closedAt": "2023-05-24T21:25:23Z",
      "mergedAt": "2023-05-24T21:25:23Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "0700be7caf14efef1868cbaf394c95cce70fb182"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging this now, so folks don't run into conflicts later. This PR really just moves the diagram.",
          "createdAt": "2023-05-24T21:25:17Z",
          "updatedAt": "2023-05-24T21:25:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 83,
      "id": "PR_kwDOJbVClc5RU4aq",
      "title": "Renames Credential to unsecured payload and adds to terminology section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/83",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #45",
      "createdAt": "2023-05-25T09:41:12Z",
      "updatedAt": "2023-05-26T14:28:14Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "9453d7ec21ac8da619b34b7b3fe3dcae36ab6fc3",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-45",
      "headRefOid": "82e662a1bbbc8998a8e7b0ea7ba88d2b6cf0444c",
      "closedAt": "2023-05-25T11:35:37Z",
      "mergedAt": "2023-05-25T11:35:37Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "ac137cd85c4f7a46684eecc1c5786ddef8406032"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@danielfett can we merge this now?",
          "createdAt": "2023-05-25T11:10:57Z",
          "updatedAt": "2023-05-25T11:10:57Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WCjdr",
          "commit": {
            "abbreviatedOid": "923b9fe"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T09:44:27Z",
          "updatedAt": "2023-05-25T09:44:27Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I don't think we need to define this here if we only use it once. I suggest to move this down to the example section.",
              "createdAt": "2023-05-25T09:44:27Z",
              "updatedAt": "2023-05-25T09:44:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCjwp",
          "commit": {
            "abbreviatedOid": "923b9fe"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T09:45:09Z",
          "updatedAt": "2023-05-25T09:45:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: A JSON object containing all selectively disclosable and non-selectively disclosable claims\r\n```",
              "createdAt": "2023-05-25T09:45:09Z",
              "updatedAt": "2023-05-25T09:45:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WClvY",
          "commit": {
            "abbreviatedOid": "923b9fe"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T09:49:45Z",
          "updatedAt": "2023-05-25T09:49:46Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "We are using the term in two sections, that is why I defined the term. But we can also remove it in the next version of the document if we don't think it adds any value.",
              "createdAt": "2023-05-25T09:49:45Z",
              "updatedAt": "2023-05-25T09:49:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 84,
      "id": "PR_kwDOJbVClc5RU8Dc",
      "title": "Editorial changes to Intro, Fix #71",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/84",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-25T09:51:53Z",
      "updatedAt": "2023-05-26T14:28:23Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "9453d7ec21ac8da619b34b7b3fe3dcae36ab6fc3",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/intro",
      "headRefOid": "d45f8988a992cc0516067f4d69e5d1ec9cb7a2d7",
      "closedAt": "2023-05-25T11:32:00Z",
      "mergedAt": "2023-05-25T11:32:00Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "ab011c06410c1152c99858767fb14a0fe0c27a60"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WCqwz",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:01:30Z",
          "updatedAt": "2023-05-25T10:01:30Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "Should we limit the text to cryptographic holder binding?",
              "createdAt": "2023-05-25T10:01:30Z",
              "updatedAt": "2023-05-25T10:01:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCq-h",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:02:00Z",
          "updatedAt": "2023-05-25T10:02:00Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Holder binding is not enforced by the Verifier but validated?",
              "createdAt": "2023-05-25T10:02:00Z",
              "updatedAt": "2023-05-25T10:02:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCrh1",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:03:23Z",
          "updatedAt": "2023-05-25T10:03:23Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Should we mention that the Status Provider can also be the Issuer instead of the fourth party?",
              "createdAt": "2023-05-25T10:03:23Z",
              "updatedAt": "2023-05-25T10:03:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCs38",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "A few comments, otherwise looks good to me.",
          "createdAt": "2023-05-25T10:06:38Z",
          "updatedAt": "2023-05-25T10:12:39Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nare the intended holder of the Verifiable Credential, for example, by proving possession of a\r\ncryptographic key referenced in the credential. This process is further\r\n```",
              "createdAt": "2023-05-25T10:06:38Z",
              "updatedAt": "2023-05-25T10:12:39Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\na Status Provider, who delivers credential status information to Verifiers.\r\n```",
              "createdAt": "2023-05-25T10:07:48Z",
              "updatedAt": "2023-05-25T10:12:39Z"
            },
            {
              "originalPosition": 147,
              "body": "```suggestion\r\nVerifiable Credential data model purely through JWT Claim Sets, using registered\r\n```\r\n",
              "createdAt": "2023-05-25T10:11:57Z",
              "updatedAt": "2023-05-25T10:17:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCvQ7",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "A few comments, otherwise looks good to me.",
          "createdAt": "2023-05-25T10:12:39Z",
          "updatedAt": "2023-05-25T10:12:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WCwYJ",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:15:35Z",
          "updatedAt": "2023-05-25T10:15:35Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "I made a suggestion below that cryptographic holder binding is \"an example\". Currently, it is limited to the `cnf` claim but the `cnf` claim has an extension mechanism. So, technically it is not limited from a data model perspective. IMO, this limitation can be done by specific profiles such as the hi-assurance profile.",
              "createdAt": "2023-05-25T10:15:35Z",
              "updatedAt": "2023-05-25T10:15:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCxre",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:19:07Z",
          "updatedAt": "2023-05-25T10:19:08Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "The verifier is the only party who can actually enforce holder binding (by validating it, yes).",
              "createdAt": "2023-05-25T10:19:07Z",
              "updatedAt": "2023-05-25T10:19:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCx91",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:19:41Z",
          "updatedAt": "2023-05-25T10:19:42Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "Agree, this is meant to cover cryptographic holder binding.",
              "createdAt": "2023-05-25T10:19:41Z",
              "updatedAt": "2023-05-25T10:19:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCyR1",
          "commit": {
            "abbreviatedOid": "7bd5545"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:20:31Z",
          "updatedAt": "2023-05-25T10:20:32Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "We need to say what \"credential status\" is. Otherwise the term remains very unclear.",
              "createdAt": "2023-05-25T10:20:31Z",
              "updatedAt": "2023-05-25T10:20:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCyuB",
          "commit": {
            "abbreviatedOid": "70abc05"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:21:45Z",
          "updatedAt": "2023-05-25T10:21:46Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "```suggestion\r\na Status Provider, who delivers revocation information to Verifiers. (The Verifier can\r\nalso serve as the Status Provider.)\r\n```",
              "createdAt": "2023-05-25T10:21:45Z",
              "updatedAt": "2023-05-25T10:21:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WCyxK",
          "commit": {
            "abbreviatedOid": "70abc05"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T10:21:52Z",
          "updatedAt": "2023-05-25T10:21:53Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Added proposal below.",
              "createdAt": "2023-05-25T10:21:53Z",
              "updatedAt": "2023-05-25T10:21:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WDBsF",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T11:01:57Z",
          "updatedAt": "2023-05-25T11:01:58Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "I thought that this would be covered by @paulbastian spec?",
              "createdAt": "2023-05-25T11:01:57Z",
              "updatedAt": "2023-05-25T11:01:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WDFIU",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T11:11:08Z",
          "updatedAt": "2023-05-25T11:11:08Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "I'm not talking about *how* it is achieved, but what \"status\" means. That's why I used the term revocation.",
              "createdAt": "2023-05-25T11:11:08Z",
              "updatedAt": "2023-05-25T11:11:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WDHE0",
          "commit": {
            "abbreviatedOid": "2358f97"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T11:16:36Z",
          "updatedAt": "2023-05-25T11:16:36Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "Alright",
              "createdAt": "2023-05-25T11:16:36Z",
              "updatedAt": "2023-05-25T11:16:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WDHNq",
          "commit": {
            "abbreviatedOid": "70abc05"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm now",
          "createdAt": "2023-05-25T11:17:00Z",
          "updatedAt": "2023-05-25T11:17:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOJbVClc5RVhfU",
      "title": "fix: added kid to jwks example",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/85",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #75 ",
      "createdAt": "2023-05-25T11:45:32Z",
      "updatedAt": "2023-05-26T14:28:07Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "f3aa611889067732af8fd8a00d01abeb9331d30e",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-75",
      "headRefOid": "8fbe379dd896aa8ecf2234be8c38c14bdfe0511d",
      "closedAt": "2023-05-25T11:47:18Z",
      "mergedAt": "2023-05-25T11:47:18Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "b3befa453934a3ade996a19a4b5f6597cf974bc4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 86,
      "id": "PR_kwDOJbVClc5RVmU3",
      "title": "fix: minor editorial fixes",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/86",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This just fixes typos and references.",
      "createdAt": "2023-05-25T11:59:40Z",
      "updatedAt": "2023-05-25T12:00:36Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "b3befa453934a3ade996a19a4b5f6597cf974bc4",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/small-editorial",
      "headRefOid": "1f35abb9b418923ee3f1894282e7b5a30996ee86",
      "closedAt": "2023-05-25T12:00:32Z",
      "mergedAt": "2023-05-25T12:00:32Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "8b61da087c08eb8e10fd5c8ed60830d43ef957b4"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "This just fixes typos and references. No review required at this stage.",
          "createdAt": "2023-05-25T12:00:36Z",
          "updatedAt": "2023-05-25T12:00:36Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 87,
      "id": "PR_kwDOJbVClc5RVpee",
      "title": "fix: fixed typos",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/87",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Only minor editorial changes such as typos.",
      "createdAt": "2023-05-25T12:07:45Z",
      "updatedAt": "2023-05-26T14:28:06Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "8b61da087c08eb8e10fd5c8ed60830d43ef957b4",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/small-editorial",
      "headRefOid": "d9a33ae3832d6aef62e13a683e5d5bb7698addc4",
      "closedAt": "2023-05-25T12:08:37Z",
      "mergedAt": "2023-05-25T12:08:37Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "f6c12b2d0832fe4a18762c45e7674d8e3431b820"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Only minor editorial changes such as typos -> no peer-review required at this stage.",
          "createdAt": "2023-05-25T12:08:56Z",
          "updatedAt": "2023-05-25T12:08:56Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 88,
      "id": "PR_kwDOJbVClc5RV02D",
      "title": "Removes VP terms; changes language around VPs and presentation of VCs",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/88",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Removes VP terms; changes language around VPs and presentation of VCs;\r\n- fixes #64 ",
      "createdAt": "2023-05-25T12:39:58Z",
      "updatedAt": "2023-05-26T14:28:03Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "f6c12b2d0832fe4a18762c45e7674d8e3431b820",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-vp-terminology",
      "headRefOid": "66040387c93a4070f6f3a3b92b6fb515efad207d",
      "closedAt": "2023-05-25T13:41:11Z",
      "mergedAt": "2023-05-25T13:41:11Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "8337f2a38a30a8781ea90765631653828be87746"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@danielfett gave verbal approval.",
          "createdAt": "2023-05-25T13:41:07Z",
          "updatedAt": "2023-05-25T13:41:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WECbm",
          "commit": {
            "abbreviatedOid": "fdae796"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T13:27:18Z",
          "updatedAt": "2023-05-25T13:27:18Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "@ missing?",
              "createdAt": "2023-05-25T13:27:18Z",
              "updatedAt": "2023-05-25T13:27:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 90,
      "id": "PR_kwDOJbVClc5RV16J",
      "title": "fix: made cnf optional but made it MUST when holder binding is required",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/90",
      "state": "CLOSED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #89 ",
      "createdAt": "2023-05-25T12:43:00Z",
      "updatedAt": "2023-05-26T14:28:05Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "f6c12b2d0832fe4a18762c45e7674d8e3431b820",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/89",
      "headRefOid": "fbb8289b48b493eeed015e21688251db06c1e81d",
      "closedAt": "2023-05-25T13:44:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "closing this PR in favor of #91 ",
          "createdAt": "2023-05-25T13:44:15Z",
          "updatedAt": "2023-05-25T13:44:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WEEDE",
          "commit": {
            "abbreviatedOid": "fbb8289"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T13:30:28Z",
          "updatedAt": "2023-05-25T13:30:29Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "The \"OPTIONAL\" and \"MUST\" clash. ",
              "createdAt": "2023-05-25T13:30:28Z",
              "updatedAt": "2023-05-25T13:30:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOJbVClc5RWNwA",
      "title": "fix: made cnf required for holder binding",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/91",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #89 ",
      "createdAt": "2023-05-25T13:43:44Z",
      "updatedAt": "2023-05-26T14:28:02Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "8337f2a38a30a8781ea90765631653828be87746",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-cnf",
      "headRefOid": "f3f74403b103a816535297d7d4db174f57993525",
      "closedAt": "2023-05-25T13:44:47Z",
      "mergedAt": "2023-05-25T13:44:47Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "eea3d568ea4b0053aeea0ec1b1e65534c071694b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WELGe",
          "commit": {
            "abbreviatedOid": "f3f7440"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T13:44:09Z",
          "updatedAt": "2023-05-25T13:44:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 92,
      "id": "PR_kwDOJbVClc5RWnpE",
      "title": "fix: fixed ietf metadata",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/92",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-05-25T14:49:34Z",
      "updatedAt": "2023-05-26T14:27:52Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "eea3d568ea4b0053aeea0ec1b1e65534c071694b",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-00-publication",
      "headRefOid": "cc6c65b0c85b1dcff9c4b96258063c449c9d0c1d",
      "closedAt": "2023-05-25T15:06:05Z",
      "mergedAt": "2023-05-25T15:06:05Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "c7418b6896418edeea63a9b4859966a044621759"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WEyTI",
          "commit": {
            "abbreviatedOid": "f554526"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-25T14:57:30Z",
          "updatedAt": "2023-05-25T14:57:31Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nname = \"Internet-Draft\"\r\n```",
              "createdAt": "2023-05-25T14:57:31Z",
              "updatedAt": "2023-05-25T14:57:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOJbVClc5RW_p2",
      "title": "improve reasoning for SD-JWT",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/95",
      "state": "MERGED",
      "author": "paulbastian",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See #94 ",
      "createdAt": "2023-05-25T15:55:02Z",
      "updatedAt": "2023-05-26T09:09:36Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "c7418b6896418edeea63a9b4859966a044621759",
      "headRepository": "paulbastian/draft-terbu-sd-jwt-vc",
      "headRefName": "introduction",
      "headRefOid": "c216fd1d7ce737af7230b44593d86eaeca536a65",
      "closedAt": "2023-05-26T09:08:15Z",
      "mergedAt": "2023-05-26T09:08:15Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "cbcb68675cdb7b7f9266008e28d4115ed18566df"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging, two approvals.",
          "createdAt": "2023-05-26T09:08:11Z",
          "updatedAt": "2023-05-26T09:08:11Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "fixed #94 ",
          "createdAt": "2023-05-26T09:09:36Z",
          "updatedAt": "2023-05-26T09:09:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WFRrp",
          "commit": {
            "abbreviatedOid": "9aea21d"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T16:00:04Z",
          "updatedAt": "2023-05-25T16:00:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WFY4h",
          "commit": {
            "abbreviatedOid": "9aea21d"
          },
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-05-25T16:16:34Z",
          "updatedAt": "2023-05-25T16:17:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "holder -> Holder\r\n\r\ndefined term",
              "createdAt": "2023-05-25T16:16:34Z",
              "updatedAt": "2023-05-25T16:17:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WK8cb",
          "commit": {
            "abbreviatedOid": "c216fd1"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-05-26T09:07:56Z",
          "updatedAt": "2023-05-26T09:07:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 100,
      "id": "PR_kwDOJbVClc5RYCXG",
      "title": "remove the reference to a vcdm from the terminology and intro",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/100",
      "state": "MERGED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "as discussed.",
      "createdAt": "2023-05-25T19:45:54Z",
      "updatedAt": "2023-05-26T14:27:50Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "c7418b6896418edeea63a9b4859966a044621759",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "breakAway",
      "headRefOid": "485e5aa2908982d67426b3b52e415a7abcce1b21",
      "closedAt": "2023-05-26T09:30:14Z",
      "mergedAt": "2023-05-26T09:30:14Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "08f7b85dc3c340a705fcd8a7466d466848c054eb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WGqVK",
          "commit": {
            "abbreviatedOid": "2e1ea0b"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T20:14:49Z",
          "updatedAt": "2023-05-25T20:14:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WG6m-",
          "commit": {
            "abbreviatedOid": "2e1ea0b"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-25T21:08:35Z",
          "updatedAt": "2023-05-25T21:08:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WH6Sg",
          "commit": {
            "abbreviatedOid": "2e1ea0b"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-26T03:01:33Z",
          "updatedAt": "2023-05-26T03:01:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WK7Tl",
          "commit": {
            "abbreviatedOid": "2e1ea0b"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, just minor change. ",
          "createdAt": "2023-05-26T09:06:14Z",
          "updatedAt": "2023-05-26T09:07:02Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n:  An Issuer-signed statement about a Subject whose authenticity can be cryptographically verified.\r\n```",
              "createdAt": "2023-05-26T09:06:14Z",
              "updatedAt": "2023-05-26T09:07:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WK73k",
          "commit": {
            "abbreviatedOid": "2e1ea0b"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, just minor change. ",
          "createdAt": "2023-05-26T09:07:03Z",
          "updatedAt": "2023-05-26T09:07:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WK-ju",
          "commit": {
            "abbreviatedOid": "2e1ea0b"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T09:10:57Z",
          "updatedAt": "2023-05-26T09:10:58Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I'm ok with this change but we should not introduce Credential since we don't have a definition for that. I'll replace with the definition above.",
              "createdAt": "2023-05-26T09:10:57Z",
              "updatedAt": "2023-05-26T09:10:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WLP4x",
          "commit": {
            "abbreviatedOid": "485e5aa"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-26T09:29:52Z",
          "updatedAt": "2023-05-26T09:29:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDOJbVClc5Ra_0S",
      "title": "Removed W3C VCDM transformation algo section",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/104",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #103 ",
      "createdAt": "2023-05-26T09:41:04Z",
      "updatedAt": "2023-05-26T14:27:49Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "08f7b85dc3c340a705fcd8a7466d466848c054eb",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/fix-103",
      "headRefOid": "fb90893a42871d04e5d2cb297fde597ed2875940",
      "closedAt": "2023-05-26T11:59:15Z",
      "mergedAt": "2023-05-26T11:59:15Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "ddfaefc60ed99191f35e746f94e26c04e4f3f934"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WMQeT",
          "commit": {
            "abbreviatedOid": "fb90893"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-26T11:43:34Z",
          "updatedAt": "2023-05-26T11:43:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDOJbVClc5RbzGy",
      "title": "Editorial changes",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/105",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Editorial changes",
      "createdAt": "2023-05-26T12:07:27Z",
      "updatedAt": "2023-05-26T14:27:48Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "ddfaefc60ed99191f35e746f94e26c04e4f3f934",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/editorial-1",
      "headRefOid": "810c86bb2fc1d3efd41c8e73a9a16af67a6146e2",
      "closedAt": "2023-05-26T12:08:23Z",
      "mergedAt": "2023-05-26T12:08:23Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "0965895fed176b5be2fcef2236c4570a37baaa34"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 106,
      "id": "PR_kwDOJbVClc5Rb0zN",
      "title": "Release 01",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/106",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Release 01",
      "createdAt": "2023-05-26T12:11:47Z",
      "updatedAt": "2023-05-26T12:12:51Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "0965895fed176b5be2fcef2236c4570a37baaa34",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/release-01",
      "headRefOid": "ba32a58299eeca5506d63e98882bd9a68e5d1a23",
      "closedAt": "2023-05-26T12:12:51Z",
      "mergedAt": "2023-05-26T12:12:51Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "669c212f75b5bfc9b85eee4137910508290df2a7"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "merging, just editorial changes",
          "createdAt": "2023-05-26T12:12:47Z",
          "updatedAt": "2023-05-26T12:12:47Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 107,
      "id": "PR_kwDOJbVClc5Rb6HU",
      "title": "Adjusted term definition",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/107",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Adjusted term definition",
      "createdAt": "2023-05-26T12:29:18Z",
      "updatedAt": "2023-05-26T14:27:47Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "669c212f75b5bfc9b85eee4137910508290df2a7",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie/release-01",
      "headRefOid": "7924172770d0f88c45606b20f1408ead1b9c26dc",
      "closedAt": "2023-05-26T13:23:49Z",
      "mergedAt": "2023-05-26T13:23:49Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "588ea557ea5861784bbaf7051eddefdeb6d0751f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5WMwFS",
          "commit": {
            "abbreviatedOid": "58d8420"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-26T13:00:58Z",
          "updatedAt": "2023-05-26T13:00:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5WMwZ4",
          "commit": {
            "abbreviatedOid": "58d8420"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T13:01:42Z",
          "updatedAt": "2023-05-26T13:01:42Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n:  An Issuer-signed assertion with claims about a Subject whose authenticity\r\n```",
              "createdAt": "2023-05-26T13:01:42Z",
              "updatedAt": "2023-05-26T13:01:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WMwba",
          "commit": {
            "abbreviatedOid": "58d8420"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T13:01:45Z",
          "updatedAt": "2023-05-26T13:01:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n:  An Issuer-signed assertion with claims about a Subject whose authenticity\r\n```",
              "createdAt": "2023-05-26T13:01:45Z",
              "updatedAt": "2023-05-26T13:01:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WMwrH",
          "commit": {
            "abbreviatedOid": "58d8420"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T13:02:21Z",
          "updatedAt": "2023-05-26T13:02:22Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Also, we don't need the \"whose authenticitiy...\" part any longer when we say that it is \"signed\".",
              "createdAt": "2023-05-26T13:02:21Z",
              "updatedAt": "2023-05-26T13:02:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WM2A-",
          "commit": {
            "abbreviatedOid": "58d8420"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-26T13:14:01Z",
          "updatedAt": "2023-05-26T13:14:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "agree, pls review again @danielfett ",
              "createdAt": "2023-05-26T13:14:01Z",
              "updatedAt": "2023-05-26T13:14:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5WM7Bh",
          "commit": {
            "abbreviatedOid": "7924172"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-26T13:23:42Z",
          "updatedAt": "2023-05-26T13:23:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 109,
      "id": "PR_kwDOJbVClc5ReLhn",
      "title": "make private claims relevant",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/109",
      "state": "MERGED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #108 ",
      "createdAt": "2023-05-26T20:23:07Z",
      "updatedAt": "2023-06-17T04:23:53Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "588ea557ea5861784bbaf7051eddefdeb6d0751f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "private-claims",
      "headRefOid": "21ed8a0ee541d22c5ec9efc5ab1dc1bc05a6f392",
      "closedAt": "2023-06-17T04:23:52Z",
      "mergedAt": "2023-06-17T04:23:52Z",
      "mergedBy": "Sakurann",
      "mergeCommit": {
        "oid": "d0716fef9e2f7779d83ec0e8af158acd3d114a7f"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Can you give an example where this is relevant? With excluding private\nclaims we make sure all claims are uniquely identifiable across all parties\nof the three-party-model.\n\nOn Fri 26. May 2023 at 22:23, Kristina ***@***.***> wrote:\n\n> @Sakurann <https://github.com/Sakurann> requested your review on: #109\n> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/109> make private\n> claims relevant as a code owner.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/109#event-9354429360>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AKLN3MC3CECGQ5Q6RNQ3YA3XIEGLPANCNFSM6AAAAAAYQU74RA>\n> .\n> You are receiving this because your review was requested.Message ID:\n> ***@***.***>\n>\n",
          "createdAt": "2023-05-27T08:05:43Z",
          "updatedAt": "2023-05-27T08:05:43Z"
        },
        {
          "author": "tplooker",
          "authorAssociation": "NONE",
          "body": "> Can you give an example where this is relevant? With excluding private\r\nclaims we make sure all claims are uniquely identifiable across all parties\r\nof the three-party-model.\r\n\r\nI dont believe this PR discourages public claims it simply reflects that there are bunch of scenarios where VC ecosystems what to interoperate on claims that are perhaps not general enough to register as public claims.",
          "createdAt": "2023-06-14T22:21:23Z",
          "updatedAt": "2023-06-14T22:21:23Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "Please merge ",
          "createdAt": "2023-06-17T04:10:52Z",
          "updatedAt": "2023-06-17T04:10:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5XpIah",
          "commit": {
            "abbreviatedOid": "21ed8a0"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-08T16:51:35Z",
          "updatedAt": "2023-06-08T16:51:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YF7rr",
          "commit": {
            "abbreviatedOid": "21ed8a0"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T19:49:44Z",
          "updatedAt": "2023-06-13T19:49:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YPQJc",
          "commit": {
            "abbreviatedOid": "21ed8a0"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T22:20:06Z",
          "updatedAt": "2023-06-14T22:20:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YZzDq",
          "commit": {
            "abbreviatedOid": "21ed8a0"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T10:12:57Z",
          "updatedAt": "2023-06-16T10:12:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yfior",
          "commit": {
            "abbreviatedOid": "21ed8a0"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T03:57:43Z",
          "updatedAt": "2023-06-17T03:57:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 117,
      "id": "PR_kwDOJbVClc5Sdgbd",
      "title": "copy MikeP draft",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/117",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "DO NOT MERGE"
      ],
      "body": "",
      "createdAt": "2023-06-07T22:37:12Z",
      "updatedAt": "2023-06-22T09:13:34Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "sakuran-nbf",
      "baseRefOid": "38e84d744a0f4825fc09d1f8d5acd52f18caf165",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "diff-vc-jwt",
      "headRefOid": "0fb898c231155aab2fd62c6a9b3dc1bd5b2b075d",
      "closedAt": "2023-06-22T09:13:33Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@Sakurann Can you close this since we merged #131 ?",
          "createdAt": "2023-06-21T13:48:33Z",
          "updatedAt": "2023-06-21T13:48:33Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this PR since PR #131 was merged.",
          "createdAt": "2023-06-22T09:13:33Z",
          "updatedAt": "2023-06-22T09:13:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5XpAum",
          "commit": {
            "abbreviatedOid": "0fb898c"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I think the joint spec requires several sections explaining the concepts used by both representations, namely the structure of the payload (all the JWT claims), JWT Issuer Metadata, Key Binding, and individual section covering the differences, namely `typ` values and none selectively disclosable claims (for SD-JWT).\r\nI guess we first need to agree on the objectives and principles of a joint spec. \r\n",
          "createdAt": "2023-06-08T16:30:16Z",
          "updatedAt": "2023-06-08T16:50:23Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\ntitle = \"JWT representation of Verifiable Credentials\"\r\n```\r\n\r\nWhat does \"native\" mean? I would rather like to have a title along the lines of \"Verifiable Credentials with JSON payload following JWT rules with optional selective disclosure support\" but I know that sounds pretty artificial. So removing native might be ok. ",
              "createdAt": "2023-06-08T16:30:16Z",
              "updatedAt": "2023-06-08T16:48:56Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nkeyword = [\"OAUTH\",\"SD-JWT\",\"JWT\"]\r\n```",
              "createdAt": "2023-06-08T16:31:00Z",
              "updatedAt": "2023-06-08T16:48:10Z"
            },
            {
              "originalPosition": 18,
              "body": "I thought we wanted to integrate the JWT part into Oliver's draft. ",
              "createdAt": "2023-06-08T16:36:41Z",
              "updatedAt": "2023-06-08T16:48:10Z"
            },
            {
              "originalPosition": 220,
              "body": "what does \"mapping\" mean? ",
              "createdAt": "2023-06-08T16:37:59Z",
              "updatedAt": "2023-06-08T16:48:10Z"
            },
            {
              "originalPosition": 233,
              "body": "sounds like a self fulfilling prophecy - why is that needed? I would rather state what the expected `typ` value is. ",
              "createdAt": "2023-06-08T16:39:02Z",
              "updatedAt": "2023-06-08T16:48:10Z"
            },
            {
              "originalPosition": 245,
              "body": "or `vc+sd-jwt`",
              "createdAt": "2023-06-08T16:39:20Z",
              "updatedAt": "2023-06-08T16:48:10Z"
            },
            {
              "originalPosition": 263,
              "body": "no definition of the MUST claims in a JWT VC?",
              "createdAt": "2023-06-08T16:40:40Z",
              "updatedAt": "2023-06-08T16:48:11Z"
            },
            {
              "originalPosition": 278,
              "body": "which vc and vp claims? seems this is another self fulfilling prophecy ",
              "createdAt": "2023-06-08T16:41:10Z",
              "updatedAt": "2023-06-08T16:48:11Z"
            },
            {
              "originalPosition": 279,
              "body": "typ or cty? I don't understand this sentence. Given line 211 states `typ` is `vc+jwt`.",
              "createdAt": "2023-06-08T16:41:59Z",
              "updatedAt": "2023-06-08T16:48:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOJbVClc5Sikpr",
      "title": "breaking change: .well-known/jwt-issuer renamed to .well-known/jwt-vc-issuer",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/118",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss",
        "DO NOT MERGE"
      ],
      "body": "~this PR resolves~ https://github.com/vcstuff/draft-terbu-sd-jwt-vc/issues/101\r\n\r\nmore discussion is needed",
      "createdAt": "2023-06-08T16:19:23Z",
      "updatedAt": "2023-06-26T15:28:48Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "588ea557ea5861784bbaf7051eddefdeb6d0751f",
      "headRepository": "peppelinux/draft-terbu-sd-jwt-vc",
      "headRefName": "vc-issuer-md",
      "headRefOid": "cafdb7fd7b93248941b20eca924e149009f2b10e",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "might be a stupid question: but given the latest change from VC-SD-JWT to SD-JWT VC, shouldn\u2019t the metadata location name be `jwt-vc-issuer` instead of `vc-jwt-issuer`?",
          "createdAt": "2023-06-08T16:24:36Z",
          "updatedAt": "2023-06-08T16:24:36Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Potentially fixes #101 ",
          "createdAt": "2023-06-21T14:38:51Z",
          "updatedAt": "2023-06-21T14:38:51Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I propose that we wait to resolve the discussion in #101 before merging this.",
          "createdAt": "2023-06-22T09:19:28Z",
          "updatedAt": "2023-06-22T09:19:28Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Marked as DO NOT MERGE since we have to wait for the discussion in #101 to resolve first.",
          "createdAt": "2023-06-22T09:19:37Z",
          "updatedAt": "2023-06-22T09:19:37Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "I added a related PR here: https://github.com/w3c/vc-jwt/pull/111",
          "createdAt": "2023-06-26T15:28:48Z",
          "updatedAt": "2023-06-26T15:28:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Xo9xc",
          "commit": {
            "abbreviatedOid": "b0d0d2c"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "please also see my comment",
          "createdAt": "2023-06-08T16:23:07Z",
          "updatedAt": "2023-06-08T16:24:58Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n# JWT VC Issuer Metadata {#vc-jwt-issuer-metadata}\r\n```",
              "createdAt": "2023-06-08T16:23:07Z",
              "updatedAt": "2023-06-08T16:24:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XpDDr",
          "commit": {
            "abbreviatedOid": "b0d0d2c"
          },
          "author": "peppelinux",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-08T16:36:59Z",
          "updatedAt": "2023-06-08T16:36:59Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "done, thank you",
              "createdAt": "2023-06-08T16:36:59Z",
              "updatedAt": "2023-06-08T16:36:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YfixH",
          "commit": {
            "abbreviatedOid": "cafdb7f"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "I don't think this helps with readability",
          "createdAt": "2023-06-17T04:02:19Z",
          "updatedAt": "2023-06-17T04:02:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y28et",
          "commit": {
            "abbreviatedOid": "cafdb7f"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-06-21T13:51:03Z",
          "updatedAt": "2023-06-21T13:51:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5ZUtNv",
          "commit": {
            "abbreviatedOid": "cafdb7f"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-26T13:55:56Z",
          "updatedAt": "2023-06-26T13:55:56Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "why are we intentionally breaking compatibility with oidc?",
              "createdAt": "2023-06-26T13:55:56Z",
              "updatedAt": "2023-06-26T13:55:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5ZUuez",
          "commit": {
            "abbreviatedOid": "cafdb7f"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-26T13:57:24Z",
          "updatedAt": "2023-06-26T13:57:25Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "provide a full example of the dereferenced resource.... something like:\r\n\r\n```json\r\n{\r\n  \"keys\": [\r\n  {\r\n     \"kid\": \"...\"\r\n  }\r\n   ]\r\n}\r\n```",
              "createdAt": "2023-06-26T13:57:24Z",
              "updatedAt": "2023-06-26T13:57:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5ZUvHR",
          "commit": {
            "abbreviatedOid": "cafdb7f"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "This seems to break compatibility with both DIDs and OIDC.",
          "createdAt": "2023-06-26T13:58:11Z",
          "updatedAt": "2023-06-26T13:58:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 120,
      "id": "PR_kwDOJbVClc5SmL7F",
      "title": "first pass at adding a non-selectively disclosable JWT VC to the spec",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/120",
      "state": "CLOSED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "DO NOT MERGE"
      ],
      "body": "Changes\r\n- renamed the draft \r\n    - kept the short name, might need to introduce a term like `JOSE-VC` to aggregate both \"JWT VC and SD-JWT VC\" but might work without it too)\r\n    - I must admit I fought the urge to call it JWS VC...\r\n- restructured so that there is a `common data format` section with headers and payload requirements\r\n    - followed by a section per jwt vc and sd-jwt vc that defines media type and non-disclosable claims (for sd-jwt vc)\r\n- verification and processing is a top level section now\r\n- no changes to the jwt issuer metadata section\r\n- presenting VC section is common to both\r\n    - introduced ho to present a JWT VC with a HB JWT. this is currently the only way to do HB with JWT VC when HB is necessary. \r\n- no example of JWT VC yet - can be another PR I think\r\n\r\n[link to rendered preview](https://vcstuff.github.io/draft-terbu-sd-jwt-vc/jwt-vc/draft-terbu-oauth-jwt-vc.html\r\n)",
      "createdAt": "2023-06-09T08:20:25Z",
      "updatedAt": "2023-06-21T19:59:02Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "588ea557ea5861784bbaf7051eddefdeb6d0751f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "jwt-vc",
      "headRefOid": "d852bcc1bfed1173a98061b3c404b1d3aee9a7f3",
      "closedAt": "2023-06-21T19:59:02Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "body": "please rename to draft-terbu-jwt-vc",
          "createdAt": "2023-06-14T21:02:24Z",
          "updatedAt": "2023-06-14T21:02:24Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "cc @OR13, @mprorock. ",
          "createdAt": "2023-06-14T22:51:00Z",
          "updatedAt": "2023-06-14T22:51:00Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\"Holder Binding\" is soon to be \"Key Binding\"  (e.g., https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/286 & https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/126) so it might make sense to use \"Key Binding\" in the new text of this PR? I dunno, timing and coordinating some of these changes is challenging. \r\n\r\nSimilarly, the SD-JWT section numbers are almost certain to change some over time (especially https://github.com/oauth-wg/oauth-selective-disclosure-jwt/issues/290 but not only that) so it make sense to not reference specific section numbers yet. ",
          "createdAt": "2023-06-15T18:24:34Z",
          "updatedAt": "2023-06-15T18:24:34Z"
        },
        {
          "author": "peacekeeper",
          "authorAssociation": "NONE",
          "body": "What's the difference between a \"JWT VC\" and a \"JWT\" ?",
          "createdAt": "2023-06-16T19:40:17Z",
          "updatedAt": "2023-06-16T19:40:17Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> What's the difference between a \"JWT VC\" and a \"JWT\" ?\r\n\r\n@peacekeeper I hope the text below from PR #131 explains it:\r\n\r\n\"SD-JWT is a superset of JWT as it can also be used when there are no selectively disclosable claims and also supports JWS JSON serialization, which is useful for long term archiving and multi signatures. However, SD-JWT itself does not define the claims that must be used within the payload or their semantics.\r\n\r\nThis specification therefore uses SD-JWT and the well-established JWT content rules and extensibility model as basis for representing Verifiable Credentials with JSON payload. Those Verifiable Credentials are called SD-JWT VCs.\r\n\r\nSD-JWTs VC can contain claims that are registered in \"JSON Web Token Claims\" registry as defined in [@!RFC7519], as well as public and private claims.\"\r\n\r\nbottomline, how would you use JWT RFC7519 to have interoperable JWT VCs? you need to have a set of mandatory JWT claims, rules how to discovery the keys to validate it, etc.",
          "createdAt": "2023-06-16T20:02:35Z",
          "updatedAt": "2023-06-16T20:02:35Z"
        },
        {
          "author": "peacekeeper",
          "authorAssociation": "NONE",
          "body": "@Sakurann Thank you.. So if I understand correctly, a \"JWT VC\" nowdays is almost the same as a traditional JWT, except that it makes some JWT claims mandatory and ~~steals~~ - uh excuse me - adopts and \"JWTifies\" several other concepts invented by VCs, such as \"type\", three party model, key discovery, status list, etc.?",
          "createdAt": "2023-06-16T20:19:16Z",
          "updatedAt": "2023-06-16T20:19:16Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "First and foremost, if W3C VC WG was the right place to define credentials in three party model with vanilla JSON and JWT claims, that work would not be happening elsewhere. W3C VC WG made it clear that it is only interested in working on anything JSON-LD so a JW-* work item in W3C will focus on protecting the payload that is JSON-LD without using any JWT claims. so all of us interested in working on vanilla JSON/JWT claim set based three party model credentials had to find a new home for it.\r\n\r\nSo yes, JWT VC that uses JWT claims is (should have always been) based on the \"traditional JWT\", assuming you mean RFC 7519 and I do not see anything wrong with that :)\r\n\r\nSecond, let's not argue who invented what - the concepts of typing JWTs (ex: RFC8725), key discovery (ex: RFC8414), and status lists (ex: CRLs) have existed before/alongside VCs. though as I said, VCDM should get the benefit of making the three party model concept widely known and should be appreciated and praised for that. (which is how i feel).\r\n\r\nFinally, it usually makes people happy when the concepts they have worked on are being used in other places, even in places they have not anticipated. so your choice of words is very \"interesting\".",
          "createdAt": "2023-06-16T22:27:55Z",
          "updatedAt": "2023-06-16T22:27:55Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "Very excited for VCs that are CBOR and JSON.\n\nAlso excited for key transparency, COSE and SCITT... IETF has an excellent community and building blocks that make development easy.\n\nEverything does not need to happen at the W3C, in JSON-LD, with terms controlled by w3id.org which is not even the W3C.\n\nI personally prefer my terms to come from RFCs and IANA, but reasonable people can disagree.\n",
          "createdAt": "2023-06-17T03:45:00Z",
          "updatedAt": "2023-06-17T03:45:00Z"
        },
        {
          "author": "peacekeeper",
          "authorAssociation": "NONE",
          "body": "@Sakurann Sorry for my choice of words, I didn't mean it in a negative way :) I actually like this direction.. On the technical level, this specification and PR feel right to keep the VC data model and JWT data model separate, in order to avoid things like a \"vc\" claim and unclear transformation rules that we have seen in the past.\r\n\r\nOn the marketing and communication level however this needs improvement I think. How is anyone supposed to understand the difference between a \"VC\", a \"JWT\", a \"JWT VC\", and \"VC-JWT\"? If a \"JWT VC\" is a \"VC\", then what do you call what the W3C VC WG is defining? Does this mean there will be \"VCDM-based VCs\" and \"non-VCDM-based VCs\"?",
          "createdAt": "2023-06-17T17:10:55Z",
          "updatedAt": "2023-06-17T17:10:55Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@Sakurann Do you want to close this PR since we merged PR #131 ? ",
          "createdAt": "2023-06-21T13:52:32Z",
          "updatedAt": "2023-06-21T13:52:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Xtdfk",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T08:56:14Z",
          "updatedAt": "2023-06-09T08:56:15Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "How about just `JWT based Verifiable Credentials` I think the fact that they are selectively disclosable can be addressed right in the intro and abstract",
              "createdAt": "2023-06-09T08:56:14Z",
              "updatedAt": "2023-06-09T08:56:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XteJs",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T08:57:48Z",
          "updatedAt": "2023-06-09T08:57:48Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nrules to express Verifiable Credentials as a JWT [@!RFC7519] or an SD-JWT [@!I-D.ietf-oauth-selective-disclosure-jwt]\r\n```\r\n\r\nproposed simplification",
              "createdAt": "2023-06-09T08:57:48Z",
              "updatedAt": "2023-06-09T08:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XtedX",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T08:58:36Z",
          "updatedAt": "2023-06-09T08:58:36Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nThis specification defines Verifiable Credentials based on the JWT and SD-JWT.\r\n```",
              "createdAt": "2023-06-09T08:58:36Z",
              "updatedAt": "2023-06-09T08:58:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XyRGN",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T17:51:43Z",
          "updatedAt": "2023-06-09T17:51:43Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "yeah, title.. `JWT based` and `with a JWT Claim set` is different in my mind because `JWT != SD-JWT`, and the most important thing we are trying to convey is that the payload is vanilla JSON and I found `with a JWT Claim set` to be a good compromise because JSON-LD payload does not use JWT claims while JSON-LD is still JSON.",
              "createdAt": "2023-06-09T17:51:43Z",
              "updatedAt": "2023-06-09T17:51:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XyRzS",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T17:53:02Z",
          "updatedAt": "2023-06-09T17:53:02Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I think we need to highlight that we are proposing two different ways to protect JSON payload (JWT claim set) with and without SD, and the current text is more explicit about it.",
              "createdAt": "2023-06-09T17:53:02Z",
              "updatedAt": "2023-06-09T17:53:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XySAN",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T17:53:24Z",
          "updatedAt": "2023-06-09T17:53:25Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "same comment as above two comments..",
              "createdAt": "2023-06-09T17:53:24Z",
              "updatedAt": "2023-06-09T17:53:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Xzg4f",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T22:21:02Z",
          "updatedAt": "2023-06-09T22:21:03Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "I'd argue that a shorter more succinct title like `JWT and SD-JWT Verifiable Credentials` would be better. Any subtleties could be added/addressed in the abstract or intro. If needed. But the title doesn't seem like the right place to be differentiating a JWT claim set (which is JSON) or JSON or JSON-LD or whatever. ",
              "createdAt": "2023-06-09T22:21:03Z",
              "updatedAt": "2023-06-09T22:21:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5XzhkZ",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T22:26:04Z",
          "updatedAt": "2023-06-09T22:26:04Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "And yes, I know there's a recent [title change committed to SD-JWT](https://github.com/oauth-wg/oauth-selective-disclosure-jwt/commit/332ded8faf20d528c5c05e04cebed28aab1a0d33) but I don't love it.  ",
              "createdAt": "2023-06-09T22:26:04Z",
              "updatedAt": "2023-06-09T22:26:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Xzhz8",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-09T22:27:59Z",
          "updatedAt": "2023-06-09T22:27:59Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I think the suggested text from @tplooker conveys it too.  ",
              "createdAt": "2023-06-09T22:27:59Z",
              "updatedAt": "2023-06-09T22:27:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5X95e1",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-12T21:21:52Z",
          "updatedAt": "2023-06-12T21:21:52Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "> I'd argue that a shorter more succinct title like JWT and SD-JWT Verifiable Credentials would be better. Any subtleties could be added/addressed in the abstract or intro. If needed. But the title doesn't seem like the right place to be differentiating a JWT claim set (which is JSON) or JSON or JSON-LD or whatever.\r\n\r\nI'm in support of this.",
              "createdAt": "2023-06-12T21:21:52Z",
              "updatedAt": "2023-06-12T21:21:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5X_mG1",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T05:41:49Z",
          "updatedAt": "2023-06-13T05:41:49Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\ntitle = \"JWT and SD-JWT Verifiable Credentials\"\r\n```",
              "createdAt": "2023-06-13T05:41:49Z",
              "updatedAt": "2023-06-13T05:41:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5X_mkD",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T05:43:34Z",
          "updatedAt": "2023-06-13T05:43:35Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "as you said yourself, Brian, `a JWS with a JWT claim set is a JWT`, which is why I am ok calling it a JWT VC, but at least in the intro I think we agreed to make it clear that `a JWS with a JWT claim set is a JWT`",
              "createdAt": "2023-06-13T05:43:34Z",
              "updatedAt": "2023-06-13T05:43:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YAEaZ",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T07:11:34Z",
          "updatedAt": "2023-06-13T07:11:35Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I think Tobias' proposal is just fine.",
              "createdAt": "2023-06-13T07:11:34Z",
              "updatedAt": "2023-06-13T07:11:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YAEzR",
          "commit": {
            "abbreviatedOid": "8acb37d"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T07:12:23Z",
          "updatedAt": "2023-06-13T07:12:23Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Tobias' proposal, but remove `the`.\r\n```suggestion\r\nThis specification defines Verifiable Credentials based on JWT and SD-JWT.\r\n```",
              "createdAt": "2023-06-13T07:12:23Z",
              "updatedAt": "2023-06-13T07:12:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YAFLx",
          "commit": {
            "abbreviatedOid": "0b42e6c"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-13T07:13:19Z",
          "updatedAt": "2023-06-13T07:24:03Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "Reversing the order makes it a bit more clear IMO. I propose introducing the short terms here, but can live without.\r\n```suggestion\r\ntitle = \"Verifiable Credentials using JWT and SD-JWT (JWT VC, SD-JWT VC)\"\r\n```",
              "createdAt": "2023-06-13T07:13:19Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\n  - Data model and media types for Verifiable Credentials based on JWTs and SD-JWTs.\r\n```",
              "createdAt": "2023-06-13T07:14:26Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 172,
              "body": "```suggestion\r\nOut of the claims used in SD-JWT VC defined in (#registered-jwt-claims),\r\nonly the `sub` claim MAY be selectively disclosable. Other claims not defined in (#registered-jwt-claims) MAY be selectively disclosable.\r\n```",
              "createdAt": "2023-06-13T07:18:31Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 186,
              "body": "```suggestion\r\nThe recipient of the JWT VC MUST process and verify a JWT or SD-JWT VC as\r\n```",
              "createdAt": "2023-06-13T07:19:05Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 195,
              "body": "```suggestion\r\n 1. REQUIRED. To process and verify a JWT VC, follow the stepd defined in\r\nSection 7.2 of [@!RFC7519]. To process and verify a SD-JWT VC, follow the steps\r\ndefined in Section 6 of [@!I-D.ietf-oauth-selective-disclosure-jwt]. For the\r\nverification, the `iss` claim in the payload MAY be used to retrieve the public\r\n```",
              "createdAt": "2023-06-13T07:19:22Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 202,
              "body": "```suggestion\r\n(#jwt-issuer-metadata)) of the JWT VC or SD-JWT VC Issuer. A Verifier MAY use alternative\r\nmethods to obtain the public key to verify the signature of the JWT VC or SD-JWT VC.\r\n 1. OPTIONAL. If `status` is present in the verified payload,\r\n```",
              "createdAt": "2023-06-13T07:19:44Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 220,
              "body": "```suggestion\r\nA presentation of a JWT VC or an SD-JWT VC MAY contain a Holder Binding JWT defined in\r\nSection 5.4.1 of [@!I-D.ietf-oauth-selective-disclosure-jwt].\r\n```",
              "createdAt": "2023-06-13T07:20:06Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            },
            {
              "originalPosition": 260,
              "body": "```suggestion\r\nIf the presentation includes a Holder Binding JWT, the\r\nfollowing claims are used within the Holder Binding JWT in addition to those defined in\r\nSection 5.4.1 of [@!I-D.ietf-oauth-selective-disclosure-jwt]:\r\n```",
              "createdAt": "2023-06-13T07:22:34Z",
              "updatedAt": "2023-06-13T07:24:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YB9tA",
          "commit": {
            "abbreviatedOid": "be77533"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "I like the direction. I think we still need to find a good way to differentiate between the credential format in general (I prefer JWT VC) and the terms we use when describing details on requirements and processing for the variations, perhaps vc-jwt and vc-sd-jwt (based on the different mediatypes). \r\nI also added some modifications to unchanged parts as I cannot propose changes there in a PR. Please revert if you don't like the suggestions. ",
          "createdAt": "2023-06-13T11:20:50Z",
          "updatedAt": "2023-06-13T11:42:13Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "I would opt for a simpler name. \r\n```suggestion\r\ntitle = \"JWT Verifiable Credentials\"\r\n```",
              "createdAt": "2023-06-13T11:20:50Z",
              "updatedAt": "2023-06-13T11:42:13Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nThis section defines JOSE header parameters for the JWT VC\r\n```",
              "createdAt": "2023-06-13T11:34:13Z",
              "updatedAt": "2023-06-13T11:42:13Z"
            },
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nand SD-JWT VCs.\r\n```",
              "createdAt": "2023-06-13T11:34:25Z",
              "updatedAt": "2023-06-13T11:42:13Z"
            },
            {
              "originalPosition": 227,
              "body": "```suggestion\r\nSection 7.2 of [@!RFC7519]. If the VC is a SD-JWT VC, follow the steps\r\n```",
              "createdAt": "2023-06-13T11:36:05Z",
              "updatedAt": "2023-06-13T11:42:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YF-sW",
          "commit": {
            "abbreviatedOid": "ecc9afb"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T19:58:45Z",
          "updatedAt": "2023-06-13T19:58:46Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\ntitle = \"JWT-based Verifiable Credentials (JWT VC)\"\r\n```",
              "createdAt": "2023-06-13T19:58:45Z",
              "updatedAt": "2023-06-13T20:01:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YGAni",
          "commit": {
            "abbreviatedOid": "1fc4b8c"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T20:04:23Z",
          "updatedAt": "2023-06-13T20:04:23Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nrules to express Verifiable Credentials based on JWT [@!RFC7519] or SD-JWT [@!I-D.ietf-oauth-selective-disclosure-jwt]\r\n```",
              "createdAt": "2023-06-13T20:04:23Z",
              "updatedAt": "2023-06-13T20:05:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YGByK",
          "commit": {
            "abbreviatedOid": "e420952"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T20:08:07Z",
          "updatedAt": "2023-06-13T20:08:08Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nand the SD-JWT VC.\r\n```",
              "createdAt": "2023-06-13T20:08:07Z",
              "updatedAt": "2023-06-13T20:08:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YGCDv",
          "commit": {
            "abbreviatedOid": "e420952"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T20:09:01Z",
          "updatedAt": "2023-06-13T20:09:01Z",
          "comments": [
            {
              "originalPosition": 186,
              "body": "```suggestion\r\nThe recipient of the JWT VC MUST process and verify a JWT VC or an SD-JWT VC as\r\n```",
              "createdAt": "2023-06-13T20:09:01Z",
              "updatedAt": "2023-06-13T20:09:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YJtzW",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T09:25:39Z",
          "updatedAt": "2023-06-14T09:25:39Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "Should we consider to use the same `typ` header value for both variants, JWT and SD-JWT? I came across this when I was thinking about the OID4VC credential format profile for JWT-based VCs. A single `typ` would also result in a single format identifier in the presentation request, which might everyone's live easier. The only reason to distinguish would be that a dedicated format identifier for sd-jwt would allow the processor to directly decide whether selective disclosure is allowed in the presentation definition. ",
              "createdAt": "2023-06-14T09:25:39Z",
              "updatedAt": "2023-06-14T09:25:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YOSeM",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T19:16:04Z",
          "updatedAt": "2023-06-14T19:16:04Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "I suggest to remove this paragraph. It is not required in this draft.",
              "createdAt": "2023-06-14T19:16:04Z",
              "updatedAt": "2023-06-14T19:16:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YOb4l",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T19:44:50Z",
          "updatedAt": "2023-06-14T19:44:50Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "I'm fine starting with distinct \"typ\" media types, as it provides recipients an indication of whether the VC is a plain JWT or SD-JWT.  We could later decide to make that distinction using \"cty\" if we decide to go in that direction.",
              "createdAt": "2023-06-14T19:44:50Z",
              "updatedAt": "2023-06-14T19:44:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YOdaD",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "This is taking us in good directions.",
          "createdAt": "2023-06-14T19:49:44Z",
          "updatedAt": "2023-06-14T19:49:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YOmk-",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T20:13:47Z",
          "updatedAt": "2023-06-14T20:13:47Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Agreed I think we can remove this.",
              "createdAt": "2023-06-14T20:13:47Z",
              "updatedAt": "2023-06-14T20:13:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YOn14",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Minor nits on review but in general massive +1 to the direction this takes the draft in",
          "createdAt": "2023-06-14T20:17:46Z",
          "updatedAt": "2023-06-14T20:17:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YPQ5e",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T22:23:32Z",
          "updatedAt": "2023-06-14T22:23:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nipr = \"trust200902\"\r\n```",
              "createdAt": "2023-06-14T22:23:32Z",
              "updatedAt": "2023-06-14T22:23:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YPT5O",
          "commit": {
            "abbreviatedOid": "be77533"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T22:38:33Z",
          "updatedAt": "2023-06-14T22:38:34Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "i am not a fan of `if a VC is an SD-JWT VC`. SD-JWT VC is a VC.",
              "createdAt": "2023-06-14T22:38:34Z",
              "updatedAt": "2023-06-14T22:38:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YPUsX",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T22:43:00Z",
          "updatedAt": "2023-06-14T22:43:00Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "it's not just the presentation request that needs to differentiate whether there is a selective disclosure or not. how would issuer, verifier, wallets indicate that they support only sd-jwt vc in their metadata? processing of sd-jwt vc and jwt vc are different enough to have separate `typ` values.\r\n\r\n@danielfett @bc-pi what do you think?",
              "createdAt": "2023-06-14T22:43:00Z",
              "updatedAt": "2023-06-14T22:43:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YPVQR",
          "commit": {
            "abbreviatedOid": "4d24052"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T22:46:02Z",
          "updatedAt": "2023-06-14T22:46:02Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-06-14T22:46:02Z",
              "updatedAt": "2023-06-14T22:46:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YPVTN",
          "commit": {
            "abbreviatedOid": "4d24052"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T22:46:16Z",
          "updatedAt": "2023-06-14T22:46:16Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-06-14T22:46:16Z",
              "updatedAt": "2023-06-14T22:46:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YPVcV",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-14T22:47:11Z",
          "updatedAt": "2023-06-14T22:47:11Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "removed",
              "createdAt": "2023-06-14T22:47:11Z",
              "updatedAt": "2023-06-14T22:47:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YPW1Y",
          "commit": {
            "abbreviatedOid": "5381a5a"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T22:54:01Z",
          "updatedAt": "2023-06-14T22:54:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YPYoO",
          "commit": {
            "abbreviatedOid": "5e5124c"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Excellent step in the right direction.  Enough of an improvement I would say to merge then we can build onnit",
          "createdAt": "2023-06-14T23:04:11Z",
          "updatedAt": "2023-06-14T23:04:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YQ0E2",
          "commit": {
            "abbreviatedOid": "5e5124c"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T06:44:10Z",
          "updatedAt": "2023-06-15T06:44:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YQ0kA",
          "commit": {
            "abbreviatedOid": "be77533"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T06:45:41Z",
          "updatedAt": "2023-06-15T06:45:42Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "but not every VC is a SD-JWT",
              "createdAt": "2023-06-15T06:45:41Z",
              "updatedAt": "2023-06-15T06:45:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YQ1Nt",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T06:47:39Z",
          "updatedAt": "2023-06-15T06:47:39Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "create an issue",
              "createdAt": "2023-06-15T06:47:39Z",
              "updatedAt": "2023-06-15T06:47:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YVub1",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T17:29:16Z",
          "updatedAt": "2023-06-15T17:29:16Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "I can't help but wonder if it'd make sense to have the spec be only about SD-JWT VCs and treat the plain JWT VC as just a special case of an SD-JWT with no selectively disclosable claims. ",
              "createdAt": "2023-06-15T17:29:16Z",
              "updatedAt": "2023-06-15T17:29:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YV7FM",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:05:58Z",
          "updatedAt": "2023-06-15T18:05:58Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "that's what @tlodderstedt has suggested, too. would that change the structure in this PR quite a lot? since the text will be all about sd-jwt vc and there will be one section saying that to do sd-jwt vc, one only need to not use `_sd` and no disclosures?",
              "createdAt": "2023-06-15T18:05:58Z",
              "updatedAt": "2023-06-15T18:05:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YV7RV",
          "commit": {
            "abbreviatedOid": "5e5124c"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:06:32Z",
          "updatedAt": "2023-06-15T18:06:32Z",
          "comments": [
            {
              "originalPosition": 231,
              "body": "```suggestion\r\nThe recipient of the JWT-based VC MUST process and verify a JWT VC or an SD-JWT VC as\r\n```",
              "createdAt": "2023-06-15T18:06:32Z",
              "updatedAt": "2023-06-15T18:06:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YV9Mq",
          "commit": {
            "abbreviatedOid": "5e5124c"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:12:29Z",
          "updatedAt": "2023-06-15T18:12:30Z",
          "comments": [
            {
              "originalPosition": 382,
              "body": "```suggestion\r\nWe would like to thank Alen Horvat, Andres Uribe, Brian Campbell, Christian Bormann,\r\n```\r\nis this poor etiquette?  \ud83e\udd23 ",
              "createdAt": "2023-06-15T18:12:29Z",
              "updatedAt": "2023-06-15T18:12:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YWB_a",
          "commit": {
            "abbreviatedOid": "5e5124c"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:26:13Z",
          "updatedAt": "2023-06-15T18:26:13Z",
          "comments": [
            {
              "originalPosition": 237,
              "body": "```suggestion\r\n 1. REQUIRED. To process and verify a JWT VC, follow the steps defined in\r\n```",
              "createdAt": "2023-06-15T18:26:13Z",
              "updatedAt": "2023-06-15T18:26:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YWMVC",
          "commit": {
            "abbreviatedOid": "63e121f"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T18:57:26Z",
          "updatedAt": "2023-06-15T18:57:27Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "Yeah, I think it would change this PR quite a lot. Or a new one... Sorry!* I'm honestly not 100% sure about the idea but my intuition is that it would be a cleaner/better/simpler approach. \r\n\r\n\\* I did mention \"Isn't a JWT VC just a SD-JWT VC without any selectively disclosable claims... ?\" last week in some slack conversation though so this shouldn't be a total surprise. ",
              "createdAt": "2023-06-15T18:57:27Z",
              "updatedAt": "2023-06-15T18:57:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YX4v7",
          "commit": {
            "abbreviatedOid": "5e5124c"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T03:15:33Z",
          "updatedAt": "2023-06-16T03:15:33Z",
          "comments": [
            {
              "originalPosition": 382,
              "body": "nah, perfect.",
              "createdAt": "2023-06-16T03:15:33Z",
              "updatedAt": "2023-06-16T03:15:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yg2NW",
          "commit": {
            "abbreviatedOid": "be77533"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T08:05:52Z",
          "updatedAt": "2023-06-18T08:05:53Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "Actually every VC (JSON or JSON-LD) can be protected with SD-JWT\r\nsame as every JSON or JSON-LD can be protected with JWS",
              "createdAt": "2023-06-18T08:05:53Z",
              "updatedAt": "2023-06-18T08:05:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yg2jF",
          "commit": {
            "abbreviatedOid": "d852bcc"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T08:15:03Z",
          "updatedAt": "2023-06-18T08:15:04Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Note that JWT sets all claims as optional.",
              "createdAt": "2023-06-18T08:15:03Z",
              "updatedAt": "2023-06-18T08:15:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yg2vZ",
          "commit": {
            "abbreviatedOid": "d852bcc"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T08:17:57Z",
          "updatedAt": "2023-06-18T08:17:57Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Should this be improved:\r\n\r\nThis specification defines how Verifiable Credentials can be expressed using JWT claim set and protected with JWS or SD-JWT?\r\n\r\n(\r\nnote that if convergence between JWS and SD-JWT is achieved it could be even something like:\r\n\r\nThis specification defines how Verifiable Credentials can be expressed using JWT claim set and protected using JWS. The specification also defines how Selective Disclosure (SD-JWT) can be applied.\r\n)",
              "createdAt": "2023-06-18T08:17:57Z",
              "updatedAt": "2023-06-18T08:17:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yg3Rh",
          "commit": {
            "abbreviatedOid": "d852bcc"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T08:27:49Z",
          "updatedAt": "2023-06-18T08:27:50Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Should we acknowledge that JWT limits the JWS to compact serialised and that SD-JWT supports both serialisations?",
              "createdAt": "2023-06-18T08:27:49Z",
              "updatedAt": "2023-06-18T08:27:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 122,
      "id": "PR_kwDOJbVClc5S4Gj8",
      "title": "update text on status provider",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/122",
      "state": "MERGED",
      "author": "c2bo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Status Provider should be either 4th party or issuer (not verifier).",
      "createdAt": "2023-06-13T11:43:35Z",
      "updatedAt": "2023-06-21T13:47:30Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "588ea557ea5861784bbaf7051eddefdeb6d0751f",
      "headRepository": "c2bo/draft-terbu-sd-jwt-vc",
      "headRefName": "status-provider",
      "headRefOid": "41a80cf7c87703d8b5dd5b0f43c6f9e9703df566",
      "closedAt": "2023-06-21T13:47:29Z",
      "mergedAt": "2023-06-21T13:47:29Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "85d396fe5e5a690da72fe8b3109af58b56399d43"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging this since multiple approvals.",
          "createdAt": "2023-06-21T13:47:26Z",
          "updatedAt": "2023-06-21T13:47:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5YCnYW",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T12:44:01Z",
          "updatedAt": "2023-06-13T12:44:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YC2KY",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T13:11:30Z",
          "updatedAt": "2023-06-13T13:11:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YHub5",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T03:44:18Z",
          "updatedAt": "2023-06-14T03:44:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YPP8F",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T22:19:08Z",
          "updatedAt": "2023-06-14T22:19:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yfis6",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T03:59:31Z",
          "updatedAt": "2023-06-17T03:59:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Ym7sJ",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-19T17:13:15Z",
          "updatedAt": "2023-06-19T17:13:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y2568",
          "commit": {
            "abbreviatedOid": "41a80cf"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, thank you!",
          "createdAt": "2023-06-21T13:46:59Z",
          "updatedAt": "2023-06-21T13:46:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "PR_kwDOJbVClc5S4Kvo",
      "title": "remove URI requirement on sub claim",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/123",
      "state": "MERGED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I don't think there is a need to constraint the `sub` claim value to be a URI. ",
      "createdAt": "2023-06-13T11:55:35Z",
      "updatedAt": "2023-06-17T04:37:48Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "588ea557ea5861784bbaf7051eddefdeb6d0751f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "subasuri",
      "headRefOid": "264a080444d82a2dd856d4b8d1bbc97026bd9e8d",
      "closedAt": "2023-06-17T04:37:48Z",
      "mergedAt": "2023-06-17T04:37:48Z",
      "mergedBy": "Sakurann",
      "mergeCommit": {
        "oid": "9119083958ea6f636927df22c9a5769400558f3f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5YF7Pd",
          "commit": {
            "abbreviatedOid": "264a080"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T19:48:26Z",
          "updatedAt": "2023-06-13T19:48:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YPPyi",
          "commit": {
            "abbreviatedOid": "264a080"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-14T22:18:30Z",
          "updatedAt": "2023-06-14T22:18:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YaQhP",
          "commit": {
            "abbreviatedOid": "264a080"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:41:02Z",
          "updatedAt": "2023-06-16T11:41:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yb7_F",
          "commit": {
            "abbreviatedOid": "264a080"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T15:02:11Z",
          "updatedAt": "2023-06-16T15:02:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YfizO",
          "commit": {
            "abbreviatedOid": "264a080"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T04:03:21Z",
          "updatedAt": "2023-06-17T04:03:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YfkAT",
          "commit": {
            "abbreviatedOid": "264a080"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T04:27:09Z",
          "updatedAt": "2023-06-17T04:27:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 124,
      "id": "PR_kwDOJbVClc5S4MFq",
      "title": "aligned draft name with IETF rules",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/124",
      "state": "MERGED",
      "author": "tlodderstedt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-13T11:59:08Z",
      "updatedAt": "2023-06-22T09:22:06Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "85d396fe5e5a690da72fe8b3109af58b56399d43",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "draft-name",
      "headRefOid": "4114bf665dd8a36b5eeef73655d8c820ebec06f5",
      "closedAt": "2023-06-22T09:22:05Z",
      "mergedAt": "2023-06-22T09:22:05Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "5a00d34f8694a9be39f84793bb0e02919080462b"
      },
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging this since this is an improvement and PR #120 might not be merged as is.",
          "createdAt": "2023-06-21T13:54:43Z",
          "updatedAt": "2023-06-21T13:54:43Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@tlodderstedt can you pls resolve merge conflicts, then we can merge this PR.",
          "createdAt": "2023-06-21T15:39:49Z",
          "updatedAt": "2023-06-21T15:39:49Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging PR since a lot of approvals.",
          "createdAt": "2023-06-22T09:22:05Z",
          "updatedAt": "2023-06-22T09:22:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5YF7EO",
          "commit": {
            "abbreviatedOid": "9cb4eed"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T19:47:53Z",
          "updatedAt": "2023-06-13T19:47:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YF7Kc",
          "commit": {
            "abbreviatedOid": "9cb4eed"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-13T19:48:11Z",
          "updatedAt": "2023-06-13T19:48:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YPYgk",
          "commit": {
            "abbreviatedOid": "9cb4eed"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "overtaken by PR #120, which also renamed the draft. let's close this one.",
          "createdAt": "2023-06-14T23:03:36Z",
          "updatedAt": "2023-06-14T23:03:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yfi0v",
          "commit": {
            "abbreviatedOid": "9cb4eed"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T04:03:52Z",
          "updatedAt": "2023-06-17T04:03:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y2-Zw",
          "commit": {
            "abbreviatedOid": "9cb4eed"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm, since we have merged PR #131 and might not merge PR #120, we should merge this.",
          "createdAt": "2023-06-21T13:54:00Z",
          "updatedAt": "2023-06-21T13:54:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y4E9W",
          "commit": {
            "abbreviatedOid": "9cb4eed"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-21T15:36:53Z",
          "updatedAt": "2023-06-21T15:36:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 126,
      "id": "PR_kwDOJbVClc5S54Ji",
      "title": "Change Holder Binding to Key Binding, adapt examples",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/126",
      "state": "MERGED",
      "author": "danielfett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Holder Binding is now more appropriately called Key Binding in SD-JWT. This PR makes the necessary changes in this specification.",
      "createdAt": "2023-06-13T15:52:18Z",
      "updatedAt": "2023-06-22T09:24:45Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "5a00d34f8694a9be39f84793bb0e02919080462b",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "danielfett/fix-examples",
      "headRefOid": "06e7a0b6793463c5c24244ab99e47f61bf168d81",
      "closedAt": "2023-06-22T09:24:44Z",
      "mergedAt": "2023-06-22T09:24:44Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "80ba41ef10e659ffd84bf06f6a3edbf023ce1dc0"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Would it be intresting to add a holder binding section that references to the options of\r\n- claim based binding with PII (name, birthday etc)\r\n- claim based binding with biometrics (porttrait)\r\n- key binding (referencing to this part here)\r\n?",
          "createdAt": "2023-06-16T11:38:31Z",
          "updatedAt": "2023-06-16T11:38:31Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "my current thinking is that key binding, biometrics based binding and claim based binding solve very different problems, so I would not mix them.",
          "createdAt": "2023-06-16T19:56:24Z",
          "updatedAt": "2023-06-16T19:56:24Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "@danielfett can you resolve merge conflicts, then pls merge since we have multiple approvals.",
          "createdAt": "2023-06-21T13:57:23Z",
          "updatedAt": "2023-06-21T13:57:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5YHukR",
          "commit": {
            "abbreviatedOid": "b1f0b4a"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "`cryptographic key binding` -> `key binding`?",
          "createdAt": "2023-06-14T03:45:05Z",
          "updatedAt": "2023-06-14T03:45:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YaOcN",
          "commit": {
            "abbreviatedOid": "b1f0b4a"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-16T11:36:03Z",
          "updatedAt": "2023-06-16T11:36:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yfi3X",
          "commit": {
            "abbreviatedOid": "b1f0b4a"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T04:04:07Z",
          "updatedAt": "2023-06-17T04:04:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Ym-hV",
          "commit": {
            "abbreviatedOid": "b1f0b4a"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-19T17:26:29Z",
          "updatedAt": "2023-06-19T17:26:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y3AFv",
          "commit": {
            "abbreviatedOid": "b1f0b4a"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the updates!",
          "createdAt": "2023-06-21T13:56:43Z",
          "updatedAt": "2023-06-21T13:56:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 131,
      "id": "PR_kwDOJbVClc5TJ8NG",
      "title": "first pass at positioning jwt vc as an sd-jwt vc without selectively disclosable claims",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/131",
      "state": "MERGED",
      "author": "Sakurann",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "alternative to #120 based on @bc-pi 's comment \"I can't help but wonder if it'd make sense to have the spec be only about SD-JWT VCs and treat the plain JWT VC as just a special case of an SD-JWT with no selectively disclosable claims.\"\r\n\r\nno changes to the basic structure. simple clarifications what to do when there are no selectively disclosable claims ie no `_sd` claim and no Disclosures. Might need some more details but this is how it might look like.\r\n\r\n(cc @OR13, @mprorock)\r\n\r\n[linked to rendered preview](https://vcstuff.github.io/draft-terbu-sd-jwt-vc/jwt-vc-2/draft-terbu-sd-jwt-vc.html\r\n)",
      "createdAt": "2023-06-16T05:46:35Z",
      "updatedAt": "2023-06-21T12:53:44Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "9119083958ea6f636927df22c9a5769400558f3f",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "jwt-vc-2",
      "headRefOid": "8066e23e44786c29e43c853d3c3506803c4ce872",
      "closedAt": "2023-06-21T12:53:44Z",
      "mergedAt": "2023-06-21T12:53:44Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "caa0482b4a3e9cf92c0c3c8bbc9a65fc1bb409b8"
      },
      "comments": [
        {
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Generally, I really like this approach!\r\nSome examples could be useful for key binding with JWT (no disclosures)",
          "createdAt": "2023-06-16T11:42:35Z",
          "updatedAt": "2023-06-16T11:42:35Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "I'd expect the typ for both to have +jwt if that were really the case.\n\nThere is another draft up for multiple suffixes.\n\nhttps://www.ietf.org/archive/id/draft-ietf-mediaman-suffixes-04.html\n\nIs it simple enough to support now?",
          "createdAt": "2023-06-16T12:34:55Z",
          "updatedAt": "2023-06-16T12:34:55Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "should this be titled `draft-terbu-oauth-vc-jwt` ?\r\nI think this should be changed as well as the title before merging to make sure we are calling out that this covering SD-JWTs and JWTs",
          "createdAt": "2023-06-16T19:18:56Z",
          "updatedAt": "2023-06-16T19:27:04Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes. Will make a change once we have a decision whether PR #120 or this one is the way to go\u2026",
          "createdAt": "2023-06-16T19:24:49Z",
          "updatedAt": "2023-06-16T19:24:49Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "What is the position of this specification?\r\nFrom my understanding\r\n- it defines a VC with JWT claims\r\n- it defines a profile for the JWT claims\r\n- it defines a profile for securing the VC\r\n\r\nThere's an open discussion between the sd-jwt and JWS protection. Relevant discussion has been started https://github.com/oauth-wg/oauth-selective-disclosure-jwt/issues/291 - sd-jwt introduces an encoding that becomes incompatible with JWS in the limit where selective disclosure is not used. In other words, it introduces a first-order phase transition. Let's see how this topic resolves.\r\n\r\nIMO, the data model and securing mechanisms should support both sd-jwt and JWS.",
          "createdAt": "2023-06-18T08:00:14Z",
          "updatedAt": "2023-06-18T08:00:14Z"
        },
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I do like this approach, but I am a bit concerned that even in the 'no disclosures' case, we'll have the trailing tilde in the issuance and presentation (when no KB is present). A JWT is *not* a special case of an SD-JWT for this reason.",
          "createdAt": "2023-06-19T17:11:49Z",
          "updatedAt": "2023-06-19T17:11:49Z"
        },
        {
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "body": "> I do like this approach, but I am a bit concerned that even in the 'no disclosures' case, we'll have the trailing tilde in the issuance and presentation (when no KB is present). A JWT is _not_ a special case of an SD-JWT for this reason.\r\n\r\nI agree with the concern.",
          "createdAt": "2023-06-19T17:23:08Z",
          "updatedAt": "2023-06-19T17:23:08Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I do like this approach, but I am a bit concerned that even in the 'no disclosures' case, we'll have the trailing tilde in the issuance and presentation (when no KB is present). A JWT is _not_ a special case of an SD-JWT for this reason.\r\n\r\nIMHO keeping the trailing tilde is preferable as it keeps the model consistent. ",
          "createdAt": "2023-06-19T18:56:08Z",
          "updatedAt": "2023-06-19T18:56:08Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "from what I am sensing, there seems to be a lot of preference towards the approach in this PR over #120, partially because it is simpler and gives one credential format and not two (consolidation, yay!), with one major discussion point being a ~ after a JWT VC when it is issued.\r\n\r\na bit of the context... this trailing ~ is the result of the decision being taken in SD-JWT spec to better align the issuance and presentation formats, (https://github.com/oauth-wg/oauth-selective-disclosure-jwt/pull/293 does it, and it has not been merged yet). One option is to keep issuance and presentation formats separate in SD-JWT (as-is) so that there is no ~ when (SD-)JWT VC is issued. but that is not that clean from a pure SD-JWT processing perspective is I think the opinion of its authors (@danielfett, @bc-pi).\r\n\r\nso the question is really what to do with a trailing ~ when there is no SD in SD-JWT based VC.",
          "createdAt": "2023-06-20T04:16:18Z",
          "updatedAt": "2023-06-20T04:16:18Z"
        },
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "should be good to merge once @awoie takes a look and approves",
          "createdAt": "2023-06-20T22:42:35Z",
          "updatedAt": "2023-06-20T22:42:35Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm ok with this direction. I personally don't like the trailing tilde but we can fix that in another PR. I'll open an issue in the repository.",
          "createdAt": "2023-06-21T12:51:46Z",
          "updatedAt": "2023-06-21T12:51:46Z"
        },
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging this PR since a lot of approvals and no objections.",
          "createdAt": "2023-06-21T12:53:33Z",
          "updatedAt": "2023-06-21T12:53:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5YYYos",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-16T06:18:02Z",
          "updatedAt": "2023-06-16T06:49:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "why do we even need to change this?",
              "createdAt": "2023-06-16T06:18:02Z",
              "updatedAt": "2023-06-16T06:49:55Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\ntheir semantics. SD-JWT can also be used when there are no selectively disclosable claims.\r\n```",
              "createdAt": "2023-06-16T06:18:46Z",
              "updatedAt": "2023-06-16T06:49:55Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\ncan be expressed using SD-JWT with and without selective disclosure.\r\n```",
              "createdAt": "2023-06-16T06:19:27Z",
              "updatedAt": "2023-06-16T06:49:55Z"
            },
            {
              "originalPosition": 71,
              "body": "out of curiosity - the change to align issuance and presentation format would lead to the fact that non sd VCs would be JWTs + a `~`, right? ",
              "createdAt": "2023-06-16T06:21:14Z",
              "updatedAt": "2023-06-16T06:49:55Z"
            },
            {
              "originalPosition": 36,
              "body": "suggest to reorganize this paragraph \r\nMove 2nd and 3rd sentence to previous paragraph forward (all related to sd and non sd). Modify 3rd sentence.\r\n\r\n\"This specification therefore defines how Verifiable Credentials\r\ncan be expressed using SD-JWT covering both options, with and without selective disclosure.\"\r\n\r\n1st sentence fits better with the last paragraph as this is about the content. Suggest to add the following sentence between this sentence and the rest: \r\n\"SD-JWT VC defines a content model based on JWT claims.\"",
              "createdAt": "2023-06-16T06:27:16Z",
              "updatedAt": "2023-06-16T06:49:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YZ-IG",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T10:46:32Z",
          "updatedAt": "2023-06-16T10:46:33Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "while this might be technically correct, I agree it might be confusing to first time readers. Either reverse to:\r\n\"based on the SD-JWT (Selective Disclosure for JWT and JWS with JSON payloads) format\"\r\nor leave it as is, as the full title is gehind the reference",
              "createdAt": "2023-06-16T10:46:32Z",
              "updatedAt": "2023-06-16T10:46:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YaAzh",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T10:54:38Z",
          "updatedAt": "2023-06-16T10:54:39Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nIn that case, the SD-JWT VC MUST NOT contain the `_sd` claim in the JWT body and\r\nMUST NOT have any Disclosures.\r\n```",
              "createdAt": "2023-06-16T10:54:38Z",
              "updatedAt": "2023-06-16T10:54:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YaBMr",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T10:55:54Z",
          "updatedAt": "2023-06-16T10:55:54Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I guess so, also key binding would be very easy as it is still being appended after ~ in presentation?",
              "createdAt": "2023-06-16T10:55:54Z",
              "updatedAt": "2023-06-16T10:55:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YaBs7",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T10:57:25Z",
          "updatedAt": "2023-06-16T10:57:26Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nIf there are no selectively disclosable claims, there is no need to process the\r\n`_sd` claim nor any Disclosures.\r\n```",
              "createdAt": "2023-06-16T10:57:26Z",
              "updatedAt": "2023-06-16T10:57:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YaBzs",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T10:57:46Z",
          "updatedAt": "2023-06-16T10:57:46Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nWhen there are no selectively disclosable claims, a presentation of SD-JWT VC\r\ndoes not contain any Disclosures.\r\n```",
              "createdAt": "2023-06-16T10:57:46Z",
              "updatedAt": "2023-06-16T10:57:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YaCq6",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:00:27Z",
          "updatedAt": "2023-06-16T11:00:27Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I actually like this section as it gives rationale for the issuer-holder-verifier model",
              "createdAt": "2023-06-16T11:00:27Z",
              "updatedAt": "2023-06-16T11:00:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YaDKY",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T11:01:55Z",
          "updatedAt": "2023-06-16T11:01:55Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I agree, when the section above is removed, the paragraphs don't really fit together nicely",
              "createdAt": "2023-06-16T11:01:55Z",
              "updatedAt": "2023-06-16T11:01:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YbbZi",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T14:04:10Z",
          "updatedAt": "2023-06-16T14:04:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nrules to express Verifiable Credentials with JSON payloads based on the Selective Disclosure\r\n```",
              "createdAt": "2023-06-16T14:04:10Z",
              "updatedAt": "2023-06-16T14:04:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YbbhY",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T14:04:27Z",
          "updatedAt": "2023-06-16T14:04:28Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nfor JWT (SD-JWT) format [@!I-D.ietf-oauth-selective-disclosure-jwt].\r\n```",
              "createdAt": "2023-06-16T14:04:27Z",
              "updatedAt": "2023-06-16T14:04:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ybb65",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T14:05:12Z",
          "updatedAt": "2023-06-16T14:05:13Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-06-16T14:05:12Z",
              "updatedAt": "2023-06-16T14:05:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YbcnB",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T14:06:00Z",
          "updatedAt": "2023-06-16T14:06:00Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I think this section distracts from the real topic. ",
              "createdAt": "2023-06-16T14:06:00Z",
              "updatedAt": "2023-06-16T14:06:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc2Hh",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T16:56:46Z",
          "updatedAt": "2023-06-16T16:56:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "because I think acronyms should be expanded when used the first time. we are deep in the details, but many do not know what SD-JWT is when they see it for the first time. and we should not assume that anyone reading this already knows what SD-JWT is.",
              "createdAt": "2023-06-16T16:56:46Z",
              "updatedAt": "2023-06-16T16:56:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc2l_",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T16:57:52Z",
          "updatedAt": "2023-06-16T16:57:52Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "why? I think SD/no SD needs to be highlighted in the intro. I am pretty sure we will keep getting questions if this spec supports no disclosure too if we don't put it crystal clear.",
              "createdAt": "2023-06-16T16:57:52Z",
              "updatedAt": "2023-06-16T16:57:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc3oD",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T16:59:35Z",
          "updatedAt": "2023-06-16T16:59:35Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "if this document talks about credentials without selective disclosure, it is contradictory to also have a text that explains why selective disclosure is necessary for three-party-model..",
              "createdAt": "2023-06-16T16:59:35Z",
              "updatedAt": "2023-06-16T16:59:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc4C7",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:00:50Z",
          "updatedAt": "2023-06-16T17:00:50Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nIn that case, the SD-JWT VC MUST NOT contain the `_sd` claim in the JWT body. I also\r\nMUST NOT have any Disclosures.\r\n```",
              "createdAt": "2023-06-16T17:00:50Z",
              "updatedAt": "2023-06-16T17:00:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc4Xc",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:01:15Z",
          "updatedAt": "2023-06-16T17:01:15Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I prefer avoiding two normative requirements (MUST NOTs) in the same sentence.",
              "createdAt": "2023-06-16T17:01:15Z",
              "updatedAt": "2023-06-16T17:01:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc6fx",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:06:36Z",
          "updatedAt": "2023-06-16T17:06:37Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "thanks - I think it reads better now.",
              "createdAt": "2023-06-16T17:06:36Z",
              "updatedAt": "2023-06-16T17:06:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc7Uj",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:09:17Z",
          "updatedAt": "2023-06-16T17:09:17Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "outdated with torsten's commit.",
              "createdAt": "2023-06-16T17:09:17Z",
              "updatedAt": "2023-06-16T17:09:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc7aR",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:09:35Z",
          "updatedAt": "2023-06-16T17:09:35Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "outdated with torsten's commit.",
              "createdAt": "2023-06-16T17:09:35Z",
              "updatedAt": "2023-06-16T17:09:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yc74B",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:10:41Z",
          "updatedAt": "2023-06-16T17:10:41Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "aaa that is an important question. It is a little counter intuitive, but if sd-jwt is the basis of jwt vcs ending with Tilde will be more natural and will be a nice differentiator between normal jwts and jwt vcs..?",
              "createdAt": "2023-06-16T17:10:41Z",
              "updatedAt": "2023-06-16T17:10:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YdIOP",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T17:42:48Z",
          "updatedAt": "2023-06-16T17:42:49Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nIn that case, the SD-JWT VC MUST NOT contain the `_sd` claim in the JWT body. It also\r\n```",
              "createdAt": "2023-06-16T17:42:49Z",
              "updatedAt": "2023-06-16T17:42:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yfi6b",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-17T04:04:58Z",
          "updatedAt": "2023-06-17T04:04:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yg1By",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T07:52:02Z",
          "updatedAt": "2023-06-18T07:52:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I guess this should be aligned with: https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/132",
              "createdAt": "2023-06-18T07:52:02Z",
              "updatedAt": "2023-06-18T07:52:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yg17B",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T08:02:40Z",
          "updatedAt": "2023-06-18T08:02:40Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I agree that the supported securing mechanisms should be explicit.\r\n\r\nShould the specification define which claims can be hidden and which not when SD is applied? e.g., iss, exp, nbf, cnf is probably conditional.",
              "createdAt": "2023-06-18T08:02:40Z",
              "updatedAt": "2023-06-18T08:02:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yg-wJ",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-18T10:33:22Z",
          "updatedAt": "2023-06-18T10:33:22Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "This is already the case.\n> If present, the following registered JWT claims MUST be included in the SD-JWT and MUST NOT be included in the Disclosures, i.e. cannot be selectively disclosed:",
              "createdAt": "2023-06-18T10:33:22Z",
              "updatedAt": "2023-06-18T10:33:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ym452",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T17:03:39Z",
          "updatedAt": "2023-06-19T17:03:39Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nAn SD-JWT VC MAY have no selectively disclosable claims.\r\n```",
              "createdAt": "2023-06-19T17:03:39Z",
              "updatedAt": "2023-06-19T17:03:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ym5eB",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T17:05:56Z",
          "updatedAt": "2023-06-19T17:05:56Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nWe would like to thank\r\nAlen Horvat,\r\nAndres Uribe,\r\nBrian Campbell,\r\nChristian Bormann,\r\nGiuseppe De Marco,\r\nMichael Jones,\r\nMike Prorock,\r\nOrie Steele,\r\nPaul Bastian,\r\nTorsten Lodderstedt,\r\nTobias Looker, and\r\nKristina Yasuda\r\nfor their contributions (some of which substantial) to this draft and to the initial set of implementations.\r\n```",
              "createdAt": "2023-06-19T17:05:56Z",
              "updatedAt": "2023-06-19T17:05:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ym5x4",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T17:07:13Z",
          "updatedAt": "2023-06-19T17:07:13Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nMUST NOT have any Disclosures. For issuance, the trailing `~` MUST BE omitted from the SD-JWT.\r\nFor presentation the trailing `~` MUST BE omitted unless a Key Binding JWT is present.\r\n```",
              "createdAt": "2023-06-19T17:07:13Z",
              "updatedAt": "2023-06-19T17:07:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ym56v",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T17:07:45Z",
          "updatedAt": "2023-06-19T17:07:45Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "```suggestion\r\n#### SD-JWT VC without Selectively Disclosable Claims\r\n```",
              "createdAt": "2023-06-19T17:07:45Z",
              "updatedAt": "2023-06-19T17:07:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YnqBO",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T19:29:20Z",
          "updatedAt": "2023-06-19T19:29:21Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I agree that the \"with JSON payloads\" wording is clunky and should go.  All JWTs have JSON payloads, so we don't need to say so in the title.",
              "createdAt": "2023-06-19T19:29:21Z",
              "updatedAt": "2023-06-19T19:29:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ynt5K",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T19:33:29Z",
          "updatedAt": "2023-06-19T19:33:30Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Also, see https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/132, which requests a parallel change to the title.",
              "createdAt": "2023-06-19T19:33:29Z",
              "updatedAt": "2023-06-19T19:33:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yn7aQ",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "I prefer https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/120 since I find its description of what we're achieving more natural / less surprising.  But I can live with this description as well, provided the distracting \"with JSON Claims\" language is removed.",
          "createdAt": "2023-06-19T19:59:20Z",
          "updatedAt": "2023-06-19T19:59:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yn8f3",
          "commit": {
            "abbreviatedOid": "72d7a7e"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T20:04:34Z",
          "updatedAt": "2023-06-19T20:04:34Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "#132 should be addressed after we have clarity on direction whether #120 or #131.\r\n\r\njfyi `Selective Disclosure for JWT and JWS with JSON payloads (SD-JWT)` is a new spec title for SD-JWT, and \"JWS with JSON payloads\" is meant to cater for JSON serialization which is not allowed in JWT.",
              "createdAt": "2023-06-19T20:04:34Z",
              "updatedAt": "2023-06-19T20:04:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yn9VW",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T20:09:00Z",
          "updatedAt": "2023-06-19T20:09:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "let's bikeshed the title in this PR for what is in scope for this PR. and then see if it is aligned or not with #132.",
              "createdAt": "2023-06-19T20:09:00Z",
              "updatedAt": "2023-06-19T20:09:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YoE3z",
          "commit": {
            "abbreviatedOid": "9ceaabf"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T20:39:31Z",
          "updatedAt": "2023-06-19T20:39:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The full (and admittedly clunky) title of SD-JWT doesn't need to be spelled out here though.  (and ugh we should have capitalized Payloads in that title)  \r\n```suggestion\r\nfor JWT (SD-JWT) [@!I-D.ietf-oauth-selective-disclosure-jwt] format.\r\n```",
              "createdAt": "2023-06-19T20:39:32Z",
              "updatedAt": "2023-06-19T20:39:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YoIB8",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-19T20:52:53Z",
          "updatedAt": "2023-06-19T20:52:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I believe it is important to clarify what the specification is trying to achieve.\r\nJWS: compact or JSON serialised JWS -> protection mechanism + serialisation\r\nSD-JWT: SD-JWT serialisation (JWS+disclosures+tilde) or JSON serialised JWS -> protection mechanism + serialisation --> note that this could be fixed if the SD authors agree to. Issue is still open, a viable proposal is on the table.\r\nJWT: compact serialised JWS -> claim set + protection\r\nid token -> JWT + rules for the claims -> claim set + verification rules + protection\r\n\r\nIf I understand correctly, this specification defines a profile for Verifiable Credentials with the JWT claims set. So\r\nvc+jwt -> claim set (VC + JWT claims), verification rules + protection (JWS or SD-JWT)\r\n\r\nIf my understanding is correct and if the specification is defining a new type, like in #132: vc+jwt, the specification can be defined as:\r\nVerifiable Credential with JWT claims and protected by JWS (any serialisation) and/or SD-JWT\r\n\r\nOr define a new brand:\r\n- Verifiable Web Tokens (I prefer this one)\r\n- JSON Verifiable Credentials\r\n- JSON Web Credentials\r\n- Verifiable Credential Tokens (don't like this one)\r\n\r\nI agree with @selfissued  that \"with JSON\" payloads is clumsy/confusing.\r\n\r\nNote: ID Tokens are not called JWT ID nor ID JWT ;)",
              "createdAt": "2023-06-19T20:52:53Z",
              "updatedAt": "2023-06-19T20:54:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ypekc",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-20T04:07:44Z",
          "updatedAt": "2023-06-20T04:07:45Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I don't think things need to be that complicated...\r\n\r\nBottomline, there is a need for a credential format that uses JWT claim set in the payload, and depending on the use-case there may or may not be a need for selective disclosure. To achieve that we are exploring two approaches:\r\n1. define a credential format without SD based on JWT RFC (JWT VC) and with SD based on the IETF SD-JWT draft (SD-JWT VC) - PR #120\r\n2. define a credential format based on IETF SD-JWT that can be with or without SD (SD-WT VC) - PR #131\r\n\r\nthat's it.",
              "createdAt": "2023-06-20T04:07:44Z",
              "updatedAt": "2023-06-20T04:07:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Ypgwy",
          "commit": {
            "abbreviatedOid": "f3a04a7"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-20T04:17:44Z",
          "updatedAt": "2023-06-20T04:17:45Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "if we keep approach in this PR, `~` needs to stay even when there is no SD.",
              "createdAt": "2023-06-20T04:17:44Z",
              "updatedAt": "2023-06-20T04:17:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YphZW",
          "commit": {
            "abbreviatedOid": "a623ffc"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-20T04:19:42Z",
          "updatedAt": "2023-06-20T04:19:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nfor JWTs (SD-JWT) [@!I-D.ietf-oauth-selective-disclosure-jwt] format.\r\n```",
              "createdAt": "2023-06-20T04:19:42Z",
              "updatedAt": "2023-06-20T04:19:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YpoG_",
          "commit": {
            "abbreviatedOid": "2ac2b2f"
          },
          "author": "alenhorvat",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-20T04:53:22Z",
          "updatedAt": "2023-06-20T04:53:22Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Hi @Sakurann . I agree that id doesn't have to be that complicated. IMO 2nd approach is cleaner as you can clearly split the data model and protection mechanisms.\r\nSee:\r\n> If I understand correctly, this specification defines a profile for Verifiable Credentials with the JWT claims set. So\r\n> vc+jwt -> claim set (VC + JWT claims), verification rules + protection (JWS or SD-JWT)\r\n\r\nFrom your answer I understand you agree with \"this specification defines a profile for Verifiable Credentials with the JWT claims set\"\r\nFrom design perspective, proposal 2 is better. Having a data model that depends on the signature format has limited re-usability. Let's assume a new signature or SD for JWT format is introduced. Would this required new data model specifications?\r\n\r\nEdit: Note that the trailing tilde in the limit of no SD will raise many questions.\r\nI recommend to define a data model here and present how the credential is protected in the case of JWS or SD-JWT. (Similar to the OIDC ID token specification part)",
              "createdAt": "2023-06-20T04:53:22Z",
              "updatedAt": "2023-06-20T04:57:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5Yp2_O",
          "commit": {
            "abbreviatedOid": "1582aec"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-20T06:00:19Z",
          "updatedAt": "2023-06-20T06:00:19Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I don't think it needs to be highlighted in the introduction. Rationale is sufficient in my opinion.",
              "createdAt": "2023-06-20T06:00:19Z",
              "updatedAt": "2023-06-20T06:00:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YvxaW",
          "commit": {
            "abbreviatedOid": "1582aec"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T19:54:25Z",
          "updatedAt": "2023-06-20T19:54:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yvx31",
          "commit": {
            "abbreviatedOid": "1582aec"
          },
          "author": "tplooker",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T19:55:44Z",
          "updatedAt": "2023-06-20T19:55:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YvyY-",
          "commit": {
            "abbreviatedOid": "0ec7de6"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-20T19:56:54Z",
          "updatedAt": "2023-06-20T19:56:54Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "in other issue.",
              "createdAt": "2023-06-20T19:56:54Z",
              "updatedAt": "2023-06-20T19:56:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YvywZ",
          "commit": {
            "abbreviatedOid": "0ec7de6"
          },
          "author": "c2bo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T19:58:01Z",
          "updatedAt": "2023-06-20T19:58:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yvy6C",
          "commit": {
            "abbreviatedOid": "0ec7de6"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T19:58:29Z",
          "updatedAt": "2023-06-20T19:58:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YvzbY",
          "commit": {
            "abbreviatedOid": "0ec7de6"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I approve this approach over #120 as,\r\n- the specification is much cleaner\r\n- I expect implementations to be much cleaner\r\n- I don't see confusion with trailing tilde, because typ is not jwt but sd-jwt\r\n- most interop profiles will require SD support anyway",
          "createdAt": "2023-06-20T19:59:20Z",
          "updatedAt": "2023-06-20T19:59:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YvziA",
          "commit": {
            "abbreviatedOid": "0ec7de6"
          },
          "author": "tlodderstedt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T19:59:33Z",
          "updatedAt": "2023-06-20T19:59:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YvznJ",
          "commit": {
            "abbreviatedOid": "0ec7de6"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T19:59:44Z",
          "updatedAt": "2023-06-20T19:59:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y2chh",
          "commit": {
            "abbreviatedOid": "8066e23"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "approving but will create an issue to address trailing tilde.",
          "createdAt": "2023-06-21T12:52:33Z",
          "updatedAt": "2023-06-21T12:52:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 132,
      "id": "PR_kwDOJbVClc5TOLig",
      "title": "Update draft-terbu-sd-jwt-vc.md",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/132",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "discuss",
        "DO NOT MERGE"
      ],
      "body": "",
      "createdAt": "2023-06-16T19:26:58Z",
      "updatedAt": "2023-06-26T13:54:23Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "588ea557ea5861784bbaf7051eddefdeb6d0751f",
      "headRepository": "OR13/draft-terbu-sd-jwt-vc",
      "headRefName": "patch-1",
      "headRefOid": "3a077c11d9a07780b54e6f64cb673e10c814523b",
      "closedAt": "2023-06-26T13:54:22Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> the \"with JSON payloads\" wording is clunky and redundant. All JWTs have JSON payloads.\r\n\r\nbut not all JWS, which can sign anything. this is a way to draw a line with a document in W3C which uses JWS to sign over JSON-LD.",
          "createdAt": "2023-06-19T20:01:46Z",
          "updatedAt": "2023-06-19T20:01:46Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "Closing this PR, we will try again later.... this document should be titled vc-jwt, since it does not describe securing other content types.",
          "createdAt": "2023-06-26T13:54:22Z",
          "updatedAt": "2023-06-26T13:54:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Ydy9Q",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T19:27:51Z",
          "updatedAt": "2023-06-16T19:27:51Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nabbrev = \"JWT-VC\"\r\n```",
              "createdAt": "2023-06-16T19:27:51Z",
              "updatedAt": "2023-06-16T19:27:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YdzIu",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T19:28:21Z",
          "updatedAt": "2023-06-16T19:28:21Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "^ can we reverse to \"VC-JWT\" ?",
              "createdAt": "2023-06-16T19:28:21Z",
              "updatedAt": "2023-06-16T19:28:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YdzKH",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "approve of this but see suggestion on abbrev",
          "createdAt": "2023-06-16T19:28:22Z",
          "updatedAt": "2023-06-16T19:28:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YdzPz",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-16T19:28:37Z",
          "updatedAt": "2023-06-16T19:28:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "totally good with that",
              "createdAt": "2023-06-16T19:28:37Z",
              "updatedAt": "2023-06-16T19:28:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJbVClc5YfjDr",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Reasoning for name change.\n\n1. Verifiable Credential is the new part not JWT or SD-JWT.\n2. This item focuses on securing Verifiable Credential with 2 existing IETF work items, so you can't start the name of the work item with 2 formats, but you can start it with the name of the thing that has 2 secured representations.\n3. This is truly the vc-jwt spec, the one at W3C is focused on vc+ld+json... We should make the names as simple and clear as possible.\n4. Putting JWT first is not correct, if the typ values differ in the spec and don't both use +jwt suffix (this is a variation on 2).",
          "createdAt": "2023-06-17T04:10:02Z",
          "updatedAt": "2023-06-17T04:10:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5YnszL",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "the \"with JSON payloads\" wording is clunky and redundant.  All JWTs have JSON payloads.",
          "createdAt": "2023-06-19T19:32:41Z",
          "updatedAt": "2023-06-19T19:32:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Yn7ZE",
          "commit": {
            "abbreviatedOid": "3a077c1"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "we need to make a decision whether to go #120 or #131 path. and I am personally more and more favorable towards #131. and this PR is more inline with #120 than #131.",
          "createdAt": "2023-06-19T19:59:14Z",
          "updatedAt": "2023-06-19T19:59:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 133,
      "id": "PR_kwDOJbVClc5TXwHW",
      "title": "Update names of included files for examples",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/133",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Update names of included files for examples for when/if https://github.com/danielfett/sd-jwt/pull/11 gets merged into the reference implementation used to generate the examples",
      "createdAt": "2023-06-19T19:26:57Z",
      "updatedAt": "2023-06-22T09:29:37Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "9119083958ea6f636927df22c9a5769400558f3f",
      "headRepository": "bc-pi/draft-terbu-sd-jwt-vc",
      "headRefName": "tilde-and-terms",
      "headRefOid": "7fe048b09f12ef17399b8b5055c41eef36eef403",
      "closedAt": "2023-06-22T09:29:36Z",
      "mergedAt": "2023-06-22T09:29:36Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "f077f9b30ce88b0bda2c301134ba932d58c68f21"
      },
      "comments": [
        {
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@awoie This should be merged immediately after I merged this PR in the library: https://github.com/danielfett/sd-jwt/pull/11 - let's coordinate.",
          "createdAt": "2023-06-20T14:39:27Z",
          "updatedAt": "2023-06-20T14:39:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Yte3p",
          "commit": {
            "abbreviatedOid": "7fe048b"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-20T14:37:57Z",
          "updatedAt": "2023-06-20T14:37:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y-epN",
          "commit": {
            "abbreviatedOid": "7fe048b"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-06-22T09:26:33Z",
          "updatedAt": "2023-06-22T09:26:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 138,
      "id": "PR_kwDOJbVClc5Tlgze",
      "title": "Replace \"Three-Party-Model\" with \"Issuer-Holder-Verifier Model\"",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/138",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #111\r\n\r\n## \ud83d\udcd1 Description\r\nReplace \"Three-Party-Model\" with \"Issuer-Holder-Verifier Model\"\r\n",
      "createdAt": "2023-06-21T19:48:17Z",
      "updatedAt": "2023-06-22T09:34:37Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "85d396fe5e5a690da72fe8b3109af58b56399d43",
      "headRepository": "bc-pi/draft-terbu-sd-jwt-vc",
      "headRefName": "3s-company",
      "headRefOid": "ce827c423e9a4b3dc0597e2e12aa61f3d0f500cd",
      "closedAt": "2023-06-22T09:34:37Z",
      "mergedAt": "2023-06-22T09:34:37Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "0e66e74f7fbdbea787ec15016af8960843dd2096"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Y-WxG",
          "commit": {
            "abbreviatedOid": "ce827c4"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks, lgtm",
          "createdAt": "2023-06-22T09:08:20Z",
          "updatedAt": "2023-06-22T09:08:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y-htj",
          "commit": {
            "abbreviatedOid": "ce827c4"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-22T09:33:45Z",
          "updatedAt": "2023-06-22T09:33:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 139,
      "id": "PR_kwDOJbVClc5TlnBU",
      "title": "Make the title shorter, simpler and less clunky",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/139",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As @selfissued has aptly pointed out, 'the \"with JSON payloads\" wording is clunky and redundant.'",
      "createdAt": "2023-06-21T20:05:42Z",
      "updatedAt": "2023-06-22T09:36:29Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "85d396fe5e5a690da72fe8b3109af58b56399d43",
      "headRepository": "bc-pi/draft-terbu-sd-jwt-vc",
      "headRefName": "less-is-more",
      "headRefOid": "ca4662566a54a0bb9495eba10e69f45e74bfcc44",
      "closedAt": "2023-06-22T09:36:28Z",
      "mergedAt": "2023-06-22T09:36:28Z",
      "mergedBy": "danielfett",
      "mergeCommit": {
        "oid": "46194ce95221f2a852c062a33ba9c2324a942a9f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5Y-ik0",
          "commit": {
            "abbreviatedOid": "ca46625"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I see no reason to have the \"with JSON payloads\" in the title",
          "createdAt": "2023-06-22T09:35:48Z",
          "updatedAt": "2023-06-22T09:35:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5Y-ipf",
          "commit": {
            "abbreviatedOid": "ca46625"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-06-22T09:35:58Z",
          "updatedAt": "2023-06-22T09:35:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 140,
      "id": "PR_kwDOJbVClc5Tuvjf",
      "title": "Update CODEOWNERS",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/140",
      "state": "MERGED",
      "author": "awoie",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses # <!-- Issue # here -->\r\n\r\n## \ud83d\udcd1 Description\r\n<!-- Add a brief description of the pr -->\r\n\r\n<!-- You can also choose to add a list of changes and if they have been completed or not by using the markdown to-do list syntax\r\n- [ ] Not Completed\r\n- [x] Completed\r\n-->\r\n\r\n## Preview Link\r\n\r\n<!-- Update the link below to provide reviewers with a convenient link to view a rendered version of the PR-->\r\n<!-- In general the link should be of the form https://github.com/<repo-name>/<branch-name>/<draft-name>.html-->\r\n\r\n[click here for rendered preview of PR](https://github.com/<repo-name>/<branch-name>/<draft-name>.html)",
      "createdAt": "2023-06-23T09:22:22Z",
      "updatedAt": "2023-06-23T09:24:38Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "8e6fcf5ffcc760f14bc0629f479f5b1f18aa7b8a",
      "headRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "headRefName": "awoie-patch-1",
      "headRefOid": "c6448270c1a17e10736fe643628ca4d450037fb9",
      "closedAt": "2023-06-23T09:24:37Z",
      "mergedAt": "2023-06-23T09:24:37Z",
      "mergedBy": "awoie",
      "mergeCommit": {
        "oid": "cfaed1134f80b3aa73d878c5bddafa72cdcfb647"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5ZGKwR",
          "commit": {
            "abbreviatedOid": "c644827"
          },
          "author": "danielfett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-23T09:22:56Z",
          "updatedAt": "2023-06-23T09:22:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 141,
      "id": "PR_kwDOJbVClc5TyYpo",
      "title": "remove requirement to have kid in cnf",
      "url": "https://github.com/vcstuff/draft-terbu-sd-jwt-vc/pull/141",
      "state": "OPEN",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<!-- If this pull request closes an issue, please mention the issue number below -->\r\nCloses #97\r\n\r\n## \ud83d\udcd1 Description\r\nremove requirement to have kid in cnf\r\n",
      "createdAt": "2023-06-23T21:46:30Z",
      "updatedAt": "2023-06-26T15:28:26Z",
      "baseRepository": "vcstuff/draft-terbu-sd-jwt-vc",
      "baseRefName": "main",
      "baseRefOid": "cfaed1134f80b3aa73d878c5bddafa72cdcfb647",
      "headRepository": "bc-pi/draft-terbu-sd-jwt-vc",
      "headRefName": "no-kid-in-cnf-jwk",
      "headRefOid": "b1f4d16cfde9c4312a5cacbd9ec41c0c3c3695ed",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think more text can be removed here...\r\n> \r\n> Are we trying to prevent users from doing this:\r\n\r\nWe are not trying to prevent that in this spec. The default should be the `jwk` cnf method but this is not what the PR changed or added. This PR just removes the requirement that the `kid` has to be in the `jwk` claim. This PR does not talk about the `kid` cnf method which is still an option. ",
          "createdAt": "2023-06-26T14:53:10Z",
          "updatedAt": "2023-06-26T14:53:10Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "NONE",
          "body": "btw, I added a related comment here: https://github.com/w3c/vc-jwt/pull/111",
          "createdAt": "2023-06-26T15:28:25Z",
          "updatedAt": "2023-06-26T15:28:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJbVClc5ZLKSS",
          "commit": {
            "abbreviatedOid": "b1f4d16"
          },
          "author": "paulbastian",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-23T21:58:51Z",
          "updatedAt": "2023-06-23T21:58:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5ZUzHX",
          "commit": {
            "abbreviatedOid": "b1f4d16"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "I think more text can be removed here...\r\n\r\nAre we trying to prevent users from doing this: \r\n\r\n```json\r\n{\r\n      \"iss\": \"https://server.example.com\",\r\n      \"aud\": \"https://client.example.org\",\r\n      \"exp\": 1361398824,\r\n      \"cnf\":{\r\n        \"kid\": \"dfd1aa97-6d8d-4575-a0fe-34b96de2bfad\"\r\n       }\r\n     }\r\n```\r\n\r\n```json\r\n{\r\n      \"iss\": \"did:example:123\",\r\n      \"aud\": \"https://client.example.org\",\r\n      \"exp\": 1361398824,\r\n      \"cnf\":{\r\n        \"kid\": \"did:example:123#key-42\"\r\n       }\r\n     }\r\n```\r\n\r\nSeems like it should just say support RFC7800.\r\n\r\nAnd make no recommendations on `jwk` vs `kid`",
          "createdAt": "2023-06-26T14:01:48Z",
          "updatedAt": "2023-06-26T14:01:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5ZVRH-",
          "commit": {
            "abbreviatedOid": "b1f4d16"
          },
          "author": "awoie",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-06-26T14:53:40Z",
          "updatedAt": "2023-06-26T14:53:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJbVClc5ZViID",
          "commit": {
            "abbreviatedOid": "b1f4d16"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Approving based on @awoie ",
          "createdAt": "2023-06-26T15:26:34Z",
          "updatedAt": "2023-06-26T15:26:34Z",
          "comments": []
        }
      ]
    }
  ]
}